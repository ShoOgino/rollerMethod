    /**
     * Return Atom service document for site, getting blog-name from pathInfo.
     * Since a user can (currently) have only one blog, one workspace is returned.
     * The workspace will contain collections for entries, categories and resources.
     */
    public AtomService getIntrospection(String[] pathInfo) throws Exception {
        if (pathInfo.length == 0) {
            String absUrl = mRollerContext.getAbsoluteContextUrl(mRequest);
            AtomService service = new AtomService();
            UserData user = mRoller.getUserManager().getUser(mUsername);
            List perms = mRoller.getUserManager().getAllPermissions(user);
            if (perms != null) {
                for (Iterator iter=perms.iterator(); iter.hasNext();) {
                    PermissionsData perm = (PermissionsData)iter.next();
                    String handle = perm.getWebsite().getHandle();
                    AtomService.Workspace workspace = new AtomService.Workspace();
                    workspace.setTitle("Workspace: Collections for " + handle);
                    service.addWorkspace(workspace);
                    
                    AtomService.Collection entryCol = new AtomService.Collection();
                    entryCol.setTitle("Collection: Weblog Entries for " + handle);
                    entryCol.setContents("entries");
                    entryCol.setHref(absUrl + ctx +handle+"/entries");
                    workspace.addCollection(entryCol);
                    
                    AtomService.Collection catCol = new AtomService.Collection();
                    catCol.setTitle("Collection: Categories for " + handle);
                    catCol.setContents("categories");
                    catCol.setHref(absUrl + ctx + handle+"/categories");
                    workspace.addCollection(catCol);
                    
                    AtomService.Collection uploadCol = new AtomService.Collection();
                    uploadCol.setTitle("Collection: File uploads for " + handle);
                    uploadCol.setContents("generic");
                    uploadCol.setHref(absUrl + ctx + handle+"/resources");
                    workspace.addCollection(uploadCol);
                }
            }
            return service;
        }
        throw new Exception("ERROR: bad URL in getIntrospection()");
    }


    //------------------------------------------------------------------------------
    /** 
     * Test get of entries collection URI
     */
    public void testGetEntriesCollection() throws Exception
    {
        UserData user = (UserData)mUsersCreated.get(0);        
                
        // get entries collection
        MockHttpServletRequest mockRequest = getMockFactory().getMockRequest();
        mockRequest.addHeader("X-WSSE", 
                generateWSSEHeader(user.getUserName(), user.getPassword()));
        mockRequest.setContextPath("/atom");
        mockRequest.setPathInfo("/" + user.getUserName() + "/entries");
        getServletModule().doGet();
        
        // assert that we got 20 entries
        String output = getServletModule().getOutput();
        SAXBuilder builder = new SAXBuilder();
        Document doc = builder.build(new StringReader(output));
        AtomCollection col = AtomCollection.documentToCollection(doc);
        assertEquals(20, col.getMembers().size());
        
        // use collection next URI to get next batch of entries
        resetMocks();
        String[] next = Utilities.stringToStringArray(col.getNext(), "/");
        
        mockRequest = getMockFactory().getMockRequest();
        mockRequest.addHeader("X-WSSE", 
            generateWSSEHeader(user.getUserName(), user.getPassword()));
        mockRequest.setContextPath("/atom");
        mockRequest.setPathInfo(
            "/" + user.getUserName() + "/entries/" + next[next.length-1]);
        getServletModule().doGet();

        // assert that we got another 20 entries
        output = getServletModule().getOutput();
        doc = builder.build(new StringReader(output));
        col = AtomCollection.documentToCollection(doc);
        assertEquals(10, col.getMembers().size());   
    }


    //------------------------------------------------------------------------------
    /** 
     * Test that POST to the PostURI returns an entry.
     */
    public void testPostEntry() throws Exception
    {
        UserData user = (UserData)mUsersCreated.get(0);        
        
        // Create an entry in a feed, so Rome can handle it
        Content content = new Content();
        content.setMode(Content.ESCAPED);
        content.setValue("test entry text");
        List contents = new ArrayList();
        contents.add(content);

        Entry entry = new Entry();
        entry.setTitle("test entry title");
        entry.setContents(contents);
        
        StringWriter entryWriter = new StringWriter();
        AtomServlet.serializeEntry(entry, entryWriter);
        
        MockHttpServletRequest mockRequest = getMockFactory().getMockRequest();
        mockRequest.setContextPath("/atom");
        mockRequest.setPathInfo(user.getUserName() + "/entries/");
        mockRequest.addHeader("X-WSSE", 
                generateWSSEHeader(user.getUserName(), user.getPassword()));
        mockRequest.setBodyContent(entryWriter.toString());
        getServletModule().doPost();

        String output = getServletModule().getOutput();
        Entry returnedEntry = AtomServlet.parseEntry(new StringReader(output));        
        assertEquals(returnedEntry.getTitle(), entry.getTitle());
        
        MockHttpServletResponse mockResponse = getMockFactory().getMockResponse();
        assertEquals(HttpServletResponse.SC_CREATED, mockResponse.getStatusCode());
        assertTrue(mockResponse.containsHeader("Location"));
       
        getRoller().release();
        resetMocks();

        Entry fetchedEntry = getEntry(user, returnedEntry.getId());
        assertEquals(returnedEntry.getId(), fetchedEntry.getId());
    }


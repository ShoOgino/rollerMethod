    /* (non-Javadoc)
     * @see org.apache.roller.business.WeblogManager#getPopularTags(org.apache.roller.pojos.WebsiteData, java.util.Date, int)
     */
    public List getPopularTags(WebsiteData website, Date startDate, int limit)
            throws RollerException {
        DatamapperQuery query = null;
        List queryResults = null;
        
        if (website != null) {
            if (startDate != null) {
                query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getPopularTagsByWebsite&StartDate");
                if (limit > 0) query.setRange(0, limit);
                queryResults = (List) query.execute(new Object[] {website, startDate});
            } else {
                query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getPopularTagsByWebsite");
                if (limit > 0) query.setRange(0, limit);
                queryResults = (List) query.execute(startDate);                
            }
        } else {
            if (startDate != null) {
                query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getPopularTagsByWebsiteNull&StartDate");
                if (limit > 0) query.setRange(0, limit);
                queryResults = (List) query.execute(startDate);
            } else {
                query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getPopularTagsByWebsiteNull");
                if (limit > 0) query.setRange(0, limit);
                queryResults = (List) query.execute();                
            }
        }

        // TODO queryString.append("order by sum(total) desc");  ???
        
        double min = Integer.MAX_VALUE;
        double max = Integer.MIN_VALUE;

        List results = new ArrayList(limit);
            
        for (Iterator iter = queryResults.iterator(); iter.hasNext();) {
            Object[] row = (Object[]) iter.next();
            TagStat t = new TagStat();
            t.setName((String) row[0]);
            t.setCount(((Integer) row[1]).intValue());                
                
            min = Math.min(min, t.getCount());
            max = Math.max(max, t.getCount());                
            results.add(t);
        }
            
        min = Math.log(1+min);
        max = Math.log(1+max);

        double range = Math.max(.01, max - min) * 1.0001;
            
        for (Iterator iter = results.iterator(); iter.hasNext(); ) {
            TagStat t = (TagStat) iter.next();
            t.setIntensity((int) (1 + Math.floor(5 * (Math.log(1+t.getCount()) - min) / range)));
        }            

        // sort results by name, because query had to sort by total
        Collections.sort(results, tagStatComparator);
            
        return results;
    }


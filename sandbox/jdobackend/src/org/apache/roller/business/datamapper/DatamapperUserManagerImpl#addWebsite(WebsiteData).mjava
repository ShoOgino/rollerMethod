    public void addWebsite(WebsiteData newWebsite) 
            throws RollerException {
        strategy.store(newWebsite);
        
        // grant weblog creator ADMIN permissions
        PermissionsData perms = new PermissionsData();
        perms.setUser(newWebsite.getCreator());
        perms.setWebsite(newWebsite);
        perms.setPending(false);
        perms.setPermissionMask(PermissionsData.ADMIN);
        strategy.store(perms);
        
        // add default categories
        WeblogCategoryData rootCat = new WeblogCategoryData(
                null,      // id
                newWebsite, // newWeblog
                null,      // parent
                "root",    // name
                "root",    // description
                null );    // image
        strategy.store(rootCat);
        
        String cats = getProperty("newuser.categories");
        WeblogCategoryData firstCat = rootCat; 
        if (cats != null) {
            String[] splitcats = cats.split(",");
            for (int i = 0; i < splitcats.length; i++) {
                WeblogCategoryData c = new WeblogCategoryData(
                    null,            // id
                    newWebsite,      // newWebsite
                    rootCat,         // parent
                    splitcats[i],    // name
                    splitcats[i],    // description
                    null );          // image
                if (i == 0) firstCat = c;
                strategy.store(c);
            }
        }
        // Use first category as default for Blogger API
        newWebsite.setBloggerCategory(firstCat);
        
        // But default category for weblog itself should be  root
        newWebsite.setDefaultCategory(rootCat);

        strategy.store(newWebsite);
        
        // add default bookmarks
        FolderData root = new FolderData(null, "root", "root", newWebsite);
        strategy.store(root);
        
        Integer zero = new Integer(0);
        String blogroll = getProperty("newuser.blogroll");
        if (blogroll != null) {
            String[] splitroll = blogroll.split(",");
            for (int i = 0; i < splitroll.length; i++) {
                String[] rollitems = splitroll[i].split("\\|");
                if (rollitems != null && rollitems.length > 1) {
                    strategy.store(new BookmarkData(
                        root,                // parent
                        rollitems[0],        // name
                        "",                  // description
                        rollitems[1].trim(), // url
                        null,                // feedurl
                        zero,                // weight
                        zero,                // priority
                        null));              // image
                }
            }
        }
        
        // add any auto enabled ping targets
        Collection pingTargets = (Collection)strategy.newQuery(
                PingTargetData.class,
                "getByWebsiteNull&&AutoPingTrue")
            .execute();
        Iterator pingTargetIterator = pingTargets.iterator();
        PingTargetData pingTarget = null;
        while(pingTargetIterator.hasNext()) {
             pingTarget = (PingTargetData)pingTargetIterator.next();
            strategy.store(new AutoPingData(null, pingTarget, newWebsite));
        }
    }


    /*
     * (non-Javadoc)
     * 
     * @see org.apache.roller.business.WeblogManager#getTags(org.apache.roller.pojos.WebsiteData,
     *      java.lang.String, java.lang.String, int)
     */
    public List getTags(WebsiteData website, String sortBy, String startsWith, int limit) throws RollerException {    
        DatamapperQuery query = null;
        List queryResults = null;
        boolean sortByName = sortBy == null || !sortBy.equals("count");
        
        if (website != null) {
            if (startsWith != null) {
                if (sortByName) {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsite&NameStartsWithOrderByName");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(new Object[] {website, startsWith});
                } else {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsite&NameStartsWith");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(new Object[] {website, startsWith});
                }
            } else {
                if (sortByName) {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsiteOrderByName");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(startsWith);   
                } else {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsite");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(startsWith);   
                }
            }
        } else {
            if (startsWith != null) {
                if (sortByName) {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsiteNull&NameStartsWithOrderByName");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(startsWith);
                } else {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsiteNull&NameStartsWith");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute(startsWith);
                }
            } else {
                if (sortByName) {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsiteNullOrderByName");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute();
                } else {
                    query = strategy.newQuery(WeblogEntryTagAggregateData.class, "WeblogEntryTagAggregateData.getTagsByWebsiteNull");
                    if (limit > 0) query.setRange(0, limit);
                    queryResults = (List) query.execute();
                }
            }
        }
        
        List results = new ArrayList();
        for (Iterator iter = queryResults.iterator(); iter.hasNext();) {
            Object[] row = (Object[]) iter.next();
            TagStat ce = new TagStat();
            ce.setName((String) row[0]);
            ce.setCount(((Integer) row[1]).intValue());
            results.add(ce);
        }
        
        if (!sortByName) {
            Collections.sort(results, tagStatComparator);
        }
        
        return results;
    }


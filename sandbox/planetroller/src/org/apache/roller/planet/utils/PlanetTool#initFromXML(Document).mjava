    /**
     * Load config data from XML using XPath.
     */
    protected void initFromXML(Document doc) throws Exception, JDOMException {
        Map subsByID = new HashMap();
        Element elem = doc.getRootElement();
        
        config = new PlanetConfigData();
        config.setCacheDir(   getString(elem,"/planet-config/cache-dir"));
        config.setMainPage(   getString(elem,"/planet-config/main-page"));
        config.setGroupPage(  getString(elem,"/planet-config/group-page"));
        config.setAdminName(  getString(elem,"/planet-config/admin-name"));
        config.setAdminEmail( getString(elem,"/planet-config/admin-email"));
        config.setSiteURL(    getString(elem,"/planet-config/site-url"));
        config.setOutputDir(  getString(elem,"/planet-config/output-dir"));
        config.setTemplateDir(getString(elem,"/planet-config/template-dir"));
        config.setTitle(      getString(elem,"/planet-config/title"));
        config.setDescription(getString(elem,"/planet-config/description"));
        
        XPath subsPath = XPath.newInstance("/planet-config/subscription");
        Iterator subs = subsPath.selectNodes(doc).iterator();
        while (subs.hasNext()) {
            Element subElem = (Element)subs.next();
            PlanetSubscriptionData sub = new PlanetSubscriptionData();
            String id = subElem.getAttributeValue("id");
            sub.setTitle(   getString(subElem, "title"));
            sub.setAuthor(  getString(subElem, "author"));
            sub.setFeedURL( getString(subElem, "feed-url"));
            sub.setSiteURL( getString(subElem, "site-url"));
            subsByURL.put(sub.getFeedURL(), sub);
            subsByID.put(id, sub);
        }
        logger.info("Found "+subsByID.size()+" subscriptions");
        
        XPath groupsPath = XPath.newInstance("/planet-config/group");
        Iterator groups = groupsPath.selectNodes(doc).iterator();
        while (groups.hasNext()) {
            Element groupElem = (Element)groups.next();
            PlanetGroupData group = new PlanetGroupData();
            group.setHandle(groupElem.getAttributeValue("handle"));
            group.setTitle(          getString(groupElem, "title"));
            group.setDescription(    getString(groupElem, "description"));
            group.setMaxFeedEntries( getInt(   groupElem, "max-feed-entries"));
            group.setMaxPageEntries( getInt(   groupElem, "max-page-entries"));
            group.setCategoryRestriction(
                    getString(groupElem, "category-restriction"));
            
            XPath refsPath = XPath.newInstance("subscription-ref");
            Iterator refs = refsPath.selectNodes(groupElem).iterator();
            while (refs.hasNext()) {
                Element refElem = (Element)refs.next();
                String includeAll = refElem.getAttributeValue("include-all");
                if (includeAll != null && includeAll.equals("true")) {
                    group.getSubscriptions().addAll(subsByID.values());
                } else {
                    String refid = refElem.getAttributeValue("refid");
                    PlanetSubscriptionData sub = (PlanetSubscriptionData)subsByID.get(refid);
                    if (sub == null) {
                        throw new Exception("No such subscription ["+refid+"]");
                    }
                    group.getSubscriptions().add(sub);
                }
            }
            groupsByHandle.put(group.getHandle(), group);
        }
        logger.info("Found "+groupsByHandle.size()+" groups");
    }


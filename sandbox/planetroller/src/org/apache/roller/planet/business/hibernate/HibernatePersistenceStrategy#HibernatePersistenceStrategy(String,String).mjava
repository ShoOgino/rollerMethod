    /** 
     * Construct self using Hibernate config resource and optional dialect.
     * @param configResouce Classpath-based path to Hibernate config file (e.g. "/hibernate.cgf.xml")
     * @parma dialect Classname of Hibernate dialect to be used (overriding any specified in the configResource)
     */
    public HibernatePersistenceStrategy(
            String configResource,
            String dialect) throws Exception {

        log.info("configResource: " + configResource);
        log.info("dialect:        " + dialect);
        
        // read configResource into DOM form
        SAXBuilder builder = new SAXBuilder();
        builder.setEntityResolver(noOpEntityResolver); 
        Document configDoc = builder.build(
            getClass().getResourceAsStream(configResource));
        Element root = configDoc.getRootElement();
        Element sessionFactoryElem = root.getChild("session-factory");
        
        // remove any existing connection.datasource and dialect properties
        List propertyElems = sessionFactoryElem.getChildren("property");
        List removeList = new ArrayList();
        for (Iterator it = propertyElems.iterator(); it.hasNext();) {
            Element elem = (Element) it.next();
            if (elem.getAttribute("name") != null 
                && elem.getAttribute("name").getValue().equals("dialect")) {
                removeList.add(elem);           
            }
        }
        for (Iterator it = removeList.iterator(); it.hasNext();) {
            Element elem = (Element) it.next();
            sessionFactoryElem.removeContent(elem); 
        }
        
        // add Roller dialect property      
        Element prop = new Element("property").setAttribute(
            new Attribute("name","dialect"));
        prop.addContent(dialect);
        sessionFactoryElem.addContent(prop);
        
        Configuration config = new Configuration();
        DOMOutputter outputter = new DOMOutputter();
        config.configure(outputter.output(configDoc));
        this.sessionFactory = config.buildSessionFactory(); 
    }


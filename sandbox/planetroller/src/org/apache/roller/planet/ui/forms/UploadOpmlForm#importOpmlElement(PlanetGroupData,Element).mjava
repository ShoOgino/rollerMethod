    private void importOpmlElement(PlanetGroupData group, Element elem) throws Exception {

        String text = elem.getAttributeValue("text");        
        String title = elem.getAttributeValue("title");
        title =  null!=title ? title : text;
        
        String url = elem.getAttributeValue("url");
        String xmlUrl = elem.getAttributeValue("xmlUrl");
        xmlUrl =  null!=xmlUrl ? xmlUrl : url;

        String htmlUrl = elem.getAttributeValue("htmlUrl");
        url = null!=htmlUrl ? htmlUrl : url;
                
        if (elem.getChildren().size()==0) {
            // Leaf element, store a subscription
            if (null != title && null != xmlUrl) {  
                PlanetManager pmgr = PlanetFactory.getPlanet().getPlanetManager(); 
                
                // If subscription already exists in Planet, just use it
                PlanetSubscriptionData sub = pmgr.getSubscription(xmlUrl);
                
                // Otherwise create a new one
                if (sub == null) {      
                    sub = new PlanetSubscriptionData();
                    sub.setTitle(title);
                    sub.setFeedURL(xmlUrl);
                    sub.setSiteURL(url);  
                    pmgr.saveSubscription(sub);
                } 
                try {
                    // Save sub and add it to group
                    sub.getGroups().add(group);
                    group.getSubscriptions().add(sub); 
                    pmgr.saveSubscription(sub);
                    pmgr.saveGroup(group);
                    
                } catch (RollerException e) {
                    log.debug("ERROR: importing subscription with feedURL: " + xmlUrl);
                }
            }
        } else {          
            // Import folder's children
            Iterator iter = elem.getChildren("outline").iterator();
            while ( iter.hasNext() ) {
                Element subelem = (Element)iter.next();
                importOpmlElement(group, subelem);
            }
        }
    }


    /** Deserialize an Atom service collection XML element into an object */
    public static AtomService.Collection elementToCollection(Element element) {
        AtomService.Collection collection = new AtomService.Collection();
        collection.setHref(element.getAttribute("href").getValue());
        
        Element titleElem = element.getChild("title", atomns);
        if (titleElem != null) {
            collection.setTitle(titleElem.getText());
            if (titleElem.getAttribute("type", atomns) != null) {
                collection.setTitleType(titleElem.getAttribute("type", atomns).getValue());
            }
        }
                
        Element memberType = element.getChild("accept",  ns);
        if (memberType != null) {
            collection.setAccept(memberType.getText());
        }
        
        // Loop to parse <app:categories> element to Categories objects
        List catsElems = element.getChildren("categories", ns);
        for (Iterator catsIter = catsElems.iterator(); catsIter.hasNext();) {
            Element catsElem = (Element) catsIter.next();  
            Categories cats = new Categories();
            if ("yes".equals(catsElem.getAttribute("fixed", ns))) {
                cats.setFixed(true);
            }
            // Loop to parse <atom:category> elemenents to Category objects
            List catElems = catsElem.getChildren("category", atomns);
            for (Iterator catIter = catElems.iterator(); catIter.hasNext();) {                
                Element catElem = (Element) catIter.next();
                Category cat = new Category();
                cat.setTerm(catElem.getAttributeValue("term", atomns));                
                cat.setLabel(catElem.getAttributeValue("label", atomns)); 
                cat.setScheme(catElem.getAttributeValue("scheme", atomns));
                cats.addCategory(cat);
            }
            collection.addCategories(cats);
        }
        return collection;
    }


    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {    
        
        int limit = MAX_LENGTH;       
        try { 
            limit = Integer.parseInt(request.getParameter("limit"));
            if(limit > MAX_LENGTH) {
                limit = MAX_LENGTH;
            }
        } catch (Throwable ignored) {}
        
        String pathInfo = request.getPathInfo();
        String[] path = new String[0];
        
        if(!StringUtils.isEmpty(pathInfo)) {
            path = StringUtils.split(pathInfo, '/');
        }
                                        
        Roller roller = RollerFactory.getRoller();
        try {
            response.setContentType("text/html; charset=utf-8");
            
            WeblogManager wmgr = roller.getWeblogManager();
            WebsiteData website = null;
            String startsWith = null;            
            
            // request context is always the first path segment,
            // we expect the value to be either 'all' or 'weblog'
            // if the context is 'weblog' then the next part is a weblog handle
            if(path.length > 0) {
                String context = path[0];
                if(context != null && "weblog".equals(context)) {
                    try {
                        UserManager umgr = RollerFactory.getRoller().getUserManager();
                        website = umgr.getWebsiteByHandle(path[1], Boolean.TRUE);
                        if (website == null)
                            throw new RollerException();
                    } catch (RollerException ex) {
                        response.sendError(HttpServletResponse.SC_NOT_FOUND, "Weblog not found.");
                        return;
                    }
                } else if(context == null || !"all".equals(context) || path.length > 3) {
                    // bad url for this servlet
                    response.sendError(HttpServletResponse.SC_NOT_FOUND, "Bad url.");
                    return;
                }
            }
            
            if(path.length == 3) {
                startsWith = path[2].trim();
            } else if(path.length == 2 && website == null) {
                startsWith = path[1].trim();
            }
                                    
            List tags = wmgr.getTags(website, null, startsWith, limit);
            
            response.getWriter().println("{");
            response.getWriter().print("  prefix : \"");
            response.getWriter().print(startsWith == null ? "" : startsWith);
            response.getWriter().println("\",");
            response.getWriter().print("  weblog : \"");
            response.getWriter().print(website != null ? website.getHandle() : "");
            response.getWriter().println("\",");            
            response.getWriter().println("  tagcounts : [");
            for(Iterator it = tags.iterator(); it.hasNext();) {
                TagStat stat = (TagStat) it.next();
                response.getWriter().print("    { tag : \"");
                response.getWriter().print(stat.getName());
                response.getWriter().print("\", ");
                response.getWriter().print("count : ");
                response.getWriter().print(stat.getCount());
                response.getWriter().print(" }");
                if(it.hasNext())
                   response.getWriter().println(", ");
            }
            response.getWriter().println("\n  ]\n}");
            
            response.flushBuffer();
            
        } catch (RollerException e) {
            throw new ServletException(e.getMessage());
        }
    }


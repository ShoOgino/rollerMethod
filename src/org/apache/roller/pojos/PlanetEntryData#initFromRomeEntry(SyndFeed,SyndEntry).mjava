    /**
     * Init entry from Rome entry
     */
    private void initFromRomeEntry(SyndFeed romeFeed, SyndEntry romeEntry) {
        setAuthor(romeEntry.getAuthor());
        setTitle(romeEntry.getTitle());
        setPermaLink(romeEntry.getLink());
        
        // Play some games to get the date
        DCModule entrydc = (DCModule)romeEntry.getModule(DCModule.URI);
        DCModule feeddc = (DCModule)romeFeed.getModule(DCModule.URI);
        if (romeEntry.getPublishedDate() != null) {
            setPubTime(new Timestamp(romeEntry.getPublishedDate().getTime())); // use <pubDate>
        } else if (entrydc != null) {
            setPubTime(new Timestamp(entrydc.getDate().getTime())); // use <dc:date>
        }
        
        // get content and unescape if it is 'text/plain'
        if (romeEntry.getContents().size() > 0) {
            SyndContent content= (SyndContent)romeEntry.getContents().get(0);
            if (content != null && content.getType().equals("text/plain")) {
                setText(Utilities.unescapeHTML(content.getValue()));
            } else if (content != null) {
                setText(content.getValue());
            }
        }
        
        // no content, then try <content:encoded>
        if (getText() == null || getText().trim().length() == 0) {
            ContentModule cm = (ContentModule)romeEntry.getModule(ContentModule.URI);
            if (cm != null) {
                setText(Utilities.unescapeHTML(cm.getEncoded()));
            }
        }
        
        // copy categories
        if (romeEntry.getCategories().size() > 0) {
            List list = new ArrayList();
            Iterator cats = romeEntry.getCategories().iterator();
            while (cats.hasNext()) {
                SyndCategory cat = (SyndCategory)cats.next();
                list.add(cat.getName());
            }
            setCategoriesString(list);
        }
    }


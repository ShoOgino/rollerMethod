    /**
     * clear action.
     *
     * this is triggered when someone has indicated that they want to clear
     * one or all of the caches.
     */
    public ActionForward clear(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws IOException, ServletException {
        
        ActionForward forward = mapping.findForward("cacheInfo.page");
        
        try {
            BasePageModel pageModel = new BasePageModel(
                    "cacheInfo.title", request, response, mapping);
            request.setAttribute("model",pageModel);                
            RollerRequest rreq = RollerRequest.getRollerRequest(request);
            RollerSession rollerSession = RollerSession.getRollerSession(request);
            if (rollerSession.isGlobalAdminUser() ) {
                
                // see if a specific cache was specified
                String handlerClass = request.getParameter("cache");
                if(handlerClass != null && handlerClass.length() > 0) {
                    CacheManager.clear(handlerClass);
                } else {
                    CacheManager.clear();
                }
                
                // caching instrumentation
                Map cacheStats = CacheManager.getStats();
                request.setAttribute("cacheStats", cacheStats);
                
            } else {
                forward = mapping.findForward("access-denied");
            }
            
        } catch (Exception e) {
            mLogger.error("ERROR in action",e);
            throw new ServletException(e);
        }
        
        return forward;
    }


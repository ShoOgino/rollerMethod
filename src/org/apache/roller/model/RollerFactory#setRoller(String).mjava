    /**
     * Construct the actual Roller implemenation for this instance.
     *
     * Use reflection to call the implementation's instantiate() method.
     * Should this fail (either no implementation is specified or
     * instantiate() throws an Exception) then the DEFAULT_IMPL will be tried.
     * If this should fail then we are in trouble :/
     *
     * @param roller_classname The name of the Roller implementation class
     * to instantiate.
     */
    public static void setRoller(String roller_classname) {
        
        if (StringUtils.isEmpty( roller_classname ))
            roller_classname = DEFAULT_IMPL;
        
        try {
            Class rollerClass = Class.forName(roller_classname);
            java.lang.reflect.Method instanceMethod =
                    rollerClass.getMethod("instantiate", (Class[])null);
            
            // do the invocation
            rollerInstance = (Roller)
            instanceMethod.invoke(rollerClass, (Object[])null);
            
            log.info("Using Roller Impl: " + roller_classname);
        } catch (Exception e) {
            // uh oh
            log.error("Error instantiating " + roller_classname, e);
            try {
                // if we didn't already try DEFAULT_IMPL then try it now
                if( ! DEFAULT_IMPL.equals(roller_classname)) {
                    log.info("** Trying DEFAULT_IMPL "+DEFAULT_IMPL+" **");
                    
                    Class rollerClass = Class.forName(DEFAULT_IMPL);
                    java.lang.reflect.Method instanceMethod =
                            rollerClass.getMethod("instantiate", (Class[])null);
                    
                    // do the invocation
                    rollerInstance = (Roller)
                    instanceMethod.invoke(rollerClass, (Object[])null);
                } else {
                    // we just do this so that the logger gets the message
                    throw new Exception("Doh! Couldn't instantiate a roller class");
                }
                
            } catch (Exception re) {
                log.fatal("Failed to instantiate fallback roller impl", re);
            }
        }
        
    }


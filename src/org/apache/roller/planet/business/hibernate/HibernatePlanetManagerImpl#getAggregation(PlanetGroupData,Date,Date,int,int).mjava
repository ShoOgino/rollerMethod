    public synchronized List getAggregation(
        PlanetGroupData group, Date startDate, Date endDate, int offset, int length)
        throws RollerException {
        // TODO: ATLAS getAggregation DONE TESTED
        List ret = null;
        if (endDate == null) endDate = new Date();
        try {
            String groupHandle = (group == null) ? NO_GROUP : group.getHandle();
            long startTime = System.currentTimeMillis();
            Session session =
                    ((HibernatePersistenceStrategy)strategy).getSession();
            
            if (group != null) {
                StringBuffer sb = new StringBuffer();
                sb.append("select e from org.apache.roller.planet.pojos.PlanetEntryData e ");
                sb.append("join e.subscription.groups g ");
                sb.append("where g=:group and e.pubTime < :endDate ");
                if (startDate != null) {
                    sb.append("and e.pubTime > :startDate ");
                }
                sb.append("order by e.pubTime desc");
                Query query = session.createQuery(sb.toString());
                query.setEntity("group", group);
                query.setFirstResult(offset);
                if (length != -1) query.setMaxResults(length);
                query.setParameter("endDate", endDate);
                if (startDate != null) {
                    query.setParameter("startDate", startDate);
                }
                ret = query.list();
            } else {
                StringBuffer sb = new StringBuffer();
                sb.append("select e from org.apache.roller.planet.pojos.PlanetEntryData e ");
                sb.append("join e.subscription.groups g");
                sb.append("where (g.handle='external' or g.handle='all') ");
                sb.append("and e.pubTime < :endDate ");
                if (startDate != null) {
                    sb.append("and e.pubTime > :startDate ");
                }
                sb.append("order by e.pubTime desc");
                Query query = session.createQuery(sb.toString());
                query.setFirstResult(offset);
                if (length != -1) query.setMaxResults(length);
                query.setParameter("endDate", endDate);
                if (startDate != null) {
                    query.setParameter("startDate", startDate);
                }
                ret = query.list();
            }
            Date retLastUpdated = null;
            if (ret.size() > 0) {
                PlanetEntryData entry = (PlanetEntryData)ret.get(0);
                retLastUpdated = entry.getPubTime();
            } else {
                retLastUpdated = new Date();
            }
            lastUpdatedByGroup.put(groupHandle, retLastUpdated);
            
            long endTime = System.currentTimeMillis();
            log.debug("Generated aggregation in "
                    +((endTime-startTime)/1000.0)+" seconds");
            
        } catch (Throwable e) {
            log.error("ERROR: building aggregation for: "+group, e);
            throw new RollerException(e);
        }
        return ret;
    } 


    /** Save subscription, add to "external" group */
    public ActionForward saveGroup(ActionMapping mapping,
            ActionForm actionForm, HttpServletRequest request,
            HttpServletResponse response) throws IOException, ServletException
    {
        ActionForward forward = mapping.findForward("planetGroups.page");
        try
        {
            RollerRequest rreq = RollerRequest.getRollerRequest(request);
            if (RollerSession.getRollerSession(request).isGlobalAdminUser())
            {
                PlanetGroupForm form = (PlanetGroupForm)actionForm;
                PlanetManager pmgr = PlanetFactory.getPlanet().getPlanetManager();
                PlanetData defaultPlanet = pmgr.getPlanet("zzz_default_planet_zzz");
                ActionErrors errors = validate(pmgr, form);
                if (errors.isEmpty())
                {
                    PlanetGroupData group = null;
                    if (form.getId() == null || form.getId().trim().length() == 0)
                    {
                        group = new PlanetGroupData();
                        group.setPlanet(defaultPlanet);
                    }
                    else 
                    {
                        group = pmgr.getGroupById(form.getId());
                    }                
                    form.copyTo(group, request.getLocale());
                    
                    // the form copy is a little dumb and will set the id value
                    // to empty string if it didn't have a value before, which means
                    // that this object would not be considered new
                    if(group.getId() != null && group.getId().trim().equals("")) {
                        group.setId(null);
                    }
                    
                    pmgr.saveGroup(group);  
                    PlanetFactory.getPlanet().flush();

                    ActionMessages messages = new ActionMessages();
                    messages.add(null, 
                            new ActionMessage("planetGroups.success.saved"));
                    saveMessages(request, messages);
                    form.doReset(mapping, request);

                    request.setAttribute("model", 
                            new GroupsPageModel(request, response, mapping));
                }
                else
                {
                    saveErrors(request, errors);
                }
            }
            else
            {
                forward = mapping.findForward("access-denied");
            }
        }
        catch (RollerException e)
        {
            ActionErrors errors = new ActionErrors();
            errors.add(null, new ActionError(
              "planetSubscriptions.error.duringSave",e.getRootCauseMessage()));
            saveErrors(request, errors);
        }
        return forward;
    }


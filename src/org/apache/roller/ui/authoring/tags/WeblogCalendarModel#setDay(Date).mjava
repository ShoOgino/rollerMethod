 /*   
	public static WeblogCalendarModel getInstance(
		HttpServletRequest req, HttpServletResponse res, String url, String cat)
	{
		return new WeblogCalendarModel(RollerRequest.getRollerRequest(req), res, url, cat);
	}
*/	
	private void setDay(Date month)
	{
        mDay = month;
        
        // If category is specified in URL, then use it
        String catName = 
            mReq.getParameter(RollerRequest.WEBLOGCATEGORYNAME_KEY);

        mCalendar = Calendar.getInstance(
                                mWebsite.getTimeZoneInstance(),
                                mWebsite.getLocaleInstance()
        );   
        
        Calendar cal = (Calendar)mCalendar.clone();
        
        // Compute first second of month
        cal.setTime(month);
        cal.set(Calendar.DAY_OF_MONTH, cal.getMinimum(Calendar.DAY_OF_MONTH));
        cal.set(Calendar.HOUR_OF_DAY, cal.getMinimum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getMinimum(Calendar.MINUTE));
        cal.set(Calendar.SECOND, cal.getMinimum(Calendar.SECOND));
        cal.set(Calendar.MILLISECOND, cal.getMinimum(Calendar.MILLISECOND));
        Date startDate = cal.getTime();
        
        // Compute last second of month
        cal.set(Calendar.DAY_OF_MONTH, cal.getMaximum(Calendar.DAY_OF_MONTH));
        cal.set(Calendar.HOUR_OF_DAY, cal.getMaximum(Calendar.HOUR_OF_DAY));
        cal.set(Calendar.MINUTE, cal.getMaximum(Calendar.MINUTE));
        cal.set(Calendar.SECOND, cal.getMaximum(Calendar.SECOND));
        cal.set(Calendar.MILLISECOND, cal.getMaximum(Calendar.MILLISECOND));
        Date endDate = cal.getTime();

        loadWeblogEntries(startDate, endDate, catName);
    }


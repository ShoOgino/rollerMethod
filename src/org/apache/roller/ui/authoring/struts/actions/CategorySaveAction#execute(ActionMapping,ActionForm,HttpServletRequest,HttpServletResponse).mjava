    public ActionForward execute(
        ActionMapping       mapping,
        ActionForm          actionForm,
        HttpServletRequest  request,
        HttpServletResponse response)
        throws Exception
    {
        ActionForward forward = mapping.findForward("categories");
        WeblogCategoryFormEx form = (WeblogCategoryFormEx)actionForm;
        
        WeblogManager wmgr = RollerFactory.getRoller().getWeblogManager();
        
        WeblogCategoryData cd = null;
        if (null != form.getId() && !form.getId().trim().equals("")) {
            cd = wmgr.getWeblogCategory(form.getId());
        } else {
            WeblogCategoryData parentCat = wmgr.getWeblogCategory(form.getParentId());
            cd = new WeblogCategoryData(
                    parentCat.getWebsite(),
                    parentCat,
                    form.getName(),
                    form.getDescription(),
                    form.getImage());
        }
        
        RollerSession rses = RollerSession.getRollerSession(request);
        if (cd.getWebsite().hasUserPermissions(
            rses.getAuthenticatedUser(), PermissionsData.AUTHOR))
        {
            try {
                wmgr.saveWeblogCategory(cd);
                RollerFactory.getRoller().flush();
                
                // notify caches of object invalidation
                CacheManager.invalidate(cd);
            } catch (RollerException re) {
                ActionErrors errors = new ActionErrors();
                errors.add(ActionErrors.GLOBAL_ERROR,
                    new ActionError("error.untranslated", re.getMessage())); 
                saveErrors(request, errors);
            }
            
            request.setAttribute(
                RequestConstants.WEBLOGCATEGORY_ID, cd.getParent().getId());
        }
        else
        {
            ActionErrors errors = new ActionErrors();
            errors.add(null, new ActionError("error.permissions.deniedSave"));
            saveErrors(request, errors);
            forward = mapping.findForward("access-denied");
        }
        
        return forward;
    }


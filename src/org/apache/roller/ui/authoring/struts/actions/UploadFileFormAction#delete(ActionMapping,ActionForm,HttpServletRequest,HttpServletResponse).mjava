    /**
     * Delete selected file(s).
     */
    public ActionForward delete(ActionMapping mapping,
                                ActionForm actionForm,
                                HttpServletRequest request,
                                HttpServletResponse response)
            throws Exception {
        
        ActionForward fwd = mapping.findForward("access-denied");
        ActionMessages messages = new ActionMessages();
        ActionErrors errors = new ActionErrors();
        UploadFileForm theForm = (UploadFileForm) actionForm;
        
        WebsiteData website = getWebsite(request);
        RollerSession rses = RollerSession.getRollerSession(request);
        if (rses.isUserAuthorizedToAuthor(website)) {
            
            // display the main uploads page with the results
            fwd = mapping.findForward("uploadFiles.page");
            
            FileManager fmgr = RollerFactory.getRoller().getFileManager();
            
            int numDeleted = 0;
            String[] deleteFiles = theForm.getDeleteFiles();
            for (int i=0; i < deleteFiles.length; i++) {
                if (deleteFiles[i].trim().startsWith("/") || 
                        deleteFiles[i].trim().startsWith("\\") || 
                        deleteFiles[i].indexOf("..") != -1) {
                    // ignore absolute paths, or paths that contiain '..'
                } else {
                    try {
                        fmgr.deleteFile(website, deleteFiles[i]);
                        numDeleted++;
                    } catch (FileNotFoundException ex) {
                        errors.add(ActionErrors.GLOBAL_ERROR,
                                new ActionError("uploadFiles.error.badPath"));
                    } catch (FilePathException ex) {
                        errors.add(ActionErrors.GLOBAL_ERROR,
                                new ActionError("uploadFiles.error.badPath"));
                    } catch (FileIOException ex) {
                        errors.add(ActionErrors.GLOBAL_ERROR,
                                new ActionError("uploadFiles.error.delete", deleteFiles[i]));
                    }
                    
                }
            }
            
            if(numDeleted > 0) {
                messages.add(ActionMessages.GLOBAL_MESSAGE,
                        new ActionMessage("uploadFiles.deletedFiles", new Integer(numDeleted)));
                saveMessages(request, messages);
            }
            
            if(!errors.isEmpty()) {
                saveErrors(request,errors);
            }
            
            UploadFilePageModel pageModel = new UploadFilePageModel(
                    request, response, mapping, website, theForm.getPath());
            pageModel.setWebsite(website);
            request.setAttribute("model", pageModel);
        }
        
        return fwd;
    }


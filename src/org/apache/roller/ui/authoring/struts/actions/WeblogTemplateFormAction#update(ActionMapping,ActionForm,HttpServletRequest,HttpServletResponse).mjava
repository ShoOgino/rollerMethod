    public ActionForward update(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws IOException, ServletException {
        
        ActionForward forward = mapping.findForward("editPage.page");
        try {
            WeblogTemplateFormEx form = (WeblogTemplateFormEx)actionForm;

            RollerRequest  rreq = RollerRequest.getRollerRequest(request);
            UserManager    mgr = RollerFactory.getRoller().getUserManager();
            WeblogTemplate page = mgr.getPage(form.getId());
            WebsiteData    website = page.getWebsite();
            
            
            RollerSession rses = RollerSession.getRollerSession(request);
            if (rses.isUserAuthorizedToAdmin(website)) {
                

                form.copyTo(page, request.getLocale());
                page.setLastModified( new Date() );                                
                
                if (form.getAutoContentType() == null || !form.getAutoContentType().booleanValue()) { 
                    page.setOutputContentType(form.getManualContentType());
                } else {
                    // empty content-type indicates that page uses auto content-type detection
                    page.setOutputContentType(null);
                }
                
                validateLink(page);

                mgr.savePage( page );
                RollerFactory.getRoller().flush();
                
                // set the (possibly) new link back into the Form bean
                ((WeblogTemplateFormEx)actionForm).setLink( page.getLink() );
                
                ActionMessages uiMessages = new ActionMessages();
                uiMessages.add(ActionMessages.GLOBAL_MESSAGE,
                        new ActionMessage("pageForm.save.success",
                        page.getName()));
                saveMessages(request, uiMessages);
                
                CacheManager.invalidate(page);
                
                WeblogTemplateFormModel pageModel = 
                    new WeblogTemplateFormModel("pageForm.title", request, response, mapping, page);
                request.setAttribute("model", pageModel);
                
            } else {
                forward = mapping.findForward("access-denied");
            }
            
            // Don't reset this form. Allow user to keep on tweaking.
            //actionForm.reset(mapping,request);
        } catch (RollerPermissionsException e) {
            ActionErrors errors = new ActionErrors();
            errors.add(null, new ActionError("error.permissions.deniedSave"));
            saveErrors(request, errors);
            forward = mapping.findForward("access-denied");
        } catch (Exception e) {
            log.error("ERROR in action",e);
            throw new ServletException(e);
        }
        return forward;
    }


        public UploadFilePageModel(
                HttpServletRequest req,
                HttpServletResponse res,
                ActionMapping mapping,
                WebsiteData weblog,
                String uploadsPath,
                List lastUploads) throws RollerException {
            
            super("uploadFiles.title", req, res, mapping);
            
            FileManager fmgr = RollerFactory.getRoller().getFileManager();
            
            path = uploadsPath;
            
            // are we showing the root of the weblog's upload area?
            // are we in a subdirectory which has a parent path?
            if(uploadsPath != null && !uploadsPath.trim().equals("")) {
                showingRoot = false;
                if(uploadsPath.indexOf("/") != -1) {
                    parentPath = uploadsPath.substring(0, uploadsPath.lastIndexOf("/"));
                }
            }
            
            resourcesBaseURL = URLUtilities.getWeblogResourceURL(weblog, "", false);
            
            maxDirMB = RollerRuntimeConfig.getProperty("uploads.dir.maxsize");
            maxFileMB = RollerRuntimeConfig.getProperty("uploads.file.maxsize");
            
            overQuota = fmgr.overQuota(weblog);
            uploadEnabled = RollerRuntimeConfig.getBooleanProperty("uploads.enabled");
            
            // get files, add them to the list
            WeblogResource[] resources = fmgr.getFiles(weblog, uploadsPath);
            for (int i=0; i<resources.length; i++) {
                totalSize += resources[i].getLength();
            }
            files = new ArrayList(Arrays.asList(resources));
            
            // get directories, only if we are at the default/root view
            if(showingRoot) {
                WeblogResource[] dirs = fmgr.getDirectories(weblog);
                files.addAll(Arrays.asList(dirs));
            }
            
            // sort them
            Collections.sort(files, new WeblogResourceComparator());
        }


    public ActionForward delete(
            ActionMapping mapping, ActionForm form,
            HttpServletRequest req, HttpServletResponse res)
        throws Exception
    {
        //this.servlet.log("ReferersAction.delete()");
        RollerRequest rreq = RollerRequest.getRollerRequest(req);
        RollerSession rollerSession = RollerSession.getRollerSession(req);
        try
        {
            if (rreq.getWebsite() != null
                 && rollerSession.isUserAuthorizedToAuthor(rreq.getWebsite()) )
            {
                RefererManager refmgr = RollerFactory.getRoller().getRefererManager();
                WebsiteData website = rreq.getWebsite();
                
                RefererData referer = null;
                String[] deleteIds = req.getParameterValues("id");
                if (deleteIds != null)
                {
                    for (int i=0; i<deleteIds.length; i++)
                    {
                        referer = refmgr.getReferer(deleteIds[i]);
                        refmgr.removeReferer(referer);
                    }
                    RollerFactory.getRoller().flush();
                    
                    CacheManager.invalidate(website);
                    
                    ActionMessages messages = new ActionMessages();
                    messages.add(null, new ActionMessage("referers.deletedReferers"));
                    saveMessages(req, messages);
                }
                else
                {
                    ActionErrors errors = new ActionErrors();
                    errors.add(null, new ActionError("referers.noReferersSpecified"));
                    saveErrors(req, errors);
                }
            }
            //this.servlet.log("ReferersAction.delete(): don't have permission");
        }
        catch (Exception e)
        {
            mLogger.error("ERROR in action",e);
            throw new ServletException(e);
        }
        return view(mapping, form, req, res);
    }


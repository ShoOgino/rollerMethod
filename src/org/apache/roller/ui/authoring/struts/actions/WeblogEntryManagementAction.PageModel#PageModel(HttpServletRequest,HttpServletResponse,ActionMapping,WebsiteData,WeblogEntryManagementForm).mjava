        public PageModel(
                HttpServletRequest request,
                HttpServletResponse response,
                ActionMapping mapping,
                WebsiteData website,
                WeblogEntryManagementForm queryForm) throws RollerException {
            super("weblogEntryQuery.title", request, response, mapping);
            rollerRequest = RollerRequest.getRollerRequest(request);
            this.request = request;
            this.queryForm = queryForm;
            this.website = website;
            
            if (null != queryForm.getCategoryId() && !queryForm.getCategoryId().equals("")) {
                WeblogManager wmgr = RollerFactory.getRoller().getWeblogManager();
                WeblogCategoryData cd = wmgr.getWeblogCategory(queryForm.getCategoryId());
                category = cd.getPath();
            }
            
            final DateFormat df =
                    DateFormat.getDateInstance(DateFormat.SHORT, request.getLocale());
            String start = queryForm.getStartDateString();
            if (null != start && start.trim().length() > 0) {
                try {
                    startDate = DateUtil.getStartOfDay(df.parse(start));
                } catch (ParseException e) {
                    throw new RollerException("ERROR parsing start date.");
                }
            }
            
            String end = queryForm.getEndDateString();
            if (null != end && end.trim().length() > 0) {
                try {
                    endDate = DateUtil.getEndOfDay(df.parse(end));
                } catch (ParseException e) {
                    throw new RollerException("ERROR parsing end date.");
                }
            }
            
            this.status = "ALL".equals(queryForm.getStatus()) ? null: queryForm.getStatus();
            this.maxEntries = maxEntries;
            this.text = queryForm.getText();
            
            String[] tagsarr = new String[0];
            
            if (queryForm.getTags() != null)
                tagsarr = StringUtils.split(queryForm.getTags().toLowerCase(), ' ');
            
            int offset = queryForm.getOffset();
            if ("POST".equals(request.getMethod())) { 
                offset = 0;
            }
            
            entries = RollerFactory.getRoller().getWeblogManager().getWeblogEntries(
                    website,
                    null,
                    startDate,
                    endDate,
                    category,
                    Arrays.asList(tagsarr),
                    status,
                    text,
                    queryForm.getSortby(),
                    null,
                    null,
                    offset,
                    queryForm.getCount() + 1);
            if (entries.size() > queryForm.getCount()) {
                more = true;
                entries.remove(entries.size()-1);
            }
        }


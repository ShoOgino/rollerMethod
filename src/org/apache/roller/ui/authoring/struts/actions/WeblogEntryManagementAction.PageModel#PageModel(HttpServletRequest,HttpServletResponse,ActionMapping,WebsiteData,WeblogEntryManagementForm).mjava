        public PageModel( 
                HttpServletRequest request,
                HttpServletResponse response,
                ActionMapping mapping,
                WebsiteData website,
                WeblogEntryManagementForm queryForm) throws RollerException {
            super("weblogEntryQuery.title", request, response, mapping);
            rollerRequest = RollerRequest.getRollerRequest(request);
            this.request = request;
            this.queryForm = queryForm;
            this.website = website;

            if (null != queryForm.getCategoryId() && !queryForm.getCategoryId().equals("")) {
                WeblogManager wmgr = RollerFactory.getRoller().getWeblogManager();
                WeblogCategoryData cd = wmgr.getWeblogCategory(queryForm.getCategoryId());
                category = cd.getPath();
            }

            final DateFormat df =
                    DateFormat.getDateInstance(DateFormat.SHORT, request.getLocale());
            String start = queryForm.getStartDateString();
            if (null != start && start.trim().length() > 0) {
                try {
                    startDate = DateUtil.getStartOfDay(df.parse(start));
                } catch (ParseException e) {
                    throw new RollerException("ERROR parsing start date.");
                }
            }

            String end = queryForm.getEndDateString();
            if (null != end && end.trim().length() > 0) {
                try {
                    endDate = DateUtil.getEndOfDay(df.parse(end));
                } catch (ParseException e) {
                    throw new RollerException("ERROR parsing end date.");
                }
            }

            this.status = "ALL".equals(queryForm.getStatus()) ? null: queryForm.getStatus();    
            this.maxEntries = maxEntries;

            entries = RollerFactory.getRoller().getWeblogManager().getWeblogEntries(
                    website,
                    null,
                    startDate,
                    endDate,
                    category,
                    status,
                    queryForm.getSortby(),
                    queryForm.getOffset(),
                    queryForm.getCount() + 1);
           if (entries.size() > queryForm.getCount()) {
               more = true;
               entries.remove(entries.size()-1);
           }
        }


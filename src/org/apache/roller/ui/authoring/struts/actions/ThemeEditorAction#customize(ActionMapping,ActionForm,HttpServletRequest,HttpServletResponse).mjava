    /**
     * Customize action method.
     *
     * Happens when a user clicks the "Customize" button on their current theme.
     * This method copies down all the theme templates from the currently
     * selected theme into the users custom template pages and updates the users
     * theme to "custom".
     */
    public ActionForward customize(
            ActionMapping       mapping,
            ActionForm          form,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws IOException, ServletException {
        
        ActionErrors errors = new ActionErrors();
        ActionForward forward = mapping.findForward("editTheme.page");
        try {
            RollerSession rses = RollerSession.getRollerSession(request);
            RollerRequest rreq = RollerRequest.getRollerRequest(request);
            WebsiteData website = rreq.getWebsite();
            if ( rses.isUserAuthorizedToAdmin(website) ) {
                
                BasePageModel pageModel = new BasePageModel(
                        "themeEditor.title", request, response, mapping);
                request.setAttribute("model",pageModel);          
                    
                // copy down current theme to weblog templates
                Roller roller = RollerFactory.getRoller();
                ThemeManager themeMgr = roller.getThemeManager();
                
                String username = rses.getAuthenticatedUser().getUserName();
                
                try {
                    Theme usersTheme = website.getTheme();
                    
                    // only if custom themes are allowed
                    if(RollerRuntimeConfig.getBooleanProperty("themes.customtheme.allowed")) {
                        try {
                            themeMgr.importTheme(website, usersTheme);
                            RollerFactory.getRoller().flush();
                        } catch(RollerException re) {
                            mLogger.error(re);
                            errors.add(null, new ActionMessage("Error customizing theme"));
                            saveErrors(request, errors);
                        }
                        
                        // make sure to flush the page cache so ppl can see the change
                        //PageCacheFilter.removeFromCache(request, website);
                        CacheManager.invalidate(website);
                    }
                    
                } catch(ThemeNotFoundException tnfe) {
                    // this catches the potential case where someone customizes
                    // a theme and has their theme as "custom" but then hits the
                    // browser back button and presses the button again, so
                    // they are basically trying to customize a "custom" theme
                    
                    // log this as a warning just in case
                    mLogger.warn(tnfe);
                    
                    // show the user an error message and let things go back
                    // to the edit page
                    errors.add(null, new ActionMessage("Oops!  You already have a custom theme."));
                }
                
                // just take the user back home to the edit theme page
                return this.edit(mapping, form, request, response);
                
            } else {
                forward = mapping.findForward("access-denied");
            }
        } catch (Exception e) {
            mLogger.error("ERROR in action",e);
            throw new ServletException(e);
        }
        return forward;
    }


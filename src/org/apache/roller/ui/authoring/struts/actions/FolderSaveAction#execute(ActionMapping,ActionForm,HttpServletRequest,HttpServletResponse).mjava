    public ActionForward execute(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws Exception {
        
        ActionForward forward = mapping.findForward("Bookmarks");
        FolderFormEx form = (FolderFormEx)actionForm;
        
        BookmarkManager bmgr = RollerFactory.getRoller().getBookmarkManager();
        
        FolderData fd = null;
        if (null != form.getId() && !form.getId().trim().equals("")) {
            fd = bmgr.getFolder(form.getId());
        } else {
            String parentId = request.getParameter(RequestConstants.PARENT_ID);
            FolderData parent = bmgr.getFolder(parentId);
            fd = new FolderData(
                    parent,
                    form.getName(),
                    form.getDescription(),
                    parent.getWebsite());
        }
        
        RollerSession rses = RollerSession.getRollerSession(request);
        if (fd.getWebsite().hasUserPermissions(
                rses.getAuthenticatedUser(), PermissionsData.AUTHOR)) {
            try {
                bmgr.saveFolder(fd);
                RollerFactory.getRoller().flush();
                
                // notify caches of object invalidation
                CacheManager.invalidate(fd);
            } catch (RollerException re) {
                ActionErrors errors = new ActionErrors();
                errors.add(ActionErrors.GLOBAL_ERROR,
                        new ActionError("error.untranslated", re.getMessage()));
                saveErrors(request, errors);
            }
            
            request.setAttribute(
                    RequestConstants.WEBLOGCATEGORY_ID, fd.getParent().getId());
        } else {
            ActionErrors errors = new ActionErrors();
            errors.add(null, new ActionError("error.permissions.deniedSave"));
            saveErrors(request, errors);
            forward = mapping.findForward("access-denied");
        }
        
        if (null != fd.getParent()) {
            request.setAttribute(
                    RequestConstants.FOLDER_ID, fd.getParent().getId());
        }
        
        return forward;
    }


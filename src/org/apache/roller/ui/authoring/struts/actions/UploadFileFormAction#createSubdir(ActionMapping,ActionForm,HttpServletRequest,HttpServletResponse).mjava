    /**
     * Create a subdirectory.
     */
    public ActionForward createSubdir(ActionMapping mapping,
                                      ActionForm actionForm,
                                      HttpServletRequest request,
                                      HttpServletResponse response) 
            throws Exception {
        
        ActionForward fwd = mapping.findForward("access-denied");
        ActionMessages messages = new ActionMessages();
        ActionErrors errors = new ActionErrors();
        UploadFileForm theForm = (UploadFileForm) actionForm;
        
        WebsiteData website = getWebsite(request);
        RollerSession rses = RollerSession.getRollerSession(request);
        if (rses.isUserAuthorizedToAuthor(website)) {
            
            // display the main uploads page with the results
            fwd = mapping.findForward("uploadFiles.page");
            
            FileManager fmgr = RollerFactory.getRoller().getFileManager();
            
            String path = theForm.getPath();
            String newDir = theForm.getNewDir();
            if(newDir != null && newDir.trim().length() > 0 &&
                    newDir.indexOf("/") == -1 && newDir.indexOf("\\") == -1) {
                
                // figure the new directory path
                String newDirPath = newDir;
                if(path != null && path.trim().length() > 0) {
                    newDirPath = path + "/" + newDir;
                }
                
                try {
                    // add the new subdirectory
                    fmgr.createDirectory(website, newDirPath);
                    
                    messages.add(ActionMessages.GLOBAL_MESSAGE,
                        new ActionMessage("uploadFiles.createdDir", newDirPath));
                    saveMessages(request, messages);
                    
                } catch (FilePathException ex) {
                    errors.add(ActionErrors.GLOBAL_ERROR,
                            new ActionError("uploadFiles.error.badPath", newDirPath));
                } catch (FileNotFoundException ex) {
                    errors.add(ActionErrors.GLOBAL_ERROR,
                            new ActionError("uploadFiles.error.badPath", newDirPath));
                } catch (FileIOException ex) {
                    errors.add(ActionErrors.GLOBAL_ERROR,
                            new ActionError("uploadFiles.error.createDir", newDirPath));
                }
            } else {
                errors.add(ActionErrors.GLOBAL_ERROR,
                            new ActionError("uploadFiles.error.badPath", newDir));
            }
            
            UploadFilePageModel pageModel = new UploadFilePageModel(
                    request, response, mapping, website, path, null);
            request.setAttribute("model", pageModel);
            pageModel.setWebsite(website);
            
            if(!errors.isEmpty()) {
                saveErrors(request, errors);
            }
        }
        
        return fwd;
    }


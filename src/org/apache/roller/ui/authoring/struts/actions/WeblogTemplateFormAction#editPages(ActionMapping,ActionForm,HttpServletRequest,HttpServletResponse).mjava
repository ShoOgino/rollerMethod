    public ActionForward editPages(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws IOException, ServletException {
        
        ActionForward forward = mapping.findForward("editPages.page");
        try {
            WeblogTemplateFormEx form = (WeblogTemplateFormEx)actionForm;
            RollerRequest rreq = RollerRequest.getRollerRequest(request);
            RollerSession rses = RollerSession.getRollerSession(request);

            WebsiteData website = rreq.getWebsite();
            if (website == null && form.getId()!=null) {
                UserManager mgr = RollerFactory.getRoller().getUserManager();
                WeblogTemplate template = mgr.getPage(form.getId());
                website = template.getWebsite();
            }
            
            WeblogTemplateFormModel model = 
                    new WeblogTemplateFormModel("pagesForm.title", request, response, mapping, null);
            request.setAttribute("model", model);
            
            List availableActions = new ArrayList();
            availableActions.add(WeblogTemplate.ACTION_CUSTOM);
            
            if(WeblogTheme.CUSTOM.equals(website.getEditorTheme())) {
                // if the weblog is using a custom theme then determine which
                // action templates are still available to be created
                availableActions.add(WeblogTemplate.ACTION_PERMALINK);
                availableActions.add(WeblogTemplate.ACTION_SEARCH);
                availableActions.add(WeblogTemplate.ACTION_WEBLOG);
                availableActions.add(WeblogTemplate.ACTION_TAGSINDEX);
                
                WeblogTemplate tmpPage = null;
                Iterator pagesIter = model.getPages().iterator();
                while(pagesIter.hasNext()) {
                    tmpPage = (WeblogTemplate) pagesIter.next();
                    
                    if(!WeblogTemplate.ACTION_CUSTOM.equals(tmpPage.getAction())) {
                        availableActions.remove(tmpPage.getAction());
                    }
                }
            }
            request.setAttribute("availableActions", availableActions);
            
            if (!rses.isUserAuthorizedToAdmin(website)) {
                forward = mapping.findForward("access-denied");
            }
            
        } catch (Exception e) {
            log.error("ERROR in action",e);
            throw new ServletException(e);
        }
        return forward;
    }


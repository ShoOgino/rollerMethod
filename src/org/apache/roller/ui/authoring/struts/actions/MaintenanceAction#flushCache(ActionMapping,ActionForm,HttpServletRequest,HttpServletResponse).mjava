    /**
     * Respond to request to flush a user's page cache.
     */
    public ActionForward flushCache(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws IOException, ServletException {
        
        try {
            RollerRequest rreq  = RollerRequest.getRollerRequest(request);
            WebsiteData website = rreq.getWebsite();
            RollerSession rses = RollerSession.getRollerSession(request);
            
            if ( rses.isUserAuthorizedToAdmin(website) ) {
                
                // some caches are based on weblog last-modified, so update it
                website.setLastModified(new Date());
                
                try {
                    UserManager umgr = RollerFactory.getRoller().getUserManager();
                    umgr.saveWebsite(website);
                    RollerFactory.getRoller().flush();
                } catch (RollerException ex) {
                    mLogger.error("Error saving website", ex);
                }
                
                // also notify cache manager
                CacheManager.invalidate(website);
                
                ActionMessages messages = new ActionMessages();
                messages.add(null, new ActionMessage("maintenance.message.flushed"));
                saveMessages(request, messages);
                
            }
            
            request.setAttribute("model", new BasePageModel(
                    "maintenance.title", request, response, mapping));
            
        } catch (Exception e) {
            throw new ServletException(e);
        }
        
        return mapping.findForward("maintenance.page");
    }


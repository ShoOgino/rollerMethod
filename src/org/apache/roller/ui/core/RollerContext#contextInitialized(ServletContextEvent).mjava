    /**
     * Responds to app-init event and triggers startup procedures.
     */
    public void contextInitialized(ServletContextEvent sce) {
        
        log.info("Apache Roller Weblogger Initializing ...");
                
        // Keep a reverence to ServletContext object
        this.servletContext = sce.getServletContext();
        
        // Call Spring's context ContextLoaderListener to initialize all the 
        // context files specified in web.xml. This is necessary because 
        // listeners don't initialize in the order specified in 2.3 containers
        super.contextInitialized(sce);
            
        // get the *real* path to <context>/resources
        String ctxPath = servletContext.getRealPath("/");
        if(!ctxPath.endsWith(File.separator))
            ctxPath += File.separator + "resources";
        else
            ctxPath += "resources";
        
        // try setting the uploads path to <context>/resources
        // NOTE: this should go away at some point
        // we leave it here for now to allow users to keep writing
        // uploads into their webapp context, but this is a bad idea
        //
        // also, the RollerConfig.setUploadsDir() method is smart
        // enough to disregard this call unless the uploads.path
        // is set to ${webapp.context}
        RollerConfig.setUploadsDir(ctxPath);
        
        // try setting the themes path to <context>/themes
        // NOTE: this should go away at some point
        // we leave it here for now to allow users to keep using
        // themes in their webapp context, but this is a bad idea
        //
        // also, the RollerConfig.setThemesDir() method is smart
        // enough to disregard this call unless the themes.dir
        // is set to ${webapp.context}
        RollerConfig.setThemesDir(servletContext.getRealPath("/")+File.separator+"themes");
        
        try {
            // Parts of database upgrade are not included in migration scripts
            upgradeDatabaseIfNeeded();
            
            // Initialize Aceigy based on Roller configuration
            initializeSecurityFeatures(servletContext);
            
            // Setup Velocity template engine
            setupVelocity();
            
            // This will cause instantiation and initialziation of Roller impl
            Roller roller = RollerFactory.getRoller();
            
            // And this will schedule all configured tasks
            roller.getThreadManager().startTasks();
            
        } catch (Throwable t) {
            log.fatal("Roller Weblogger initialization failed", t);
        }
        
        // Initialize Planet if necessary
        if(RollerConfig.getBooleanProperty("planet.aggregator.enabled")) {
            try {
                Planet planet = PlanetFactory.getPlanet();                
                PlanetFactory.getPlanet().getPropertiesManager();                
                planet.flush();
                planet.release();
                
            } catch (Throwable t) {
                log.fatal("Roller Planet initialization failed", t);
            }
        }
        
        log.info("Apache Roller Weblogger Initialization Complete");
    }


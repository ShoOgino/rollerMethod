    /**
     * Responds to app-init event and triggers startup procedures.
     */
    public void contextInitialized(ServletContextEvent sce) {
        
        log.info("Roller Weblogger Initializing ...");
        
        // check that Hibernate code is in place
        try {
            Class.forName("org.hibernate.Session");
        } catch (Throwable t) {
            // if Hibernate is not available, we're hosed
            throw new RuntimeException(
               "FATAL ERROR: Hibernate not found, please refer to the Roller Installation Guide for instructions on how to install the required Hibernate jars");
        }
        
        // keep a reverence to ServletContext object
        this.servletContext = sce.getServletContext();
        
        // call Spring's context ContextLoaderListener to initialize
        // all the context files specified in web.xml. This is necessary
        // because listeners don't initialize in the order specified in
        // 2.3 containers
        super.contextInitialized(sce);
            
        // get the *real* path to <context>/resources
        String ctxPath = servletContext.getRealPath("/");
        if(!ctxPath.endsWith(File.separator))
            ctxPath += File.separator + "resources";
        else
            ctxPath += "resources";
        
        // try setting the uploads path to <context>/resources
        // NOTE: this should go away at some point
        // we leave it here for now to allow users to keep writing
        // uploads into their webapp context, but this is a bad idea
        //
        // also, the RollerConfig.setUploadsDir() method is smart
        // enough to disregard this call unless the uploads.path
        // is set to ${webapp.context}
        RollerConfig.setUploadsDir(ctxPath);
        
        // try setting the themes path to <context>/themes
        // NOTE: this should go away at some point
        // we leave it here for now to allow users to keep using
        // themes in their webapp context, but this is a bad idea
        //
        // also, the RollerConfig.setThemesDir() method is smart
        // enough to disregard this call unless the themes.dir
        // is set to ${webapp.context}
        RollerConfig.setThemesDir(servletContext.getRealPath("/")+File.separator+"themes");
        
        try {
            // always upgrade database first
            upgradeDatabaseIfNeeded();
            
            Roller roller = RollerFactory.getRoller();
            
            setupRuntimeProperties();
            initializeSecurityFeatures(servletContext);
            setupSearch();
            initializePingFeatures();
            setupThemeLibrary();
            setupScheduledTasks();
            setupVelocity();
            
            roller.flush();
            roller.release();
            
        } catch (Throwable t) {
            log.fatal("Roller Weblogger initialization failed", t);
            throw new RuntimeException(t);
        }
        
        // Initialize Planet if necessary
        if(RollerConfig.getBooleanProperty("planet.aggregator.enabled")) {
            try {
                Planet planet = PlanetFactory.getPlanet();
                
                setupPlanetProperties();
                
                planet.flush();
                planet.release();
                
            } catch (Throwable t) {
                log.fatal("Roller Planet initialization failed", t);
                throw new RuntimeException(t);
            }
        }
        
        log.info("Roller Weblogger Initialization Complete");
    }


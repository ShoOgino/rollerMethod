    /**
     * Send activation mail
     */
    private void sendActivationMail(
            HttpServletRequest request, UserData user, ActionMessages errors) {
        
        try {
            javax.naming.Context ctx = (javax.naming.Context)
                new InitialContext().lookup("java:comp/env");
            Session mailSession = (Session) ctx.lookup("mail/Session");
            if (mailSession != null) {
                ResourceBundle resources = ResourceBundle.getBundle(
                        "ApplicationResources", getLocaleInstance(user.getLocale()));
                
                String from = RollerRuntimeConfig.getProperty(
                        "user.account.activation.mail.from");
                
                String cc[] = new String[0];
                String bcc[] = new String[0];
                String to[] = new String[] { user.getEmailAddress() };
                String subject = resources.getString(
                        "user.account.activation.mail.subject");
                String content;
                
                String rootURL = RollerRuntimeConfig.getAbsoluteContextURL();
                
                if (rootURL == null || rootURL.trim().length() == 0) {
                    rootURL = RequestUtils.serverURL(request)
                    + request.getContextPath();
                }
                
                StringBuffer sb = new StringBuffer();
                
                // activationURL=
                // rootURL/roller-ui/user.do?method=activateUser&activationCode=*****
                String activationURL = rootURL
                        + "/roller-ui/user.do?method=activateUser&activationCode="
                        + user.getActivationCode();
                sb.append(MessageFormat.format(
                        resources.getString("user.account.activation.mail.content"),
                        new Object[] { user.getFullName(), user.getUserName(),
                        activationURL }));
                content = sb.toString();

                MailUtil.sendHTMLMessage(mailSession, from, to, cc, bcc, subject, content);
            }
            
        } catch (MessagingException me) {
            errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
                "error.add.user.mailSendException"));      
            log.debug("ERROR sending email", me);
        } catch (NamingException ne) {
            errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
                "error.add.user.mailSetupException"));
            log.error("ERROR in mail setup?", ne);
        } catch (MalformedURLException ue) {
            errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
                "error.add.user.mailSetupException"));
            log.error("ERROR in absolute URL setting?", ue);
        }
    }


    /**
     * Setup the a Velocity context by loading it with objects, values, and
     * RollerPagePlugins needed for Roller page execution.
     */
    public static void setupContext(
            Map                 ctx, 
            HttpServletRequest  request, 
            HttpServletResponse response)
            throws RollerException {
        
        mLogger.debug("setupContext( ctx = "+ctx+")");
        
        RollerRequest rreq = RollerRequest.getRollerRequest(request);
        RollerContext rollerCtx = RollerContext.getRollerContext( );
        
        // if this is a weblog page request then parse it out
        WeblogPageRequest pageRequest = null;
        try {
            pageRequest = new WeblogPageRequest(request);
        } catch(Exception e) {
            // ignored, just assume it's not a page request
        }
        
        try {
            // Add default page model object to context
            String pageModelClassName =
                RollerConfig.getProperty("velocity.pagemodel.classname");
            Class pageModelClass = Class.forName(pageModelClassName);
            PageModel pageModel = (PageModel)pageModelClass.newInstance();
            Map args = new HashMap();
            args.put("request", request);
            pageModel.init(args);            
            ctx.put(pageModel.getModelName(), pageModel);
            
            // Add other page models
            // TODO: ATLAS make page models configurable            
            PageModel sitePageModel = new SitePageModel();
            ctx.put(sitePageModel.getModelName(), sitePageModel);            
            PageModel planetPageModel = new PlanetPageModel();
            ctx.put(planetPageModel.getModelName(), planetPageModel);
            
            // TODO: ATLAS: figure out another way to do this:
            //ctx.put("pages", pageModel.getPages());
            
        } catch (Exception e) {
            throw new RollerException("ERROR creating Page Model",e);
        }
        
        // Add Velocity page helper to context
        WebsiteData weblog = rreq.getWebsite();
        PageContext pageContext = rreq.getPageContext();
        OldPageHelper pageHelper = new OldPageHelper(request, response, ctx, weblog, pageContext, pageRequest);
        Roller roller = RollerFactory.getRoller();
        ctx.put("pageHelper", pageHelper);
                
        // Load standard Roller objects and values into the context
        WebsiteData website = 
            loadWeblogValues(ctx, rreq, rollerCtx );
        loadPathValues(       ctx, rreq, rollerCtx, website );
        loadRssValues(        ctx, rreq, website );
        loadUtilityObjects(   ctx, rreq, rollerCtx, website );
        loadRequestParamKeys( ctx);
        loadStatusMessage(    ctx, rreq );
        
        // If single entry is specified, load comments too
        if ( rreq.getWeblogEntry() != null ) {
            loadCommentValues( ctx, rreq, rollerCtx );
        }
        
        // add Velocity Toolbox tools to context
        loadToolboxContext(request, response, ctx);
    }


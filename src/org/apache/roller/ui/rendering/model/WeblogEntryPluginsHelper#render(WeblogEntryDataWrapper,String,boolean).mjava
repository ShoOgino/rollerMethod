    /**
     * Pass the String through any PagePlugins that have been
     * assigned to the OldPageHelper, as selected by the Entry.
     * 
     * @param entry  Entry being rendered.
     * @param str    String to which plugins are to be applied.
     * @param single True if single entry page being displayed.
     * @return       Result of applying plugins to str.
     */
    public String render(WeblogEntryDataWrapper entry, String str, boolean singleEntry) {
        String ret = str;
        log.debug("Applying page plugins to string");
        
        Map plugins = null;
        if (initializedPlugins != null) {
            plugins = initializedPlugins;
        } else {
            // Couldn't init weblog's plugins upfront, so we must init them now
            Roller roller = RollerFactory.getRoller();
            try {
                PluginManager ppmgr = roller.getPagePluginManager();
                // TODO: figure out what to do about plugins in site-wide scope
                plugins = ppmgr.getWeblogEntryPlugins(entry.getPojo().getWebsite(), new HashMap());
            } catch (RollerException e) {
                log.error("ERROR: accessing plugins for entry: " + entry.getId());
            }
        }
        
        if (plugins != null) {
            List entryPlugins = entry.getPluginsList();
            
            // if no Entry plugins, don't bother looping.
            if (entryPlugins != null && !entryPlugins.isEmpty()) {
                
                // now loop over mPagePlugins, matching
                // against Entry plugins (by name):
                // where a match is found render Plugin.
                Iterator iter = plugins.keySet().iterator();
                while (iter.hasNext()) {
                    String key = (String)iter.next();
                    if (entryPlugins.contains(key)) {
                        WeblogEntryPlugin pagePlugin = (WeblogEntryPlugin)plugins.get(key);
                        try {
                            ret = pagePlugin.render(entry.getPojo(), ret);
                        } catch (Throwable t) {
                            log.error("ERROR from plugin: " + pagePlugin.getName(), t);
                        }
                    }
                }
            }
        }        
        return ret;
    }    


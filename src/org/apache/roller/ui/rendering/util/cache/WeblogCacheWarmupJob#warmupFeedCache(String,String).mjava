    private void warmupFeedCache(String type, String format) {
        
        // we are working on the feed cache
        WeblogFeedCache feedCache = WeblogFeedCache.getInstance();
        
        List weblogs = null;
        try {
            // get all weblogs
            UserManager umgr = RollerFactory.getRoller().getUserManager();
            weblogs = umgr.getWebsites(null, Boolean.TRUE, null, null, null, 0, -1);
        } catch (RollerException ex) {
            log.error("Unable to get weblogs list", ex);
            return;
        }
        
        Iterator allWeblogs = weblogs.iterator();
        WebsiteData weblog = null;
        while(allWeblogs.hasNext()) {
            weblog = (WebsiteData) allWeblogs.next();
            
            try {
                // we need a feed request to represent the data
                WeblogFeedRequest feedRequest = new WeblogFeedRequest();
                feedRequest.setWeblogHandle(weblog.getHandle());
                feedRequest.setWeblog(weblog);
                feedRequest.setType(type);
                feedRequest.setFormat(format);
                
                
                // populate the rendering model
                HashMap model = new HashMap();
                Map initData = new HashMap();
                initData.put("request", null);
                initData.put("feedRequest", feedRequest);
                initData.put("weblogRequest", feedRequest);
                
                // Load models for feeds
                String feedModels = RollerConfig.getProperty("rendering.feedModels");
                ModelLoader.loadModels(feedModels, model, initData, true);
                
                // Load weblog custom models
                ModelLoader.loadCustomModels(weblog, model, initData);
                
                
                // lookup Renderer we are going to use
                Renderer renderer = null;
                log.debug("Looking up renderer");
                Template template = new StaticTemplate("templates/feeds/weblog-"+type+"-"+format+".vm", null, "velocity");
                renderer = RendererManager.getRenderer(template);
                
                
                // render content.  use default size of about 24K for a standard page
                CachedContent rendererOutput = new CachedContent(24567);
                log.debug("Doing rendering");
                renderer.render(model, rendererOutput.getCachedWriter());
                
                
                // flush rendered output and close
                rendererOutput.flush();
                rendererOutput.close();
                
                // now just put it in the cache
                String key = feedCache.generateKey(feedRequest);
                feedCache.put(key, rendererOutput);
                
            } catch(Exception e) {
                // bummer, error during rendering
                log.error("Error rendering for weblog "+weblog.getHandle(), e);
            }
        }
        
    }


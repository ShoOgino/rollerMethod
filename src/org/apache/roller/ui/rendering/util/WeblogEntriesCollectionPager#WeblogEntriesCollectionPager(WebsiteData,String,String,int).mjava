    public WeblogEntriesCollectionPager(WebsiteData weblog, String dateString,
                              String catPath, int page) {
        
        this.weblog = weblog;
        this.dateString = dateString;
        this.catPath = catPath;
        if(page > 0) {
            this.page = page;
        }
        
        // calculate offset and length
        this.length = weblog.getEntryDisplayCount();
        this.offset = length * page;
        
        // if we have a date string then do date calculations
        Date thisDate = null;
        Date nextDate = null;
        Date prevDate = null;
        String nextDateString = null;
        String prevDateString = null;
        if(dateString != null) {
            Calendar cal = Calendar.getInstance();
            
            // parse date string and figure out date
            thisDate = parseDate(dateString, weblog);
            
            // single day
            if(dateString.length() == 8) {
                // calculate next day
                cal.setTime(thisDate);
                cal.add(Calendar.DAY_OF_MONTH, 1);
                cal.set(Calendar.HOUR, 0);
                cal.set(Calendar.MINUTE, 0);
                cal.set(Calendar.SECOND, 0);
                nextDate = cal.getTime();
                if(nextDate.after(getToday(weblog))) {
                    nextDate = null;
                }
                
                // calculate next day date string
                nextDateString = DateUtil.format8chars(nextDate);
                
                // calculate previous day
                cal.setTime(thisDate);
                cal.add(Calendar.DAY_OF_MONTH, -1);
                cal.set(Calendar.HOUR, 23);
                cal.set(Calendar.MINUTE, 59);
                cal.set(Calendar.SECOND, 59);
                prevDate = cal.getTime();
                
                // calculate prev day date string
                prevDateString = DateUtil.format8chars(prevDate);
                
                // calculate query start/end dates
                cal = Calendar.getInstance(weblog.getTimeZoneInstance());
                startDate = DateUtil.getStartOfDay(thisDate, cal);
                endDate = DateUtil.getEndOfDay(thisDate, cal);
                
            // single month
            } else if(dateString.length() == 6) {
                // calculate next month
                cal.setTime(thisDate);
                cal.add(Calendar.MONTH, 1);
                nextDate = cal.getTime();
                if(nextDate.after(getToday(weblog))) {
                    nextDate = null;
                }
                
                // calculate next month date string
                nextDateString = DateUtil.format6chars(nextDate);
                
                // calculate previous month
                cal.setTime(thisDate);
                cal.add(Calendar.MONTH, -1);
                prevDate = cal.getTime();
                
                // calculate prev month date string
                prevDateString = DateUtil.format6chars(prevDate);
                
                // calculate query start/end dates
                cal = Calendar.getInstance(weblog.getTimeZoneInstance());
                startDate = DateUtil.getStartOfMonth(thisDate, cal);
                endDate = DateUtil.getEndOfMonth(thisDate, cal);
            }
        }
        
        // finally, calculate next/prev links and link names
        if(dateString != null & catPath != null) {
            nextLink = weblog.getURL()+"?date="+nextDateString+"&cat="+catPath+"&page="+page++;
            nextLinkName = nextDateString;
            prevLink = weblog.getURL()+"?date="+prevDateString+"&cat="+catPath;
            prevLinkName = prevDateString;
            
            if(page > 1) {
                prevLink += "&page="+page--;
            }
            
        } else if(dateString != null) {
            nextLink = weblog.getURL()+"/date/"+nextDateString;
            nextLinkName = nextDateString;
            prevLink = weblog.getURL()+"/date/"+prevDateString;
            prevLinkName = prevDateString;
            
            nextLink += "?page="+page++;
            if(page > 1) {
                prevLink += "?page="+page--;
            }
        } else {
            // there is no next/prev paging for homepage or just category
        }
    }


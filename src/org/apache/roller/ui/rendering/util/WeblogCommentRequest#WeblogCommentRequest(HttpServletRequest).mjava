    public WeblogCommentRequest(HttpServletRequest request) 
            throws InvalidRequestException {
        
        // let our parent take care of their business first
        // parent determines weblog handle and locale if specified
        super(request);
        
        String servlet = request.getServletPath();
        
        // we only want the path info left over from after our parents parsing
        String pathInfo = this.getPathInfo();
        
        // was this request bound for the comment servlet?
        if(servlet == null || !COMMENT_SERVLET.equals(servlet)) {
            throw new InvalidRequestException("not a weblog comment request, "+
                    request.getRequestURL());
        }
        
        
        /*
         * parse path info.  we expect ...
         *
         * /entry/<anchor> - permalink
         */
        if(pathInfo != null && pathInfo.trim().length() > 0) {
            
            // we should only ever get 2 path elements
            String[] pathElements = pathInfo.split("/");
            if(pathElements.length == 2) {
                
                String context = pathElements[0];
                if("entry".equals(context)) {
                    try {
                        this.weblogAnchor = 
                                URLDecoder.decode(pathElements[1], "UTF-8");
                    } catch (UnsupportedEncodingException ex) {
                        // should never happen
                        log.error(ex);
                    }
                    
                } else {
                    throw new InvalidRequestException("bad path info, "+
                            request.getRequestURL());
                }
                
            } else {
                throw new InvalidRequestException("bad path info, "+
                        request.getRequestURL());
            }
            
        } else {
            // bad request
            throw new InvalidRequestException("bad path info, "+
                    request.getRequestURL());
        }
        
        
        /*
         * parse request parameters
         *
         * the only params we currently care about are:
         *   name - comment author
         *   email - comment email
         *   url - comment referring url
         *   content - comment contents
         *   notify - if commenter wants to receive notifications
         */
        if(request.getParameter("name") != null) {
            this.name = request.getParameter("name");
        }
        
        if(request.getParameter("email") != null) {
            this.email = request.getParameter("email");
        }
        
        if(request.getParameter("url") != null) {
            this.url = request.getParameter("url");
        }
        
        if(request.getParameter("content") != null) {
            this.content = request.getParameter("content");
        }
        
        if(request.getParameter("notify") != null) {
            this.notify = Boolean.valueOf(request.getParameter("notify")).booleanValue();
        }
        
        if(log.isDebugEnabled()) {
            log.debug("name = "+this.name);
            log.debug("email = "+this.email);
            log.debug("url = "+this.url);
            log.debug("content = "+this.content);
            log.debug("notify = "+this.notify);
            log.debug("weblogAnchor = "+this.weblogAnchor);
        }
    }


    /**
     * Handle GET requests for weblog pages.
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        log.debug("Entering");
        
        WebsiteData weblog = null;
        WeblogSearchRequest searchRequest = null;
        
        // first off lets parse the incoming request and validate it
        try {
            searchRequest = new WeblogSearchRequest(request);
            
            // now make sure the specified weblog really exists
            UserManager userMgr = RollerFactory.getRoller().getUserManager();
            weblog = userMgr.getWebsiteByHandle(searchRequest.getWeblogHandle(), Boolean.TRUE);
            
        } catch(InvalidRequestException ire) {
            // An error initializing the request is considered to be a 404
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            log.error("Bad Request: "+ire.getMessage());
            return;
            
        } catch(RollerException re) {
            // error looking up the weblog, we assume it doesn't exist
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            log.warn("Unable to lookup weblog ["+
                    searchRequest.getWeblogHandle()+"] "+re.getMessage());
            return;
        }
        
        // get their default page template to use for rendering
        Template page = null;
        try {
            page = weblog.getDefaultPage();
            if(page == null) {
                throw new RollerException("Could not lookup default page "+
                        "for weblog "+weblog.getHandle());
            }
        } catch(Exception e) {
            log.error("Error getting weblogs default page", e);
        }
        
        // set the content type
        response.setContentType("text/html; charset=utf-8");
        
        // looks like we need to render content
        Map model = new HashMap();
        try {
            RollerContext rollerContext = RollerContext.getRollerContext();
            PageContext pageContext = JspFactory.getDefaultFactory().getPageContext(
                    this, request, response,"", true, 8192, true);
            
            // populate the rendering model
            Map initData = new HashMap();
            initData.put("request", request);
            initData.put("searchRequest", searchRequest);
            
            // default weblog models
            RenderModelLoader.loadSearchModels(model, initData);
            
            // special site wide models
            if (rollerContext.isSiteWideWeblog(weblog.getHandle())) {
                RenderModelLoader.loadSiteModels(model, initData);
            }
            
            // add helpers
            RenderModelLoader.loadUtilityHelpers(model);
            RenderModelLoader.loadWeblogHelpers(pageContext, model);
            RenderModelLoader.loadPluginHelpers(weblog, model);

            // Feeds get weblog's custom models too
            RenderModelLoader.loadCustomModels(weblog, model, initData);
            
            // ick, gotta load pre-3.0 model stuff as well :(
            RenderModelLoader.loadOldModels(model, request, response, pageContext);
            
            // manually add search model again to support pre-3.0 weblogs
            RenderModel searchModel = new SearchResultsRenderModel();
            searchModel.init(initData);
            model.put("searchResults", searchModel);
            
        } catch (RollerException ex) {
            log.error("Error loading model objects for page", ex);
            
            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            return;
        }

        
        // lookup Renderer we are going to use
        Renderer renderer = null;
        try {
            log.debug("Looking up renderer");
            renderer = RendererManager.getRenderer("velocity", page.getId());
        } catch(Exception e) {
            // nobody wants to render my content :(
            log.error("Couldn't find renderer for rsd template", e);
            
            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        
        // render content
        CachedContent rendererOutput = new CachedContent(4096);
        try {
            log.debug("Doing rendering");
            renderer.render(model, rendererOutput.getCachedWriter());
            
            // flush rendered output and close
            rendererOutput.flush();
            rendererOutput.close();
        } catch(Exception e) {
            // bummer, error during rendering
            log.error("Error during rendering for rsd template", e);
            
            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        
        
        // post rendering process
        
        // flush rendered content to response
        log.debug("Flushing response output");
        response.setContentLength(rendererOutput.getContent().length);
        response.getOutputStream().write(rendererOutput.getContent());
        
        log.debug("Exiting");
    }


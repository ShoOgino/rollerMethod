    /**
     * Another convenience method which knows how to load a single theme
     * off the filesystem and return a Theme object
     */
    private Theme loadThemeFromDisk(String theme_name, String themepath) {
        
        mLogger.info("Loading theme "+theme_name);  
        
        Theme theme = new Theme();
        theme.setName(theme_name);
        theme.setAuthor("Roller");
        theme.setLastEditor("Roller");
        theme.setEnabled(true);
        
        // start by getting a list of the .vm files for this theme
        File themedir = new File(themepath);
        FilenameFilter filter = new FilenameFilter()
        {
            public boolean accept(File dir, String name)
            {
                return name.endsWith(".vm");
            }
        };
        String[] templates = themedir.list(filter);
        
        // go through each .vm file and read in its contents to a ThemeTemplate
        String template_name = null;
        ThemeTemplate theme_template = null;
        for (int i=0; i < templates.length; i++) {
            // strip off the .vm part
            template_name = templates[i].substring(0, templates[i].length() - 3);            
            File template_file = new File(themepath + File.separator + templates[i]);
            
            // Continue reading theme even if problem encountered with one file
            String msg = "read theme template file ["+template_file+"]";
            if(!template_file.exists() && !template_file.canRead()) {
                mLogger.error("Couldn't " + msg);
                continue;
            }
            char[] chars = null;
            try {
                FileReader reader = new FileReader(template_file);
                chars = new char[(int) template_file.length()];
                reader.read(chars);            
            } catch (Exception noprob) {
                mLogger.error("Exception while attempting to " + msg);
                if (mLogger.isDebugEnabled()) mLogger.debug(noprob);
                continue;
            }
            
            // Strip "_" from name to form link
            boolean navbar = true;
            String template_link = template_name;
            if ("_css".equals(template_name)) {
                navbar = false;
                template_link = "theme.css";
            } else if (template_name.startsWith("_") && template_name.length() > 1) {
                navbar = false;
                template_link = template_link.substring(1);
            }
            
            String decorator = "_decorator";
            if("_decorator".equals(template_name)) {
                decorator = null;
            }
            
            // construct ThemeTemplate representing this file
            // a few restrictions for now:
            //   - we only allow "velocity" for the template language
            //   - decorator is always "_decorator" or null
            //   - all theme templates are considered hidden
            theme_template = new ThemeTemplate(
                    theme,
                    theme_name+":"+template_name,
                    template_name,
                    template_link,
                    new String(chars),
                    template_name,
                    new Date(template_file.lastModified()),
                    "velocity",
                    true,
                    navbar,
                    decorator);

            // add it to the theme
            theme.setTemplate(template_name, theme_template);
        }
        
        // use the last mod date of the last template file
        // as the last mod date of the theme
        theme.setLastModified(theme_template.getLastModified());
        
        return theme;
    }


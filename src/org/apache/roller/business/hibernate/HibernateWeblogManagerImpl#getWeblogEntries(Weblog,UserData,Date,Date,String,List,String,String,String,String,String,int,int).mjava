    public List getWeblogEntries(
            Weblog website,
            UserData    user,
            Date        startDate,
            Date        endDate,
            String      catName,
            List        tags,
            String      status,
            String      text,
            String      sortby,
            String      sortOrder,
            String      locale,
            int         offset,
            int         length) throws RollerException {
        
        WeblogCategoryData cat = null;
        if (StringUtils.isNotEmpty(catName) && website != null) {
            cat = getWeblogCategoryByPath(website, catName);
            if (cat == null) catName = null;
        }
        if (catName != null && catName.trim().equals("/")) {
            catName = null;
        }
                
        try {
            Session session = ((HibernatePersistenceStrategy)this.strategy).getSession();
            
            ArrayList params = new ArrayList();
            StringBuffer queryString = new StringBuffer();
            queryString.append("from WeblogEntryData e where ");

            if (website != null) {
                queryString.append("website.id = ? ");                
                params.add(website.getId());
            } else {
                queryString.append("website.enabled = ? ");                
                params.add(Boolean.TRUE);                
            }
            
            if (user != null) {
                queryString.append("and creator.id = ? ");
                params.add(user.getId());
            }

            if (startDate != null) {
                queryString.append("and pubTime >= ? ");
                params.add(startDate);
            }
            
            if (endDate != null) {
                queryString.append("and pubTime <= ? ");
                params.add(endDate);                
            }
            
            if (cat != null && website != null) {
                queryString.append("and category.id = ? ");
                params.add(cat.getId());                
            }
            
            if (tags != null && tags.size() > 0) {
              for(int i = 0; i < tags.size(); i++) {
                queryString.append(" and tags.name = ?");
                params.add(tags.get(i));
              }
            }
            
            if (status != null) {
                queryString.append("and status = ? ");
                params.add(status);
            }
            
            if (text != null) {
                queryString.append("and (text like ? or summary like ? or title like ?) ");
                String tmp = "%" + text + "%";
                params.add(tmp);
                params.add(tmp);
                params.add(tmp);
            }
            
            if (locale != null) {
                queryString.append("and locale like ? ");
                params.add(locale + '%');
            }
            

            if (sortby != null && sortby.equals("updateTime")) {
                queryString.append("order by updateTime ");
            } else {
                queryString.append("order by pubTime ");
            }
            
            if (sortOrder != null && sortOrder.equals(ASCENDING)) {
                queryString.append("asc ");
            } else {
                queryString.append("desc ");
            }

                
            Query query = session.createQuery(queryString.toString());
            
            // set params
            for(int i = 0; i < params.size(); i++) {
              query.setParameter(i, params.get(i));
            }
                        
            if (offset != 0) {
                query.setFirstResult(offset);
            }
            if (length != -1) {
                query.setMaxResults(length);
            }
            return query.list();
            
        } catch (HibernateException e) {
            log.error(e);
            throw new RollerException(e);
        }
    }


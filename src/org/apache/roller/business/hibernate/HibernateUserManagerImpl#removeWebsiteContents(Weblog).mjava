    /**
     * convenience method for removing contents of a weblog.
     * TODO BACKEND: use manager methods instead of queries here
     */
    private void removeWebsiteContents(Weblog website)
    throws HibernateException, RollerException {
        
        Session session = this.strategy.getSession();
        
        BookmarkManager bmgr = RollerFactory.getRoller().getBookmarkManager();
        WeblogManager wmgr = RollerFactory.getRoller().getWeblogManager();
        
        // remove tags
        Criteria tagQuery = session.createCriteria(WeblogEntryTag.class)
            .add(Expression.eq("weblog.id", website.getId()));
        for(Iterator iter = tagQuery.list().iterator(); iter.hasNext();) {
            WeblogEntryTag tagData = (WeblogEntryTag) iter.next();
            this.strategy.remove(tagData);
        }
        
        // remove site tag aggregates
        List tags = wmgr.getTags(website, null, null, -1);
        for(Iterator iter = tags.iterator(); iter.hasNext();) {
            TagStat stat = (TagStat) iter.next();
            Query query = session.createQuery("update WeblogEntryTagAggregate set total = total - ? where name = ? and weblog is null");
            query.setParameter(0, new Integer(stat.getCount()));
            query.setParameter(1, stat.getName());
            query.executeUpdate();
        }
        
        // delete all weblog tag aggregates
        session.createQuery("delete from WeblogEntryTagAggregate where weblog = ?")
            .setParameter(0, website).executeUpdate();
        
        // delete all bad counts
        session.createQuery("delete from WeblogEntryTagAggregate where total <= 0").executeUpdate();       
                
        // Remove the website's ping queue entries
        Criteria criteria = session.createCriteria(PingQueueEntry.class);
        criteria.add(Expression.eq("website", website));
        List queueEntries = criteria.list();
        
        // Remove the website's auto ping configurations
        AutoPingManager autoPingMgr = RollerFactory.getRoller().getAutopingManager();
        List autopings = autoPingMgr.getAutoPingsByWebsite(website);
        Iterator it = autopings.iterator();
        while(it.hasNext()) {
            this.strategy.remove((AutoPing) it.next());
        }
        
        // Remove the website's custom ping targets
        PingTargetManager pingTargetMgr = RollerFactory.getRoller().getPingTargetManager();
        List pingtargets = pingTargetMgr.getCustomPingTargets(website);
        it = pingtargets.iterator();
        while(it.hasNext()) {
            this.strategy.remove((PingTarget) it.next());
        }
        
        // remove entries
        Criteria entryQuery = session.createCriteria(WeblogEntry.class);
        entryQuery.add(Expression.eq("website", website));
        List entries = entryQuery.list();
        for (Iterator iter = entries.iterator(); iter.hasNext();) {
            wmgr.removeWeblogEntry((WeblogEntry) iter.next());
        }
        
        // remove associated referers
        Criteria refererQuery = session.createCriteria(WeblogReferrer.class);
        refererQuery.add(Expression.eq("website", website));
        List referers = refererQuery.list();
        for (Iterator iter = referers.iterator(); iter.hasNext();) {
            WeblogReferrer referer = (WeblogReferrer) iter.next();
            this.strategy.remove(referer);
        }
        
        
        // remove associated pages
        Criteria pageQuery = session.createCriteria(WeblogTemplate.class);
        pageQuery.add(Expression.eq("website", website));
        List pages = pageQuery.list();
        for (Iterator iter = pages.iterator(); iter.hasNext();) {
            this.removePage((WeblogTemplate) iter.next());
        }
        
        // remove folders (including bookmarks)
        WeblogBookmarkFolder rootFolder = bmgr.getRootFolder(website);
        if (null != rootFolder) {
            this.strategy.remove(rootFolder);
        }
        
        // remove categories
        WeblogCategory rootCat = website.getDefaultCategory();
        if (null != rootCat) {
            this.strategy.remove(rootCat);
        }
        
        // remove permissions
        List permissions = this.getAllPermissions(website);
        for (Iterator iter = permissions.iterator(); iter.hasNext(); ) {
            this.removePermissions((WeblogPermission) iter.next());
        }
    }


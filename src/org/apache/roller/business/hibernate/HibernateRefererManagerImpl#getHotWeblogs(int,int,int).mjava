    /**
     * Returns hot weblogs as StatCount objects, in descending order by today's hits.
     */
    public List getHotWeblogs(int sinceDays, int offset, int length)
        throws RollerException {
        // TODO: ATLAS getDaysPopularWebsites DONE TESTED
        String msg = "Getting hot weblogs";
        ArrayList result = new ArrayList();
        Calendar cal = Calendar.getInstance();
        cal.setTime(new Date());
        cal.add(Calendar.DATE, -1 * sinceDays);
        Date startDate = cal.getTime();
        try {      
            Session session = 
                ((HibernatePersistenceStrategy)strategy).getSession();            
            Query query = session.createQuery(
                "select sum(r.dayHits) as s, w.id, w.name, w.handle  "
               +"from WebsiteData w, RefererData r "
               +"where r.website=w and w.enabled=true and w.active=true and w.lastModified > :startDate "
               +"group by w.name, w.handle, w.id order by col_0_0_ desc"); 
            query.setParameter("startDate", startDate);
            
              // +"group by w.name, w.handle, w.id order by s desc");
              // The above would be *much* better but "HQL parser does not   
              // resolve alias in ORDER BY clause" (See Hibernate issue HHH-892)
            
            if (offset != 0) {
                query.setFirstResult(offset);
            }
            if (length != -1) {
                query.setMaxResults(length);
            }
            Iterator rawResults = query.list().iterator();
            for (Iterator it = query.list().iterator(); it.hasNext();) {
                Object[] row = (Object[])it.next();
                Number hits =          (Number)row[0];
                String websiteId =     (String)row[1];
                String websiteName =   (String)row[2];
                String websiteHandle = (String)row[3];
                StatCount statCount = new StatCount(
                    websiteId,
                    websiteHandle,
                    websiteName,
                    "statCount.weblogDayHits",
                    hits.longValue());
                statCount.setWeblogHandle(websiteHandle);
                result.add(statCount);
            }
            return result;
            
        } catch (Throwable pe) {
            log.error(msg, pe);
            throw new RollerException(msg, pe);
        }
    }


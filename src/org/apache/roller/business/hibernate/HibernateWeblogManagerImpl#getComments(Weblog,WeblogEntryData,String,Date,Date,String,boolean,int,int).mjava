    public List getComments(
            Weblog     website,
            WeblogEntryData entry,
            String          searchString,
            Date            startDate,
            Date            endDate,
            String          status,
            boolean         reverseChrono,
            int             offset,
            int             length
            ) throws RollerException {
        
        try {
            Session session = ((HibernatePersistenceStrategy)this.strategy).getSession();
            Criteria criteria = session.createCriteria(CommentData.class);
            
            if (entry != null) {
                criteria.add(Expression.eq("weblogEntry", entry));
            } else if (website != null) {
                criteria.createAlias("weblogEntry","e");
                criteria.add(Expression.eq("e.website", website));
            }
            
            if (searchString != null) {
                criteria.add(Expression.disjunction()
                   .add(Expression.like("url", searchString, MatchMode.ANYWHERE))
                   .add(Expression.like("content", searchString, MatchMode.ANYWHERE)));
            }
            
            if (startDate != null) {
                criteria.add(Expression.ge("postTime", startDate));
            }
            
            if (endDate != null) {
                criteria.add(Expression.le("postTime", endDate));
            }
            
            if (status != null) {
                if("ALL_IGNORE_SPAM".equals(status)) {
                    // we want all comments, expect spam
                    // so that means where status != SPAM
                    criteria.add(Expression.ne("status", "SPAM"));
                } else {
                    criteria.add(Expression.eq("status", status));
                }
            }
            
            if (length != -1) {
                criteria.setMaxResults(offset + length);
            }
            
            if (reverseChrono) {
                criteria.addOrder(Order.desc("postTime"));
            } else {
                criteria.addOrder(Order.asc("postTime"));
            }
            
            List comments = criteria.list();
            if (offset==0 || comments.size() < offset) {
                return comments;
            }
            List range = new ArrayList();
            for (int i=offset; i<comments.size(); i++) {
                range.add(comments.get(i));
            }
            return range;
            
        } catch (HibernateException e) {
            log.error(e);
            throw new RollerException(e);
        }
    }


    public List getMostCommentedWeblogEntries( 
            WebsiteData website, Date startDate, Date endDate, int offset, int length) 
            throws RollerException {
        // TODO: ATLAS getMostCommentedWeblogEntries DONE
        String msg = "Getting most commented weblog entries";
        if (endDate == null) endDate = new Date();
        try {      
            Session session = 
                ((HibernatePersistenceStrategy)strategy).getSession();            
            Query query = null;
            if (website != null) {
                StringBuffer sb = new StringBuffer();
                sb.append("select count(distinct c), c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title ");
                sb.append("from CommentData c ");
                sb.append("where c.weblogEntry.website=:website and c.weblogEntry.pubTime < :endDate ");
                if (startDate != null) {
                    sb.append("and c.weblogEntry.pubTime > :startDate ");
                }                   
                sb.append("group by c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title ");
                sb.append("order by col_0_0_ desc");
                query = session.createQuery(sb.toString());
                query.setParameter("website", website);
                query.setParameter("endDate", endDate);
                if (startDate != null) {
                    query.setParameter("startDate", startDate);
                }   
            } else {
                StringBuffer sb = new StringBuffer();
                sb.append("select count(distinct c),   c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title ");
                sb.append("from CommentData c ");
                sb.append("where c.weblogEntry.pubTime < :endDate ");
                if (startDate != null) {
                    sb.append("and c.weblogEntry.pubTime > :startDate ");
                } 
                sb.append("group by c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title ");
                sb.append("order by col_0_0_ desc ");
                query = session.createQuery(sb.toString());
                query.setParameter("endDate", endDate);
                if (startDate != null) {
                    query.setParameter("startDate", startDate);
                } 
            }
            if (offset != 0) {
                query.setFirstResult(offset);
            }
            if (length != -1) {
                query.setMaxResults(length);
            }
            List results = new ArrayList();
            for (Iterator iter = query.list().iterator(); iter.hasNext();) {
                Object[] row = (Object[]) iter.next();
                StatCount statCount = new StatCount(
                    (String)row[1],                             // entry id
                    (String)row[2],                             // entry anchor
                    (String)row[3],                             // entry title
                    "statCount.weblogEntryCommentCountType",    // stat desc
                    new Long(((Integer)row[0]).intValue()).longValue()); // count
                
                results.add(statCount);
            }
            return results;
        } catch (Throwable pe) {
            log.error(msg, pe);
            throw new RollerException(msg, pe);
        }
    }


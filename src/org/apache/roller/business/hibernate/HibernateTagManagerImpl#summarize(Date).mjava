    public Date summarize(Date startDate) throws RollerException {
      
      Session session = ((HibernatePersistenceStrategy) strategy).getSession();
      
      // This queries the db for the last time we'll include in our batch processing
      Query query = session.createQuery("select time from WeblogEntryTagData group by time order by time desc");
      query.setMaxResults(1);
      
      Timestamp thisRun = (Timestamp) query.uniqueResult();
      
      if(thisRun == null || thisRun.compareTo(startDate) == 0)
      {
        // nothing to do
        log.debug("TagManager.summarize() found nothing to do.");
        return null;
      }
                        
      // #### SiteTagAgg ####
      
      List params = new ArrayList(2);
      StringBuffer queryString = new StringBuffer();
      queryString.append("select name, count(name) from WeblogEntryTagData where ");
      if(startDate != null) {
        queryString.append("time > ? and ");
        params.add(startDate);
      }
      queryString.append("time <= ? group by name");
      params.add(thisRun);
      
      query =  session.createQuery(queryString.toString());
      for(int i = 0; i < params.size(); i++)
        query.setParameter(i, params.get(i));
      
      List results = query.list();
      log.debug("TagManager.summarize() found " + results.size() + " tags to summarize.");
      
      for(Iterator it = results.iterator(); it.hasNext(); )
      {
        Object[] row = (Object[]) it.next();
        String tagName = (String) row[0];
        int tagCount = ((Integer)row[1]).intValue();
        
        SiteTagAggregateData siteData = (SiteTagAggregateData) session.createCriteria(SiteTagAggregateData.class).add(Expression.eq("name", tagName)).uniqueResult();
        if(siteData == null) 
            siteData = new SiteTagAggregateData(null, tagName, tagCount);
        else
            siteData.setCount(siteData.getCount()+tagCount);
        
        strategy.store(siteData);
      } 

      // #### WeblogTagAgg ####
      
      params = new ArrayList(2);
      queryString = new StringBuffer();
      queryString.append("select t.website, t.name, count(t.name) from WeblogEntryTagData t where ");
      if(startDate != null) {
        queryString.append("t.time > ? and ");
        params.add(startDate);
      }
      queryString.append("t.time <= ? group by t.website, t.name");
      params.add(thisRun);
      
      query =  session.createQuery(queryString.toString());
      for(int i = 0; i < params.size(); i++)
        query.setParameter(i, params.get(i));
      
      results = query.list();
      log.debug("TagManager.summarize() found " + results.size() + " tags/website to summarize.");
                
      for(Iterator it = results.iterator(); it.hasNext(); )
      {
        Object[] row = (Object[]) it.next();
        WebsiteData website = (WebsiteData) row[0];
        String tagName = (String) row[1];
        int tagCount = ((Integer)row[2]).intValue();
        
        WeblogTagAggregateData weblogData = (WeblogTagAggregateData) session
          .createCriteria(WeblogTagAggregateData.class)
          .add(Expression.eq("name", tagName))
          .add(Expression.eq("website", website))
          .uniqueResult();
        if(weblogData == null) 
          weblogData = new WeblogTagAggregateData(null, website, tagName, tagCount);
        else
          weblogData.setCount(weblogData.getCount()+tagCount);
        
        strategy.store(weblogData);
      } 
        
      session.flush(); 

      return thisRun;
    }


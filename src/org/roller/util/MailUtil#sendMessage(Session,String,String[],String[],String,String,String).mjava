    /**
     * This method is used to send a Message with a pre-defined
     * mime-type.
     * 
     * @param from e-mail address of sender
     * @param to e-mail address(es) of recipients
     * @param subject subject of e-mail
     * @param content the body of the e-mail
     * @param mimeType type of message, i.e. text/plain or text/html
     * @throws MessagingException the exception to indicate failure
     */
    public static void sendMessage
    (
    	Session session,
        String from,
        String[] to,
        String[] cc,
        String subject,
        String content,
        String mimeType
    ) 
    throws MessagingException
    {
        Message message = new MimeMessage(session);
        
        // TODO Add configuration for default "from" email address
        if (! StringUtils.isEmpty(from)) {
			InternetAddress sentFrom = new InternetAddress(from);
			message.setFrom(sentFrom);
			if (mLogger.isDebugEnabled()) 
			{
				mLogger.debug("e-mail from: " + sentFrom);
			}
        }

		InternetAddress[] sendTo = new InternetAddress[to.length];

		for (int i = 0; i < to.length; i++) 
		{
			sendTo[i] = new InternetAddress(to[i]);

			if (mLogger.isDebugEnabled()) 
			{
				mLogger.debug("sending e-mail to: " + to[i]);
			}
		}
		message.setRecipients(Message.RecipientType.TO, sendTo);

		if (cc != null) 
		{
			InternetAddress[] copyTo = new InternetAddress[cc.length];

			for (int i = 0; i < cc.length; i++) 
			{
				copyTo[i] = new InternetAddress(cc[i]);

				if (mLogger.isDebugEnabled()) 
				{
					mLogger.debug("copying e-mail to: " + cc[i]);
				}
			}

			message.setRecipients(Message.RecipientType.CC, copyTo);
		}	        

        message.setSubject((subject == null) ? "(no subject)" : subject);
        message.setContent(content, mimeType);

        Transport.send(message);
    }


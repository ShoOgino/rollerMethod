    /**
     * Process the specified HTTP request, and create the corresponding HTTP
     * response (or forward to another web component that will create it).
     *
     * @param request The HTTP request we are processing
     * @param response The HTTP response we are creating
     *
     * @exception IOException if an input/output error occurs
     * @exception ServletException if a servlet exception occurs
     */
    public void execute(HttpServletRequest request, 
                        HttpServletResponse response) throws IOException, 
                                                             ServletException
    {
        // if user is already authenticated, it means they probably bookmarked
        // or typed in the URL to login.jsp directly, route them to the main
        // menu if this is the case
        if (request.getRemoteUser() != null) {
            if (mLogger.isDebugEnabled()) {
                mLogger.debug("User '" + request.getRemoteUser() +
                          "' already logged in, routing to main");
            }
            response.sendRedirect(request.getContextPath() + "/main.do");
            return;
        }
        
        // Extract attributes we will need
        String username = request.getParameter("j_username");
        String password = request.getParameter("j_password");
        
        String encryptedPassword = getEncryptedPassword(request, username, password);

        String req = null;
        String contextUrl = null;
        if (this.secureLogin)
        {
            // Secure login and app server may not know it, so we must build URL 
            StringBuffer sb = new StringBuffer("");
            sb.append("https://");
            if (this.loginHttpsPort.equals(SslUtil.STD_HTTPS_PORT)) 
            {
                sb.append(request.getServerName());
            }
            else 
            {
                sb.append(request.getServerName() + ":" + this.loginHttpsPort);
            }
            sb.append(request.getContextPath());
            contextUrl = sb.toString();
        }
        else 
        {
            contextUrl = request.getContextPath();
        }
        // TODO: is there a way we can do this without having password in the URL?
        req = contextUrl + mAuthURL 
            + "?j_username=" + username 
            + "&j_password=" + encryptedPassword 
            + "&j_uri=" + request.getParameter("j_uri");

        if (mLogger.isDebugEnabled())
        {
            mLogger.debug("Authenticating user '" + username + "'");
        }

        response.sendRedirect(response.encodeRedirectURL(req));
    }


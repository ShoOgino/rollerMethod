    public ActionForward save(
            ActionMapping       mapping,
            ActionForm          actionForm,
            HttpServletRequest  request,
            HttpServletResponse response)
            throws Exception
    {
        ActionForward forward = mapping.findForward("inviteMember.page");
        ActionMessages msgs = new ActionMessages();
        ActionMessages errors = new ActionErrors();
        InviteMemberForm form = (InviteMemberForm)actionForm;
        UserManager umgr = RollerFactory.getRoller().getUserManager();
        UserData user = umgr.getUser(form.getUserName());
        if (user == null)
        {
            errors.add(ActionErrors.GLOBAL_ERROR, 
                new ActionError("inviteMember.error.userNotFound"));
        }
        else 
        {
            RollerSession rses = RollerSession.getRollerSession(request);
            WebsiteData website = rses.getCurrentWebsite();
            PermissionsData perms = umgr.getPermissions(website, user);
            if (perms != null && perms.isPending())
            {
                errors.add(ActionErrors.GLOBAL_ERROR, 
                    new ActionError("inviteMember.error.userAlreadyInvited"));
            }
            else if (perms != null)
            {
                errors.add(ActionErrors.GLOBAL_ERROR, 
                    new ActionError("inviteMember.error.userAlreadyMember"));
            }
            else
            {
                String mask = request.getParameter("permissionsMask");
                umgr.inviteUser(website, user, Short.parseShort(mask));
                request.setAttribute("user", user);
                forward = mapping.findForward("inviteMemberDone.page");
                notifyInvitee(request, website, user);
                msgs.add(ActionMessages.GLOBAL_MESSAGE, 
                    new ActionMessage("inviteMember.userInvited"));
            }
        }
        if (!errors.isEmpty()) saveErrors(request, errors);
        return forward; 
    }


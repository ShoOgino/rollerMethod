	//-----------------------------------------------------------------------
	/**
	 * Save the selected Theme or edited template as the Weblog pages template.
     * 
     * @param mapping Struts action mapping.
     * @param form Theme editor form bean.
     * @param request Servlet request.
     * @param response Servlet response.
     * @return Forward to edit-website page.
     * @throws IOException
     * @throws ServletException
	 */
	public ActionForward save(
		ActionMapping       mapping,
		ActionForm          form,
		HttpServletRequest  request,
		HttpServletResponse response)
		throws IOException, ServletException
	{
		ActionErrors errors = new ActionErrors();
		ActionForward forward = mapping.findForward("editTheme.page");
		try
		{
			RollerRequest rreq = RollerRequest.getRollerRequest(request);
			if ( rreq.isUserAuthorizedToEdit() )
			{
                 loadThemes( rreq, errors, true);
                 ThemeEditorForm teForm = (ThemeEditorForm)form;
                 String theme = teForm.getThemeName();
                 ServletContext ctx = rreq.getServletContext();
                 RollerContext rollerContext = 
                                RollerContext.getRollerContext( ctx );
                 
                 WebsiteData website = rreq.getWebsite();
                	
				// load the template either from the Form
				// or from the disk (if its a stock Theme).
				String template = "";
				if ( "Custom".equals( theme ) )
				{
					// use the edited template
					template = teForm.getThemeTemplate();
				}
				else
				{
					// Figure path to new user theme
					String sb = this.readTheme(rollerContext, theme);
					template = sb;
				}

                // clear the places holding onto the template
                PreviewResourceLoader.clearAllTemplates(website.getHandle());
                request.getSession().removeAttribute(SESSION_TEMPLATE);

				// store the template in the page
				UserManager mgr = rreq.getRoller().getUserManager();
				PageData page = getDefaultPage( rreq );

				page.setTemplate( template );
				mgr.storePage( page);
                
                saveThemePages( rreq, theme);
                
                // put them into the PreviewResourceLoader also
                setThemePages(rreq, theme);

				// clear the page cache
				PageCacheFilter.removeFromCache(request, rreq.getWebsite());
				teForm.setThemeName("Custom");
			}
			else
			{
				forward = mapping.findForward("access-denied");
			}
		}
		catch (Exception e)
		{
            mLogger.error("ERROR in action",e);
			throw new ServletException(e);
		}
		return forward;
	}


	//-----------------------------------------------------------------------
	/**
	 * Load the template/theme to be previewed.  The template must be stashed
	 * in PreviewResourceLoader so that PreviewServlet can find it.
     * 
     * @param mapping Struts action mapping.
     * @param form Theme editor form bean.
     * @param request Servlet request.
     * @param response Servlet response.
     * @return Forward to edit-website page.
     * @throws IOException
     * @throws ServletException
	 */
	public ActionForward preview(
		ActionMapping       mapping,
		ActionForm          form,
		HttpServletRequest  request,
		HttpServletResponse response)
		throws IOException, ServletException
	{
		ActionErrors errors = new ActionErrors();
		ActionForward forward = mapping.findForward("editTheme.page");
		try
		{
             RollerSession rollerSession = RollerSession.getRollerSession(request);
			RollerRequest rreq = RollerRequest.getRollerRequest(request);
			if ( rollerSession.isUserAuthorizedToEdit() )
			{
                HttpSession session = request.getSession();
				ThemeEditorForm teForm = (ThemeEditorForm)form;
				
                String theme = teForm.getThemeName();
                ServletContext ctx = rreq.getServletContext();
                RollerContext rollerContext =
                    RollerContext.getRollerContext( ctx );
                                      
                boolean showCustom = false;
				if ( !"Custom".equals( theme ) )
				{
                    // if it isn't a custom template, load it from file
					String sb = this.readTheme(rollerContext, theme);
					teForm.setThemeTemplate( sb );

					// clear any previously set themes
					clearThemePages(rreq, 
						(String) session.getAttribute(LAST_THEME)); 
						                   
                    setThemePages(request, theme);
					session.setAttribute(LAST_THEME, theme);
				}
                else
                {
                	showCustom = true;
                    clearThemePages(rreq, 
                        (String) session.getAttribute(LAST_THEME));
                        
                    session.removeAttribute(LAST_THEME);
					//session.removeAttribute(SESSION_TEMPLATE);
                    
				   //UserData ud = rreq.getUser();
				   //PreviewResourceLoader.clearAllTemplates( ud.getUserName());
                }
				loadThemes( rreq, errors, showCustom);

				// put the template where PreviewServlet
				// will be able to find it
				PageData page = getDefaultPage( request );			
				PreviewResourceLoader.setTemplate(page.getId(), 
					teForm.getThemeTemplate(), RollerSession.getRollerSession(request).getCurrentWebsite().getHandle() );
				
				// save the template in session for later editing
				session.setAttribute(SESSION_TEMPLATE,
					teForm.getThemeTemplate() );
			}
			else
			{
				forward = mapping.findForward("access-denied");
			}
		}
		catch (Exception e)
		{
            mLogger.error("ERROR in action",e);
			throw new ServletException(e);
		}
		return forward;
	}	


    /**
     * Delete folders and bookmarks indicated by BookmarksForm bean.
     * @param mapping Action mapping.
     * @param actionForm Form bean.
     * @param request Request.
     * @param response Response.
     * @return Forward to BookmarksForm or access-denied.
     * @throws RollerException
     */
    public ActionForward deleteSelected(
        ActionMapping       mapping,
        ActionForm          actionForm,
        HttpServletRequest  request,
        HttpServletResponse response)
        throws RollerException
    {
        RollerRequest rreq = RollerRequest.getRollerRequest(request);
        if (rreq.isUserAuthorizedToEdit())
        {
            BookmarkManager bmgr = rreq.getRoller().getBookmarkManager();
            BookmarksForm form = (BookmarksForm)actionForm;

            mLogger.debug("Deleting folders and bookmarks.");

            String folders[] = form.getSelectedFolders();
            if (null != folders)
            {
                for (int i = 0; i < folders.length; i++)
                {
                    FolderData fd = bmgr.retrieveFolder(folders[i]);
                    fd.remove(); // removes child folders and bookmarks too
                }
            }

            String bookmarks[] = form.getSelectedBookmarks();
            if (null != bookmarks)
            {
                for (int j = 0; j < bookmarks.length; j++)
                {
                    bmgr.removeBookmark(bookmarks[j]);
                }
            }
            rreq.getRoller().commit();

            addModelObjects(request, (BookmarksForm)actionForm);
            return mapping.findForward("BookmarksForm");
        }
        else
        {
            return mapping.findForward("access-denied");
        }
    }


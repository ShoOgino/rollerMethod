    /**
     * Move folders and bookmarks indicated by BookmarksForm bean.
     * @param mapping Action mapping.
     * @param actionForm  Form bean.
     * @param request Request.
     * @param response Response.
     * @return Forward to BookmarksForm or access-denied.
     * @throws RollerException
     */
    public ActionForward moveSelected(
        ActionMapping       mapping,
        ActionForm          actionForm,
        HttpServletRequest  request,
        HttpServletResponse response)
        throws RollerException
    {
        RollerRequest rreq = RollerRequest.getRollerRequest(request);
        if (rreq.isUserAuthorizedToEdit())
        {
            BookmarkManager bmgr = rreq.getRoller().getBookmarkManager();
            BookmarksForm form = (BookmarksForm)actionForm;

            mLogger.debug("Moving folders and bookmarks to folder, id="
                + form.getMoveToFolderId());

            // Move subfolders to new folder.
            String folders[] = form.getSelectedFolders();
            FolderData parent = bmgr.retrieveFolder(form.getMoveToFolderId());
            if (null != folders)
            {
                for (int i = 0; i < folders.length; i++)
                {
                    FolderData fd = bmgr.retrieveFolder(folders[i]);

                    // Don't move folder into itself.
                    if (!fd.getId().equals(parent.getId()))
                    {
                        fd.setParent(parent);
                        fd.save();
                    }
                }
            }

            // Move bookmarks.
            String bookmarks[] = form.getSelectedBookmarks();
            if (null != bookmarks)
            {
                for (int j = 0; j < bookmarks.length; j++)
                {
                    BookmarkData bd = bmgr.retrieveBookmark(bookmarks[j]);
                    bd.setFolder(parent);
                    bd.save();
                }
            }
            rreq.getRoller().commit();

            addModelObjects(request, (BookmarksForm)actionForm);
            return mapping.findForward("BookmarksForm");
        }
        else
        {
            return mapping.findForward("access-denied");
        }
    }


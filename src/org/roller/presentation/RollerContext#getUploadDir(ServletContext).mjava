    //-----------------------------------------------------------------------
    /**
     *  Gets the hard-drive location of the upload directory.
     */
    public static String getUploadDir(ServletContext app)
    {
        RollerConfig rollerConfig =
            RollerContext.getRollerContext(app).getRollerConfig();
        // if the app doesn't have a value, figure it out
        // from the ServletContext
        if (StringUtils.isEmpty(rollerConfig.getUploadDir()))
        {
            try
            {
                // ServletContext getRealPath() vs. getResource()
                //
                // The getResource() returns a paths rooted at c:\localhost
                // on my machine and I cannot figure out how to configure
                // it to do otherwise (I'm using Tomcat 4.0.4).
                //
                // Is getResource() the right thing and if so, how do you
                // configure getResource() to point at your out-of-context
                // resources? Do you use the Tomcat server.xml <Resources> tag?
                // My attempts at this failed and I couldn't Google an example.
                //
                // Anyhow...
                //
                // getRealPath() should work for everybody since we are
                // already assuming (for now) that we are not deployed-as
                // and running from a WAR.

                String dir =
                    app.getRealPath(RollerContext.USER_RESOURCES) + "/";

                //java.net.URL path = app.getResource(
                //RollerContext.USER_RESOURCES );
                // String dir = path.getPath() + "/";

                return dir;
            }
            //catch (java.net.MalformedURLException mue)
            catch (Exception mue)
            {
                System.err.println("Unable to load app.getResource()");
            }
            return null;
        }

        // otherwise return the value in app
        String path = rollerConfig.getUploadDir();
        if (!path.endsWith("/") && !path.endsWith("\\"))
        {
            path = path + "/";
        }
        return path;
    }


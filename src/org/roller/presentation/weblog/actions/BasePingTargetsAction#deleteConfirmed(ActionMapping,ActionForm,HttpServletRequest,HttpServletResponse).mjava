    /**
     * Delete a ping target (already confirmed).  This performs the actual deletion.
     *
     * @param mapping
     * @param form
     * @param req
     * @param res
     * @return the result of <code>view()</code> after the deletion
     * @throws Exception
     */
    public ActionForward deleteConfirmed(ActionMapping mapping, ActionForm form,
                                         HttpServletRequest req, HttpServletResponse res)
        throws Exception
    {
        RollerRequest rreq = RollerRequest.getRollerRequest(req);
        PingTargetForm pingTargetForm = (PingTargetForm) form;
        PingTargetManager pingTargetMgr = RollerFactory.getRoller().getPingTargetManager();
        try
        {
            if (!hasRequiredRights(rreq))
            {
                return mapping.findForward(ACCESS_DENIED_PAGE);
            }
            String pingTargetId = pingTargetForm.getId();
            if (pingTargetId == null || pingTargetId.length() == 0)
            {
                throw new RollerException("Missing ping target id.");
            }
            pingTargetMgr.removePingTarget(pingTargetId);
            RollerFactory.getRoller().commit();
            return view(mapping, form, req, res);
        }
        catch (Exception e)
        {
            getLogger().error("ERROR in action", e);
            throw new ServletException(e);
        }
    }


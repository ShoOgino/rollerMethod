    //-----------------------------------------------------------------------
    /**
     * Show entry permalink and an edit-entry link if logged in as editor.
     * @param entry Weblog entry for which permalink is to be shown.
     * @deprecated Use methods on
     * {@link org.roller.presentation.weblog.WeblogEntryDataEx WeblogEntryDataEx}
     * instead.
     * @return HTML for displaying entry permalink icon with permalink.
     */
    public String showEntryPermalink( WeblogEntryData entry )
    {
        HttpServletRequest request = getRollerRequest().getRequest();
        String userName = getRollerRequest().getUser().getUserName();

        String edit = null;
        try
        {
            if ( getRollerRequest().isUserAuthorizedToEdit() )
            {
                Hashtable params = new Hashtable();
                params.put( RollerRequest.WEBLOGENTRYID_KEY, entry.getId());
                params.put( RollerRequest.USERNAME_KEY, userName);
                params.put( RollerRequest.ANCHOR_KEY, entry.getAnchor());
                edit = RequestUtils.computeURL( mPageContext,
                    "editWeblog", null, null, params,null,false);
            }
        }
        catch (Exception e)
        {
           // should never happen, but if it does:
           mLogger.error("ERROR creating Edit-Entry URL",e);
        }

        StringBuffer sb = new StringBuffer();
        sb.append( "<a href=\"");
        sb.append( request.getContextPath());
        sb.append( "/page/");
        sb.append( userName );
        sb.append( "/");
        sb.append( showFormattedEntryDate("yyyyMMdd") );
        sb.append( "#" );
        sb.append( entry.getAnchor() );
        sb.append( "\" title=\"Permanent link to this weblog entry\"" );
        sb.append( " class=\"entrypermalink\">#</a>" );
        if ( edit != null )
        {
            sb.append( " [<a href=\""+edit+"\">Edit</a>]" );
        }

        return sb.toString();
    }


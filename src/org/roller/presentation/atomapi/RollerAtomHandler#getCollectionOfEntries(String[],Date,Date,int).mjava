    /**
     * Helper method that returns collection of entries, called by getCollection().
     */
    public AtomCollection getCollectionOfEntries(
            String[] pathInfo, Date start, Date end, int offset) 
        throws Exception
    {
        String handle = pathInfo[0];
        String absUrl = mRollerContext.getAbsoluteContextUrl(mRequest);
        WebsiteData website = mRoller.getUserManager().getWebsiteByHandle(handle);
        List entries = null;
        if (canView(website)) 
        {
            if (pathInfo.length == 2) // handle /blogname/entries
            {
                // return most recent blog entries
                if (offset == -1)
                {
                    entries = mRoller.getWeblogManager().getWeblogEntries(
                            website,           // website
                            start,             // startDate
                            end,               // endDate
                            null,              // catName
                            WeblogManager.ALL, // status
                            new Integer(mMaxEntries + 1)); // maxEntries
                }
                else
                {
                    entries = mRoller.getWeblogManager().getWeblogEntries(
                            website,           // website
                            start,             // startDate
                            end,               // endDate
                            null,              // catName
                            WeblogManager.ALL, // status
                            offset,            // offset (for range paging)
                            mMaxEntries + 1);  // maxEntries
                }
            }
            else if (pathInfo.length == 3) // handle /blogname/entries/entryid
            {
                // return entries previous to entry specified by pathInfo
                String entryid = pathInfo[2];               
                WeblogManager wmgr = mRoller.getWeblogManager();
                WeblogEntryData entry = wmgr.retrieveWeblogEntry(entryid);
                entries = wmgr.getPreviousEntries(entry, null, mMaxEntries + 1);
            }
            else throw new Exception("ERROR: bad URL");
            
            // build collection
            AtomCollection col = new AtomCollection();
            if (entries.size() > mMaxEntries) 
            {
                // there are more entries, so include next link
                WeblogEntryData lastEntry = 
                    (WeblogEntryData)entries.get(entries.size() - 1);
                col.setNext(createNextLink(lastEntry, start, end, offset));
            }
            // add up to max entries to collection 
            int count = 0;
            Iterator iter = entries.iterator();
            while (iter.hasNext() && count++ < mMaxEntries)
            {
                WeblogEntryData rollerEntry = (WeblogEntryData)iter.next();
                AtomCollection.Member member = new AtomCollection.Member();
                member.setTitle(rollerEntry.getDisplayTitle());
                member.setUpdated(rollerEntry.getUpdateTime());
                member.setHref(absUrl 
                    + "/atom/" + handle + "/entry/" + rollerEntry.getId());
                col.addMember(member);
            }
            return col;
        }
        throw new Exception("ERROR: not authorized");
    }


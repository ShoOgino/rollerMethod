    /**
     * Create new resource in generic collection (a Roller blog has only one).
     * TODO: can we avoid saving temporary file?
     * TODO: do we need to handle mutli-part MIME uploads?
     * TODO: use Jakarta Commons File-upload?
     */
    public String postResource(String[] pathInfo, 
            String name, String contentType, InputStream is)
            throws Exception
    {
        // authenticated client posted a weblog entry
        String handle = pathInfo[0];
        WebsiteData website = mRoller.getUserManager().getWebsiteByHandle(handle);
        if (canEdit(website) && pathInfo.length > 1)
        {
            try
            {
                FileManager fmgr = mRoller.getFileManager();
                RollerMessages msgs = new RollerMessages();
                
                // save to temp file
                if (name == null) 
                {
                    throw new Exception(
                        "ERROR[postResource]: No 'name' present in HTTP headers");
                }
                File tempFile = File.createTempFile(name,"tmp");
                FileOutputStream fos = new FileOutputStream(tempFile);
                Utilities.copyInputToOutput(is, fos);
                fos.close();
                
                // If save is allowed by Roller system-wide policies   
                if (fmgr.canSave(website, name, tempFile.length(), msgs)) 
                {
                    // Then save the file
                    FileInputStream fis = new FileInputStream(tempFile);
                    fmgr.saveFile(website, name, tempFile.length(), fis);
                    fis.close();
                    
                    // TODO: build URL to uploaded file should be done in FileManager
                    String uploadPath = RollerContext.getUploadPath(
                        mRequest.getSession(true).getServletContext());
                    uploadPath += "/" + website.getHandle() + "/" + name;
                    return RequestUtils.printableURL(
                        RequestUtils.absoluteURL(mRequest, uploadPath));                    
                }
                tempFile.delete();
                throw new Exception("File upload denied because:" + msgs.toString());
            }
            catch (Exception e)
            {
                String msg = "ERROR in atom.postResource";
                mLogger.error(msg,e);
                throw new Exception(msg);
            }
        }
        throw new Exception("ERROR not authorized to edit website");
    }


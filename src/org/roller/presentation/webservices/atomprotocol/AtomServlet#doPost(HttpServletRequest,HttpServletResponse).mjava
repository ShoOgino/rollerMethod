    //-----------------------------------------------------------------------------
    /**
     * Handles an Atom POST by calling handler to identify URI, reading/parsing
     * data, calling handler and writing results to response.
     */
    protected void doPost(HttpServletRequest req, HttpServletResponse res)
    throws ServletException, IOException {
        AtomHandler handler = createAtomRequestHandler(req);
        String userName = handler.getAuthenticatedUsername();
        if (userName != null) {
            String[] pathInfo = getPathInfo(req);
            try {
                if (handler.isEntryCollectionURI(pathInfo)) {
                            
                    // parse incoming entry
                    Entry unsavedEntry = parseEntry(
                        new InputStreamReader(req.getInputStream()));
                     
                    // call handler to post it
                    Entry savedEntry = handler.postEntry(pathInfo, unsavedEntry);
                    Iterator links = savedEntry.getAlternateLinks().iterator();
                     
                    // return alternate link as Location header
                    while (links.hasNext()) {
                        Link link = (Link) links.next();
                        if (link.getRel().equals("alternate") || link.getRel() == null) {
                            res.addHeader("Location", link.getHref());
                            break;
                        }
                    }
                    // write entry back out to response
                    res.setStatus(HttpServletResponse.SC_CREATED);
                    res.setContentType("application/atom+xml; charset=utf8");
                    Writer writer = res.getWriter();
                    serializeEntry(savedEntry, writer);
                    writer.close(); 
                } else if (handler.isMediaCollectionURI(pathInfo)) {
                    // get incoming file name from HTTP header
                    String name = req.getHeader("Name");
                    
                    // hand input stream of to hander to post file
                    Entry resource = handler.postMedia(
                        pathInfo, name, req.getContentType(), req.getInputStream());
                    res.setStatus(HttpServletResponse.SC_CREATED);
                    com.sun.syndication.feed.atom.Content content = 
                        (com.sun.syndication.feed.atom.Content)resource.getContents().get(0);
                    res.setHeader("Location", content.getSrc());
                    Writer writer = res.getWriter();
                    serializeEntry(resource, writer);
                    writer.close(); 
                } else {
                    res.setStatus(HttpServletResponse.SC_NOT_FOUND);
                }
            } catch (Throwable e) {
                res.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                e.printStackTrace(res.getWriter());
                mLogger.error(e);
            }
        } else {
            res.setHeader("WWW-Authenticate", "BASIC realm=\"Roller\"");
            res.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
        }
    }


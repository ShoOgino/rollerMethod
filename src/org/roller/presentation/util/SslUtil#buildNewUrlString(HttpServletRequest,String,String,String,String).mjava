    /**
     * Builds the URL that we will redirect to
     *
     * @param request DOCUMENT ME!
     * @param desiredScheme DOCUMENT ME!
     * @param usingScheme DOCUMENT ME!
     * @param desiredPort DOCUMENT ME!
     * @param usingPort DOCUMENT ME!
     *
     * @return DOCUMENT ME!
     */
    private static String buildNewUrlString(HttpServletRequest request,
                                            String desiredScheme,
                                            String usingScheme,
                                            String desiredPort, String usingPort) {
        StringBuffer url = request.getRequestURL();

        url.replace(0, usingScheme.length(), desiredScheme);

        // Find the port used within the URL string
        int startIndex = url.toString().indexOf(usingPort);

        if (startIndex == -1) { // Port not found in URL

            if ((!(STD_HTTPS_PORT.equals(desiredPort) &&
                    HTTPS.equals(desiredScheme))) &&
                    (!(STD_HTTP_PORT.equals(desiredPort) &&
                    HTTP.equals(desiredScheme)))) {
                startIndex =
                    url.toString().indexOf("/",
                                           url.toString().indexOf("/",
                                                                  url.toString()
                                                                     .indexOf("/") +
                                                                  1) + 1);
                url.insert(startIndex, ":" + desiredPort);
            }
        } else { // Port found in URL

            if ((STD_HTTPS_PORT.equals(desiredPort) &&
                    HTTPS.equals(desiredScheme)) ||
                    (STD_HTTP_PORT.equals(desiredPort) &&
                    HTTP.equals(desiredScheme))) {
                url.delete(startIndex - 1, startIndex + usingPort.length());
            } else { // desired port is not a default port

                // Replace requested port with desired port number in URL string
                url.replace(startIndex, startIndex + usingPort.length(),
                            desiredPort);
            }
        }

        // add query string, if any
        String queryString = request.getQueryString();

        if ((queryString != null) && (queryString.length() != 0)) {
            url.append("?" + queryString);
        } else {
            queryString = RequestUtil.getRequestParameters(request);

            if ((queryString != null) && (queryString.length() != 0)) {
                url.append("?" + queryString);
            }
        }

        return url.toString();
    }


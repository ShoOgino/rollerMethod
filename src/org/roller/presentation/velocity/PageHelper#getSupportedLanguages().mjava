    /**
     * This method returns an array of Locales for each supported
     * language available, with the exeception of the language of the 
     * current locale, if that language is supported.
     * 
     * So, if English and Dutch are supported, and the current Locale is Dutch,
     * only English is returned. If the current Locale is Spanish, both English and Dutch are
     * returned.
     *    
     * @return
     */
	public Locale[] getSupportedLanguages()
	{
		Locale currentLocale =
			(Locale) mPageContext.getSession().getAttribute(Globals.LOCALE_KEY);
		if (currentLocale==null) 
		{
			currentLocale = mPageContext.getRequest().getLocale();
		}
			
		Vector supportedLanguages =
			LanguageUtil.getSupportedLanguages(mPageContext.getServletContext());
		if (supportedLanguages==null) {
			return null;
		}
		
		// filter out the current selected language
		// and convert to locale
		Vector result = new Vector();
		for(int i=0; i<supportedLanguages.size(); i++) {
			String l = (String) supportedLanguages.get(i);
			if (currentLocale==null || !currentLocale.getLanguage().equals(l)) {
				result.add(new Locale(l));
			}
		}
		return (Locale[]) result.toArray(new Locale[result.size()]);
	}


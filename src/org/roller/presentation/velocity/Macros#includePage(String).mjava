    //------------------------------------------------------------------------
    /**
     * Expand macros in specified page and include the results in this page.
     * @param Name of page to include.
     * @return HTML for included page.
     */
    public String includePage( String pageName )
    {
        String ret = null;
        try
        {
            // protection from recursion
            if ( mIncludePageTLS.get() == null )
            {
                mIncludePageTLS.set( new Integer(0) );
            }
            else
            {
                Integer countObj = (Integer)mIncludePageTLS.get();
                int count = countObj.intValue();
                if ( count++ > MAX_RECURSION_DEPTH )
                {
                    return "ERROR: recursion level too deep";
                }
                mIncludePageTLS.set( new Integer(count) );
            }            
                       
            // Get included page template 
            RollerRequest rreq = RollerRequest.getRollerRequest(
                (HttpServletRequest)mPageContext.getRequest()); 
            WebsiteData website = rreq.getWebsite();
            //UserManager userMgr = rreq.getRoller().getUserManager();
            
            org.roller.pojos.Template pd = website.getPageByName(pageName);
            
            Template vtemplate = null;
            if (pd != null)
            {
                vtemplate = RuntimeSingleton.getTemplate( pd.getId() ); 
            }
            else
            {
                // maybe its in preview mode and doesn't exist yet?
                vtemplate = RuntimeSingleton.getTemplate( pageName );                        
            }
            
            if (vtemplate == null)
            {
                ret = pageName + " : No Page or Template found.";
            }
            else
            {
                // Run it through Velocity
                StringWriter sw = new StringWriter();
                PrintWriter pw = new PrintWriter(sw);
                VelocityContext vcontext = new VelocityContext();
                ContextLoader.setupContext(vcontext,rreq,
                    (HttpServletResponse)mPageContext.getResponse());
                
                vtemplate.merge( vcontext, pw );           
                ret = sw.toString();
            }
        } 
        catch (Exception e)
        {
            ret = "ERROR: including page " + pageName;
        } 
        finally
        {
            mIncludePageTLS.set( null );
        }
        return ret;
    }


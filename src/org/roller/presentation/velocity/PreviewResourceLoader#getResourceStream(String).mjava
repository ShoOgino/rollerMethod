    /**
     * Get an InputStream so that the Runtime can build a
     * template with it.
     *
     *  @param name name of template
     *  @return InputStream containing template
    */
    public InputStream getResourceStream( String name )
    throws ResourceNotFoundException
    {
        if (name == null || name.length() == 0)
        {
            throw new ResourceNotFoundException(
                "Need to specify a template name!");
        }

        if (mLogger.isDebugEnabled())
        {
            mLogger.debug("PreviewResourceLoader.getResourceStream(" + name + ")");
        }
        
        try
        {
            String template = PreviewResourceLoader.getTemplate(name);
            if (template != null && mLogger.isDebugEnabled())
            {
                mLogger.debug("PreviewResourceLoader found resource " + name);
            }
            return new ByteArrayInputStream( template.getBytes("UTF-8") );
        }
        catch (NullPointerException npe)
        {
            // to be expected if resource is not in cache
            throw new ResourceNotFoundException("Resource not found in PreviewResourceLoader");
        }
        catch (Exception e)
        {
            String msg = "PreviewResourceLoader Error: " +
                "problem trying to load resource " + name + ": " + e.getMessage();
            if (mLogger.isDebugEnabled()) 
            {
                mLogger.debug( msg);
            }
            Runtime.error(msg );
            throw new ResourceNotFoundException (msg);
        }
    }


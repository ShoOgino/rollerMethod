    /**
     * Initialize PageModel and allow PageModel to initialized VelocityContext.
     * @param rreq
     * @param ctx
     */
    public void init(RollerRequest rreq)
    {
        mRollerReq = rreq;
        UserData user = null;
        if ( rreq.getRequest().getAttribute(RollerRequest.OWNING_USER) != null)
        {
            user = (UserData)
                rreq.getRequest().getAttribute(RollerRequest.OWNING_USER);
        }
        else if ( rreq.getUser() != null )
        {
            user = rreq.getUser();
        }
        if ( user != null )
        {
            mUsername = user.getUserName();
        }
        
        try
        {
            mBookmarkMgr = rreq.getRoller().getBookmarkManager();
            mRefererMgr  = rreq.getRoller().getRefererManager();
            mUserMgr     = rreq.getRoller().getUserManager();
            mWeblogMgr   = rreq.getRoller().getWeblogManager();
            
            /** 
             * Preload what we can for encapsulation.  What we cannot preload we
             * will use the Managers later to fetch.
             */
            if ( mUsername != null )
            {
                // Get the pages, put into context & load map
                WebsiteData website = mUserMgr.getWebsite(user.getUserName());
                List pages = mUserMgr.getPages(website);
                Iterator pageIter = pages.iterator();
                while (pageIter.hasNext())
                {
                    PageData page = (PageData) pageIter.next();
                    mPageMap.put(page.getName(), page);
                }
            }
            
        }
        catch (RollerException e)
        {
            mLogger.error("PageModel Roller get*Manager Exception", e);
        }
    }


    //-----------------------------------------------------------------------
    /**
     * Override VelocityServlet so we can pick the right page and stick
     * the right stuff into the VelocityContext before page execution.
     */
    public Template handleRequest( HttpServletRequest request,
                                   HttpServletResponse response,
                                   Context ctx ) throws Exception
    {
        Template template = null;
        if (request.getParameter("popup") == null)
        {
            // Request does not specify popup, so normal return
            template = super.handleRequest(request, response, ctx); 
        }
        else
        {
            PageContext pageContext =
                JspFactory.getDefaultFactory().getPageContext(
                    this, request, response,"", true, 8192, true);
            RollerRequest rreq= RollerRequest.getRollerRequest(pageContext);
            UserManager userMgr = RollerFactory.getRoller().getUserManager();
            WebsiteData website = rreq.getWebsite();
                
            // Request specifies popup
            org.roller.pojos.Template page = null;
            Exception pageException = null;
            try 
            {
                // Does user have a popupcomments page?
                page = website.getPageByName("_popupcomments");
            }
            catch(Exception e )
            {
               pageException = e;
               response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            }
            if (pageException != null)
            {
                mLogger.error("EXCEPTION: in RollerServlet", pageException);
                request.setAttribute("DisplayException", pageException);
            }
            // User doesn't have one so return the default
            if (page == null) 
            {
                page = new WeblogTemplate("/popupcomments.vm", website, "Comments", 
                    "Comments", "dummy_link", "dummy_template", new Date());
            }
            rreq.setPage(page);
            template = prepareForPageExecution(ctx, rreq, response, page);
        }
        return template;
    }


    /**
     * Pass the String through any PagePlugins that have been
     * assigned to the PageHelper, as selected by the Entry.
     * 
     * @param entry Entry being rendered.
     * @param str   String to which plugins are to be applied.
     * @return      Result of applying plugins to str.
     */
    public String renderPlugins(WeblogEntryDataWrapper entry, String str)
    {
        String ret = str;
        mLogger.debug("Applying page plugins to string");
                
        if (mPagePlugins != null)
        {
            List entryPlugins = entry.getPluginsList();
            // if no Entry plugins, don't bother looping.
            if (entryPlugins != null && !entryPlugins.isEmpty())
            {    
                // need to do this to tell ReadMore not to do its job
                // if we are in the "view one Entry" page.
                boolean singleEntry = false;
                if (mRollerReq == null || mRollerReq.getWeblogEntry() != null)
                {
                    singleEntry = true;
                }
                
                // now loop over mPagePlugins, matching
                // against Entry plugins (by name):
                // where a match is found render Plugin.
                Iterator iter = mPagePlugins.keySet().iterator();
                while (iter.hasNext())
                {
                    String key = (String)iter.next();
                    if (entryPlugins.contains(key))
                    {
                        PagePlugin pagePlugin = (PagePlugin)mPagePlugins.get(key);
                        if (!(singleEntry && pagePlugin.getSkipOnSingleEntry())) { 
                            ret = pagePlugin.render(entry.getPojo(), ret);
                        }
                    }
                }
            }
        }
        
        return ret;
    }


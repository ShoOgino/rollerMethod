	/**
	 * @see org.roller.presentation.velocity.BasePageServlet#handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.velocity.context.Context)
	 */
	public Template handleRequest(
		HttpServletRequest request,
		HttpServletResponse response,
		Context ctx) throws Exception
	{
		ServletContext servletContext =
			request.getSession().getServletContext();
		Vector supportedLanguages =
			LanguageUtil.getSupportedLanguages(servletContext);
		
		if (supportedLanguages==null) 
		{
			// add error message
			ctx.put("languageError", "Unable to switch language: no supported languages defined.");
			// proceed with request serving
			return super.handleRequest(request, response, ctx);
		}

		String newLang = request.getParameter("language");
		if (newLang==null || newLang.length()==0) {
			// add error message
			ctx.put("languageError", "Unable to switch language: no new language specified.");
			// proceed with request serving
			return super.handleRequest(request, response, ctx);
		}

		// verify if new language is supported
		if (!LanguageUtil.isSupported(newLang, servletContext)) {
			// add error message
			ctx.put("languageError", "Unable to switch language: new language '"+newLang+"' is not supported.");
			// proceed with request serving
			return super.handleRequest(request, response, ctx);
		}
		 
		// by now, all should be fine: change Locale,
		// but preserve existing country
		Locale existingLocale = LanguageUtil.getViewLocale(request);
		Locale newLocale = new Locale(newLang, existingLocale.getCountry());

		HttpSession session = request.getSession();
		session.setAttribute(Globals.LOCALE_KEY, newLocale);
		mLogger.debug("Changed language to: "+newLang);

		// proceed with request serving
		return super.handleRequest(request, response, ctx);

	}


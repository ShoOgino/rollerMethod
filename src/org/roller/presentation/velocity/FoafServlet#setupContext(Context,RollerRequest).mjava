    /**
     * @param ctx
     */
    private void setupContext(Context ctx, RollerRequest rreq) throws RollerException {
        
        HttpServletRequest request = rreq.getRequest();
        RollerContext rollerCtx = RollerContext.getRollerContext( request );
        RollerSession rses = RollerSession.getRollerSession(request);
        Roller roller = RollerFactory.getRoller();
        // ROLLER_2.0 : figure out how to fix FOAF servlet (does anybody use it?)
        // UserData user =
        //   roller.getUserManager().getUser(userName, Boolean.TRUE);
        // ctx.put("fullName", user.getFullName()); // name for FlavorServlet compatibility
        
        // foaf:homepage to equal base URL for user
        //String homepage = Utilities.escapeHTML(
        //rollerCtx.getAbsoluteContextUrl(request) +
        //"/page/" + user.getUserName() );
        //ctx.put("websiteURL", homepage); // name for FlavorServlet compatibility
        
        // see if foaf:weblog is different Page
        WebsiteData website = rreq.getWebsite();
        UserManager usrMgr = RollerFactory.getRoller().getUserManager();
        org.roller.pojos.Template weblog = website.getPageByName("Weblog");
        
        // if weblog != homepage, add to context
        if (weblog != null && !website.getDefaultPageId().equals(weblog.getId())) {
            //String weblogUrl = Utilities.escapeHTML(
            //rollerCtx.getAbsoluteContextUrl(request) +
            //"/page/" + user.getUserName() +
            //"/" + weblog.getLink() );
            //ctx.put("weblog", weblogUrl);
        }
        
        // use SHA1 encrypted email address, including mailto: prefix
        //String shaEmail = Utilities.encodePassword(
        //"mailto:" + user.getEmailAddress(), "SHA");
        //ctx.put("shaEmail", shaEmail);
    }


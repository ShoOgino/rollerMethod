    /**
     * Process a request for a Weblog page.
     */
    public Template handleRequest(HttpServletRequest request,
                                HttpServletResponse response, 
                                Context ctx) 
            throws IOException {
        
        Template outty = null;
        RollerRequest rreq = null;
        
        // first off lets parse the incoming request and validate it
        try {
            PageContext pageContext =
                    JspFactory.getDefaultFactory().getPageContext(
                    this, request, response,"", true, 8192, true);
            rreq = RollerRequest.getRollerRequest(pageContext);
        } catch (RollerException e) {
            
            // An error initializing the request is considered to be a 404
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            request.setAttribute("DisplayException", e);
            
            return null;
        }
        
        
        // request appears to be valid, lets render
        try {
            UserManager userMgr = RollerFactory.getRoller().getUserManager();
            
            WebsiteData website = null;
            if (request.getAttribute(RollerRequest.OWNING_WEBSITE) != null) {
                website = (WebsiteData)
                    request.getAttribute(RollerRequest.OWNING_WEBSITE);
            } else {
                website = rreq.getWebsite();
            }
            
            org.roller.pojos.Template page = null;
            
            // If this is a popup request, then deal with it specially
            if (request.getParameter("popup") != null) {
                try {
                    // Does user have a popupcomments page?
                    page = website.getPageByName("_popupcomments");
                } catch(Exception e ) {
                    // ignored ... considered page not found
                }
                
                // User doesn't have one so return the default
                if (page == null) {
                    page = new WeblogTemplate("/popupcomments.vm", website, 
                            "Comments", "Comments", "dummy_link", 
                            "dummy_template", new Date());
                }
                rreq.setPage(page);
                
            // If request specified the page, then go with that
            } else if (rreq.getPage() != null &&
                    rreq.getRequest().getAttribute(RollerRequest.OWNING_WEBSITE) == null) {
                page = rreq.getPage();
                
            // If page not available from request, then use website's default
            } else if (website != null) {
                page = website.getDefaultPage();
                rreq.setPage(page);
            }
            
            // Still no page ID, then we have a problem
            if ( page == null ) {
                throw new ResourceNotFoundException("Page not found");
            }

            // this sets up the page we want to render
            outty = prepareForPageExecution(ctx, rreq, response, page);
            
            // if there is a decorator template then apply it
            if (website != null) {
                // parse/merge Page template
                StringWriter sw = new StringWriter();
                outty.merge(ctx, sw);
                ctx.put("decorator_body", sw.toString());
                
                // replace outty with decorator Template
                outty = findDecorator(website, (String) ctx.get("decorator"));
            }
            
        } catch(ResourceNotFoundException rnfe ) {
            
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            request.setAttribute("DisplayException", rnfe);
            mLogger.warn("ResourceNotFound: "+ request.getRequestURL());
            mLogger.debug(rnfe);
        } catch(Exception e) {
            
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            request.setAttribute("DisplayException", e);
            mLogger.error("Unexpected exception", e);
        }
        
        return outty;
    }


    /**
     * Iterate over Hits and build sets of WeblogEntryData
     * objects, placed into Date buckets (in reverse order).
     * @param rreq
     * @param website
     * @param hits
     * @throws RollerException
     * @throws IOException
     */
    private TreeMap convertHitsToEntries(
            RollerRequest rreq, WebsiteData website, Hits hits)
            throws RollerException, IOException {
        // determine offset (starting point)
        int ioffset = useOffset(rreq.getRequest());
        if (ioffset >= hits.length()) ioffset = OFFSET;
        rreq.getRequest().setAttribute("offset", new Integer(ioffset));
        
        // determine limit (number of results to display)
        int ilimit = useLimit(rreq.getRequest());
        rreq.getRequest().setAttribute("limit", new Integer(ilimit));
        if (ioffset + ilimit > hits.length()) ilimit = hits.length()-ioffset;
        
        boolean websiteSpecificSearch = checkForWebsite(rreq.getRequest());
        TreeMap searchResults = new TreeMap(new ReverseComparator());
        TreeSet categories = new TreeSet();
        Roller roller = RollerFactory.getRoller();
        UserManager userMgr = roller.getUserManager();
        WeblogManager weblogMgr =roller.getWeblogManager();
        WeblogEntryData entry;
        Document doc = null;
        String handle = null;
        for (int i = ioffset; i < ioffset+ilimit; i++) {
            entry = null; // reset for each iteration
            
            doc = hits.doc(i);
            handle = doc.getField(FieldConstants.WEBSITE_HANDLE).stringValue();
            
            if (websiteSpecificSearch && website != null) {
                // "wrong user" results have been reported
                if (handle.equals(rreq.getWebsite().getHandle())) {
                    // get real entry for display on user's site
                    entry = weblogMgr.retrieveWeblogEntry(
                            doc.getField(FieldConstants.ID).stringValue() );
                }
            } else {
                // if user is not enabled, website will be null
                //entry = buildSearchEntry(website, doc);
                entry = weblogMgr.retrieveWeblogEntry(
                        doc.getField(FieldConstants.ID).stringValue() );
                if (doc.getField(FieldConstants.CATEGORY) != null) {
                    categories.add(
                            doc.getField(FieldConstants.CATEGORY).stringValue());
                }
            }
            
            // maybe null if search result returned inactive user
            // or entry's user is not the requested user.
            if (entry != null && useWrappers) {
                addEntryWrapperToSearchResults(searchResults, WeblogEntryDataWrapper.wrap(entry));
            } 
            else if (entry != null && !useWrappers) {
                addEntryToSearchResults(searchResults, entry);
            } 
        }
        rreq.getRequest().setAttribute("categories", categories);
        return searchResults;
    }


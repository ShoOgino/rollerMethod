    //-----------------------------------------------------------------------
    /**
     * Reads the Theme files from harddisk (if necessary) and places them into a
     * ThemeCache.  If the requested Theme's pages are already in the cache,
     * return them instead.
     *
     * @param themeName
     * @return HashMap
     * @throws FileNotFoundException
     * @throws IOException
     */
    public HashMap readThemeMacros(String themeName)
        throws FileNotFoundException, IOException
    {
        if (mLogger.isDebugEnabled())
        {
            mLogger.debug("themeName=" + themeName);
        }

        // Load all Velocity templates from root directory of the theme
        String pageName = null;
        String themeDir = this.getThemePath(themeName);
        String[] children = getThemeFilenames(themeDir);
        HashMap pages = new HashMap();
        ThemeCache themeCache = ThemeCache.getInstance();
        for (int i = 0; i < children.length; i++)
        {
            pageName = children[i].substring(0, children[i].length() - 3);

            if (themeCache.getFromCache(themeName, pageName) != null)
            {
                pages.put(
                    pageName,
                    themeCache.getFromCache(themeName, pageName));
            }
            else
            {
                BufferedReader rdr = null;
                try
                {
                    rdr = new BufferedReader(
                        new FileReader(
                            themeDir + File.separator + children[i]));
                    String line = null;
                    StringBuffer sb = new StringBuffer();
                    while (null != (line = rdr.readLine()))
                    {
                        sb.append(line);
                        sb.append("\n");
                    }
    
                    pages.put(pageName, sb.toString());
                    themeCache.putIntoCache(themeName, pageName, sb.toString());
                }
                finally 
                {
                    if (rdr != null) rdr.close();
                }
            }
        }
        return pages;
    }


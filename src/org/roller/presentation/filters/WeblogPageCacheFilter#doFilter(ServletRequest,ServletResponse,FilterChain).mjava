    /**
     * Process filter.
     */
    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)
            throws IOException, ServletException {
        
        mLogger.debug("entering");
        
        HttpServletRequest request = (HttpServletRequest) req;
        HttpServletResponse response = (HttpServletResponse) res;
        
        WeblogPageRequest pageRequest = null;
        try {
            pageRequest = new WeblogPageRequest(request);
        } catch(Exception e) {
            // some kind of error parsing the request
            mLogger.error("error creating page request", e);
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        
        String key = "pageCache:"+this.generateKey(pageRequest);
        
        ResponseContent respContent = null;
        if(!this.excludeOwnerPages || !pageRequest.isLoggedIn()) {
            respContent = (ResponseContent) this.mPageCache.get(key);
        }
        
        if (respContent == null) {
            
            mLogger.debug("MISS "+key);
            this.misses++;
            
            try {
                CacheHttpServletResponseWrapper cacheResponse =
                        new CacheHttpServletResponseWrapper(response);
                
                chain.doFilter(request, cacheResponse);
                
                cacheResponse.flushBuffer();
                
                // Store as the cache content the result of the response
                // if no exception was noted by content generator.
                if (request.getAttribute("DisplayException") == null) {
                    ResponseContent rc = cacheResponse.getContent();
                    
                    // only cache if this is not a logged in user?
                    if(!this.excludeOwnerPages || !pageRequest.isLoggedIn()) {
                        this.mPageCache.put(key, rc);
                    } else {
                        mLogger.debug("SKIPPED "+key);
                        this.skips++;
                    }
                } else {
                    mLogger.error("Display exception "+key);
                }
                
            } catch (java.net.SocketException se) {
                // ignored
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            } catch (Exception e) {
                // something unexpected and bad happened
                mLogger.error("Error rendering page "+key, e);
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            }
            
        } else {
            
            mLogger.debug("HIT "+key);
            this.hits++;
            
            try {
                respContent.writeTo(response);
            } catch (java.net.SocketException se) {
                // ignored
            } catch (Exception e) {
                mLogger.error("Error with cached response "+key, e);
            }
            
        }
        
        mLogger.debug("exiting");
    }


    public void doFilter(ServletRequest req, ServletResponse resp,
                         FilterChain chain)
                  throws IOException, ServletException 
    {

        HttpServletRequest request = (HttpServletRequest) req;
        HttpServletResponse response = (HttpServletResponse) resp;

        // See if the user has a remember me cookie
        Cookie c = RequestUtil.getCookie(request, RollerRequest.LOGIN_COOKIE);

        try 
        {
            UserManager mgr = RollerFactory.getRoller().getUserManager();
                
            // Check to see if the user is logging out, if so, remove all
            // login cookies
            if (request.getRequestURL().indexOf("logout") != -1) 
            {
                if (mLogger.isDebugEnabled()) 
                {
                    mLogger.debug("logging out '" + request.getRemoteUser() + "'");
                }
    
                mgr.removeLoginCookies(request.getRemoteUser());
                RollerFactory.getRoller().commit();
                RequestUtil.deleteCookie(response, c, request.getContextPath());
            } 
            else if (c != null && enabled) 
            {
                String loginCookie = mgr.checkLoginCookie(c.getValue());
                RollerFactory.getRoller().commit();

                if (loginCookie != null) 
                {
                    RequestUtil.setCookie(response, RollerRequest.LOGIN_COOKIE,
                                          loginCookie,
                                          request.getContextPath());
                    loginCookie = Utilities.decodeString(loginCookie);

                    String[] value = StringUtils.split(loginCookie, '|');

                    UserData user = mgr.getUser( value[0] );

                    // authenticate user without displaying login page
                    String route = "/auth?j_username=" +
                                   user.getUserName() + "&j_password=" +
                                   user.getPassword();

                    request.setAttribute("encrypt", "false");
                    request.getSession().setAttribute("cookieLogin", "true");

                    if (mLogger.isDebugEnabled()) 
                    {
                        mLogger.debug("I remember you '" + user.getUserName() +
                                  "', attempting to authenticate...");
                    }

                    RequestDispatcher dispatcher =
                        request.getRequestDispatcher(route);
                    dispatcher.forward(request, response);

                    return;
                }
            }
                
        } catch (Exception e) 
        {
            // no big deal if cookie-based authentication fails
            mLogger.warn(e.getMessage());
        }

        chain.doFilter(req, resp);
    }


    /**
     * Process filter.
     *
     * We'll take the incoming request and first determine if this is a
     * secure request.  If the request is secure then we'll see if it matches
     * one of the allowed secure urls, if not then we will redirect back out
     * of https.
     */
    public void doFilter(ServletRequest request, ServletResponse response,
                        FilterChain chain)
            throws IOException, ServletException {
        
        if(this.schemeEnforcementEnabled && this.secureLoginEnabled) {
            
            HttpServletRequest req = (HttpServletRequest) request;
            HttpServletResponse res = (HttpServletResponse) response;
            
            mLogger.debug("checking path = "+req.getServletPath());
            
            // first determine if request is secure
            boolean requestIsSecure = request.isSecure();
            if(!requestIsSecure && this.httpsHeaderName != null) {
                // try checking custom header
                String value = req.getHeader(this.httpsHeaderName);
                if(value != null && value.equals(this.httpsHeaderValue))
                    requestIsSecure = true;
            }
            
            // if request is secure then see if it's an allowable https url
            if(requestIsSecure && !allowedUrls.contains(req.getServletPath())) {
                String redirect = "http://"+req.getServerName();
                
                if(this.httpPort != 80)
                    redirect += ":"+this.httpPort;
                
                redirect += req.getRequestURI();
                
                if(req.getQueryString() != null)
                    redirect += "?"+req.getQueryString();
                
                mLogger.debug("Redirecting to "+redirect);
                res.sendRedirect(redirect);
                return;
            }
        }
        
        chain.doFilter(request, response);
    }


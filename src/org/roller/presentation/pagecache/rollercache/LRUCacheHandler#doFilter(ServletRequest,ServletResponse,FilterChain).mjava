    /**
     * @see org.roller.presentation.pagecache.FilterHandler#doFilter(
     *      javax.servlet.ServletRequest, javax.servlet.ServletResponse,
     *      javax.servlet.FilterChain)
     */
    public void doFilter(ServletRequest req, ServletResponse res,
                    FilterChain chain) throws ServletException, IOException
    {
        HttpServletRequest request = (HttpServletRequest) req;
        HttpServletResponse response = (HttpServletResponse) res;

        // get locale
        Locale locale = LanguageUtil.getViewLocale(request);
        
        // generate language-sensitive cache-key
        String generatedKey = null;
        if (locale != null)
        {
            generatedKey = generateEntryKey(null, 
                      request, 1, locale.getLanguage());
        }
        else
        {
            generatedKey = generateEntryKey(null, 
                      request, 1, null);
        }
        
        // Add authenticated user name, if there is one, to cache key
        java.security.Principal prince = request.getUserPrincipal();        
        StringBuffer keyb = new StringBuffer();
        keyb.append(generatedKey);
        if (prince != null)
        {
            keyb.append("_");
            keyb.append(prince);
        }
        String key = keyb.toString();
                
        ResponseContent respContent = (ResponseContent)getFromCache(key);
        if (respContent == null) 
        {
            try
            {
                CacheHttpServletResponseWrapper cacheResponse = 
                    new CacheHttpServletResponseWrapper(response);
                chain.doFilter(request, cacheResponse);
                
                // Store as the cache content the result of the response
                // if no exception was noted by content generator.
                if (request.getAttribute("DisplayException") == null)
                {
                    ResponseContent rc = cacheResponse.getContent();
                    putToCache(key, rc);
                }
                else
                {
                    StringBuffer sb = new StringBuffer();
                    sb.append("Display exception, cache, key=");
                    sb.append(key);
                    mLogger.error(sb.toString());
                }
            }
            catch (java.net.SocketException se)
            {
                // ignore socket exceptions
            }
            catch (Exception e)
            {
                // something unexpected and bad happened
                StringBuffer sb = new StringBuffer();
                sb.append("Error rendering page, key=");
                sb.append(key);
                mLogger.error(sb.toString());
            }           
        }
        else
        {
            try
            {
                respContent.writeTo(response);
            }
            catch (java.net.SocketException se)
            {
                // ignore socket exceptions
            }
            catch (Exception e)
            {
                if (mLogger.isDebugEnabled())
                {
                    StringBuffer sb = new StringBuffer();
                    sb.append("Probably a client abort exception, key=");
                    sb.append(key);
                    mLogger.error(sb.toString());
                }
            }
            
        }
    }


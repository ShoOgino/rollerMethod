    /**
     * Creates a new lucene index manager. This should only be created once.
     * Creating the index manager more than once will definately result in
     * errors. The prefered way of getting an index is through the
     * RollerContext.
     * 
     * @param indexDir -
     *            the path to the index directory
     */
    public IndexManagerImpl()
    {
        // check config to see if the internal search is enabled
        String enabled = RollerConfig.getProperty("search.enabled");
        if("false".equalsIgnoreCase(enabled))
            this.searchEnabled = false;
        
        // we also need to know what our index directory is
        String indexDir = RollerConfig.getProperty("search.index.dir");
        if (indexDir.indexOf("${user.home}") != -1) 
        {
            indexDir = StringUtils.replace(
                    indexDir, "${user.home}",
                    System.getProperty("user.home"));
        }

        this.indexDir = indexDir.replace('/', File.separatorChar);
        
        // a little debugging
        mLogger.info("search enabled: " + this.searchEnabled);
        mLogger.info("index dir: " + this.indexDir);

        String test = indexDir + File.separator + ".index-inconsistent";
        indexConsistencyMarker = new File(test);

        // only setup the index if search is enabled
        if (this.searchEnabled) 
        {
            
            // 1. If inconsistency marker exists.
            //     Delete index
            // 2. if we're using RAM index
            //     load ram index wrapper around index
            //
            if (indexConsistencyMarker.exists()) 
            {
                getFSDirectory(true);
                inconsistentAtStartup = true;
            } 
            else 
            {
                try 
                {
                    File makeIndexDir = new File(indexDir);
                    if (!makeIndexDir.exists()) 
                    {
                        makeIndexDir.mkdirs();
                        inconsistentAtStartup = true;
                    }
                    indexConsistencyMarker.createNewFile();
                } 
                catch (IOException e) 
                {
                    mLogger.error(e);
                }
            }
            
            if (indexExists()) 
            {
                if (useRAMIndex) 
                {
                    Directory filesystem = getFSDirectory(false);
                    
                    try 
                    {
                        fRAMindex = new RAMDirectory(filesystem);
                    } 
                    catch (IOException e)                     
                    {
                        mLogger.error("Error creating in-memory index", e);
                    }
                }
            } 
            else 
            {
                if (useRAMIndex) 
                {
                    fRAMindex = new RAMDirectory();
                    createIndex(fRAMindex);
                } 
                else 
                {
                    createIndex(getFSDirectory(true));
                }
            }
            
            if (isInconsistentAtStartup())
            {
                mLogger.info(
                    "Index was inconsistent. Rebuilding index in the background...");
                try 
                {                    
                    rebuildWebsiteIndex();
                }
                catch (RollerException e) 
                {
                    mLogger.error("ERROR: scheduling re-index operation");
                }
            }       
        }
    }


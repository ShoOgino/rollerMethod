    /**
     * Process incoming request for referer information.
     *
     * <p>If there is no referer, treat it as a direct request.</p>
     *
     * <p>If there is a referer and there is no record for that referer, then
     * parse the refering page for title and excerpt surround the refering link.
     * If the excerpt cannot be found, then ignore the referer because it is
     * fake - probably a referer spam.
     * </p>
     *
     * @see org.roller.pojos.RefererManager#processReferer(
     * java.lang.String, java.lang.String)
     */
    public void processRequest( ParsedRequest request )
    {
        String msg = "processRequest";
        if ( request.getWebsite()==null ) return;

        try
        {
            List matchRef = null;

            String requestUrl     = request.getRequestURL();
            String refererUrl     = request.getRefererURL();
            WebsiteData website   = request.getWebsite();
            WeblogEntryData entry = request.getWeblogEntry();
            String selfSiteFragment = "/page/" + website.getUser().getUserName();

            String dateString = null;
            if ( request.getDateString()!=null && request.isDateSpecified())
            {
                dateString = request.getDateString();
            }

            if (mLogger.isDebugEnabled())
            {
                mLogger.debug( msg+": refurl="+refererUrl );
            }

            if ( refererUrl != null )
            {
                // If referer URL contains ignoreWords then don't log it.
                String[] ignoreWords = new String[0];
                if ( website.getIgnoreWords() != null )
                {
                    ignoreWords = Utilities.stringToStringArray(
                        website.getIgnoreWords(),",");
                }
                for (int i = 0; i < ignoreWords.length; i++)
                {
                    if (refererUrl.indexOf(ignoreWords[i].trim()) != -1)
                    {
                        if (mLogger.isDebugEnabled())
                        {
                            mLogger.debug("Ignoring due to :"+ignoreWords[i]);
                        }
                        refererUrl = null;
                        return;
                    }
                }
                
                // treat own URL as direct
                if (refererUrl != null && refererUrl.indexOf(selfSiteFragment) != -1)
                {
                    refererUrl = null;
                }
            }

            if (refererUrl == null || refererUrl.trim().length() < 8)
            {
                refererUrl = "direct";

                // Get referer specified by referer URL of direct
                matchRef = getReferersToWebsite(website, refererUrl);
            }
            else
            {
                refererUrl = Utilities.stripJsessionId(refererUrl);

                // Query for referer with same referer and request URLs
                matchRef = getMatchingReferers(website, requestUrl, refererUrl);

                // If referer was not found, try adding or leaving off 'www'
                if ( matchRef.size() == 0 )
                {
                    String secondTryUrl = null;
                    if ( refererUrl.startsWith("http://www") )
                    {
                        secondTryUrl = "http://"+refererUrl.substring(11);
                    }
                    else
                    {
                        secondTryUrl = "http://www"+refererUrl.substring(7);
                    }

                    matchRef = getMatchingReferers(
                        website, requestUrl, secondTryUrl);
                    if ( matchRef.size() == 1 )
                    {
                        refererUrl = secondTryUrl;
                    }
                }
            }

            if (matchRef.size() == 1)
            {
                // Referer was found in database, so bump up hit count
                RefererData ref = (RefererData)matchRef.get(0);

                ref.setDayHits(
                    new Integer(ref.getDayHits().intValue() + 1));
                ref.setTotalHits(
                    new Integer(ref.getTotalHits().intValue() + 1));

                if (mLogger.isDebugEnabled())
                {
                    mLogger.debug(
                        "Incrementing hit count on existing referer: "+refererUrl);
                }

                storeReferer(ref);
                mStrategy.commit();
            }
            else if (matchRef.size() == 0)
            {
                // Referer was not found in database, so new Referer object
                Integer one = new Integer(1);
                RefererData ref =
                    new RefererData(
                        null,
                        website,
                        entry,
                        dateString,
                        refererUrl,
                        null,
                        requestUrl,
                        null,
                        null,
                        Boolean.FALSE,
                        Boolean.FALSE,
                        one,
                        one);

                 if (mLogger.isDebugEnabled())
                 {
                    mLogger.debug("newReferer="+ref.getRefererUrl());
                 }

                 String refurl = ref.getRefererUrl();

                 // If not a direct or search engine then search for linkback
                 if (    request.isEnableLinkback()
                      && request.isDateSpecified()
                      && !refurl.equals("direct")
                      && !refurl.startsWith("http://google")
                      && !refurl.startsWith("http://www.google")
                      && !refurl.startsWith("http://search.netscape")
                      && !refurl.startsWith("http://www.blinkpro")
                      && !refurl.startsWith("http://auto.search.msn")
                      && !refurl.startsWith("http://search.yahoo")
                      && !refurl.startsWith("http://uk.search.yahoo")
                      && !refurl.startsWith("http://www.javablogs.com")
                      && !refurl.startsWith("http://www.teoma")
                    )
                 {
                     // Launch thread to extract referer linkback

                    try
                    {
                        if (mThreadManager!=null)
                        {
                            mThreadManager.executeInBackground( new LinkbackExtractorRunnable(ref) );
                        }
                        else
                        {
                            mLogger.warn("No thread manager found.");
                        }
                    } catch (InterruptedException e) {
                        mLogger.warn("Interrupted during linkback extraction",e);
                    }
                 }
                 else
                 {
                     storeReferer(ref);
                     mStrategy.commit();
                 }
            }
        }
        catch (RollerException pe)
        {
            mLogger.error(msg, pe);
        }
        catch (NullPointerException npe)
        {
            mLogger.error(msg, npe);
        }

    }


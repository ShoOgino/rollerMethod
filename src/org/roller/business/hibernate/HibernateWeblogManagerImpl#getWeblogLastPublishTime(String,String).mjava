    /**
     * Gets the Date of the latest Entry publish time.
     *
     * @param userName User name of weblog or null for all users
     * @param catName Category name of posts or null for all categories
     * @return Date Of last publish time
     * @throws RollerException
     */
    public Date getWeblogLastPublishTime( String userName, String catName )
        throws RollerException
    {
        WeblogCategoryData cat = null;
        Roller mRoller = RollerFactory.getRoller();
        if (userName != null) 
        {
            WebsiteData website = mRoller.getUserManager().getWebsite(userName);
            if (catName != null && website != null)
            {    
               cat = getWeblogCategoryByPath(website, null, catName);
               if (cat == null) catName = null;
            }
            if (catName != null && catName.trim().equals("/"))
            {
                catName = null;
            }
        }
        
        Session session = ((HibernateStrategy)mStrategy).getSession();
        Criteria criteria = session.createCriteria(WeblogEntryData.class);
        criteria.add(Expression.eq("publishEntry", Boolean.TRUE));
        criteria.add(Expression.le("pubTime", new Date()));

        try
        {
            if ( userName != null )
            {
                WebsiteData website = mRoller.getUserManager().getWebsite(userName);
                criteria.add(Expression.eq("website", website));
            }

            if ( cat != null )
            {
                criteria.add(Expression.eq("category", cat));
            }
            
            criteria.addOrder(Order.desc("pubTime"));
            criteria.setMaxResults(1);        
            List list = criteria.list();
            if (list.size() > 0)
            {
                return ((WeblogEntryData)list.get(0)).getPubTime();
            }
            else
            {
                return null;
            }
        }
        catch (HibernateException e)
        {
            throw new RollerException(e);
        }
    }


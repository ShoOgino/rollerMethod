    public List getComments(
        WebsiteData     website, 
        WeblogEntryData entry, 
        String          searchString,
        Date            startDate, 
        Date            endDate, 
        Boolean         pending,
        Boolean         approved,
        Boolean         spam,
        int             offset,
        int             length
        ) throws RollerException {
    
        try {
            Session session = ((HibernateStrategy)mStrategy).getSession();
            Criteria criteria = session.createCriteria(CommentData.class);
            
            if (entry != null) {
                criteria.add(Expression.eq("weblogEntry", entry));
            }
            else if (website != null) {
                criteria.createAlias("weblogEntry","e");
                criteria.add(Expression.eq("e.website", website));
            }
            
            if (searchString != null) {
                criteria.add(Expression.disjunction()
                    .add(Expression.like("url", searchString, MatchMode.ANYWHERE))
                    .add(Expression.like("content", searchString, MatchMode.ANYWHERE)));            
            }
            
            if (startDate != null) {
                criteria.add(Expression.ge("postTime", startDate));
            }
            
            if (endDate != null) {
                criteria.add(Expression.le("postTime", endDate));
            }
            
            if (pending != null) {
                criteria.add(Expression.eq("pending", pending));
            }
            
            if (approved != null) {
                criteria.add(Expression.eq("approved", approved));
            }
            
            if (spam != null) {
                criteria.add(Expression.eq("spam", spam));
            }
            
            if (length != -1) {
                criteria.setMaxResults(offset + length);               
            }
            
            criteria.addOrder(Order.desc("postTime"));

            List comments = criteria.list();
            if (offset==0 || comments.size() < offset) {
                return comments;
            }
            List range = new ArrayList();
            for (int i=offset; i<comments.size(); i++) {
                range.add(comments.get(i));
            }
            return range;
            
        } catch (HibernateException e) {
            mLogger.error(e);
            throw new RollerException(e);
        }
    }


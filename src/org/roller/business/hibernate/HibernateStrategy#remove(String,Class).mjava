    //-------------------------------------------------------------------------
    /**
     * Remove object from persistence storage.
     * @param clazz Class of object to remove.
     * @param id Id of object to remove.
     * @throws RollerException Error deleting object.
     */
    public void remove( String id, Class clazz ) throws RollerException
    {
        if ( id == null )
        {
            throw new RollerException(Messages.getString(
                "HibernateStrategy.nullNotValidId"));
        }
        if ( clazz == null )
        {
            throw new RollerException(Messages.getString(
                "HibernateStrategy.nullNotValidClass"));
        }

        // Create persistent instance and delete it
        PersistentObject obj;
        try
        {
            obj = (PersistentObject)getSession().load(clazz,id);
            if (obj.canSave()) 
            {
                getSession().delete(obj);
            }
            else
            {
                throw new RollerPermissionsException("DENIED: cannot remove");
            }
        }
        catch (HibernateException e)
        {
            String msg = Messages.formatString(
                "HibernateStrategy.exceptionRemoving",id,clazz.getName());
            mLogger.error(msg, e);

            newSession();
            throw new RollerException(e);
        }
    }


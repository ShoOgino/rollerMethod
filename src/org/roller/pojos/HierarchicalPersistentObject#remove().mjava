    /** Remove self, all decendent children and associations. */
    public void remove() throws RollerException
    {
        PersistenceStrategy pstrategy =
            RollerFactory.getRoller().getPersistenceStrategy();

        // loop to remove all of my descendents and associations
        List toRemove = new LinkedList();
        List assocs = this.getAllDescendentAssocs();
        for (int i=assocs.size()-1; i>=0; i--)
        {
            Assoc assoc = (Assoc)assocs.get(i);
            HierarchicalPersistentObject hpo = assoc.getObject();
            
            // remove my descendent's parent and grandparent associations
            Iterator ancestors = hpo.getAncestorAssocs().iterator();
            while (ancestors.hasNext())
            {
                Assoc dassoc = (Assoc)ancestors.next();
                dassoc.remove();
            }
            
            // remove decendent association and descendents
            //assoc.remove();
            toRemove.add(hpo);
        }
        Iterator removeIterator = toRemove.iterator();
        while (removeIterator.hasNext())
        {
            PersistentObject po = (PersistentObject) removeIterator.next();
            removeDescendent(pstrategy, po);
        }

        // loop to remove my own parent and grandparent associations
        Iterator ancestors = getAncestorAssocs().iterator();
        while (ancestors.hasNext())
        {
            Assoc assoc = (Assoc)ancestors.next();
            assoc.remove();
        }
        
        // remove myself
        removeDescendent(pstrategy, this);        
    }


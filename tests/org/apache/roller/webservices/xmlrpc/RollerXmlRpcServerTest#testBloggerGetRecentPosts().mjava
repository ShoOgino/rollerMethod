    public void testBloggerGetRecentPosts() {
        ArrayList params = new ArrayList();
        params.add("roller"); // appkey
        params.add(testWeblog.getHandle()); // blogid
        params.add(testUser.getUserName()); // userid
        params.add(testUser.getPassword()); // password
        params.add(new Integer(5)); // numposts
        String message = buildXmlRpcString("blogger.getRecentPosts", params);
        
        mockRequest.setBodyContent(message);
        servletTestModule.doPost();
        MockHttpServletResponse response = mockFactory.getMockResponse();
        String responseBody = response.getOutputStreamContent();
        
        // assert no fault code
        assertTrue(responseBody,
            responseBody.indexOf("<name>faultCode</name>") == -1);
        
        // make sure all/any userids returned belong to our test user
        Pattern userPattern =
                Pattern.compile("<name>userid</name><value>(.*?)</value>");
        ArrayList users = RegexUtil.getMatches(userPattern, responseBody, 1);
        Iterator it = users.iterator();
        while (it.hasNext()) {
            String user = (String)it.next();
            //System.out.println(user);
            if (user.equals(testUser.getUserName())) {
                continue;
            } else {
                fail("getRecentPosts() returned entry for a user ["
                        + user + "] other than " + testUser.getUserName());
            }
        }
    }


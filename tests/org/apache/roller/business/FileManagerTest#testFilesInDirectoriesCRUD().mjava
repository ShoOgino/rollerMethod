    /**
     * Test save/delete of files in a directory.
     */
    public void testFilesInDirectoriesCRUD() throws Exception {
        
        // update roller properties to prepare for test
        PropertiesManager pmgr = RollerFactory.getRoller().getPropertiesManager();
        Map config = pmgr.getProperties();
        ((RollerPropertyData)config.get("uploads.enabled")).setValue("true");
        ((RollerPropertyData)config.get("uploads.types.allowed")).setValue("opml");
        ((RollerPropertyData)config.get("uploads.dir.maxsize")).setValue("1.00");
        pmgr.saveProperties(config);
        TestUtils.endSession(true);
        
        FileManager fmgr = RollerFactory.getRoller().getFileManager();
        
        // we should be starting with 0 files and 0 directories
        assertEquals(0, fmgr.getFiles(testWeblog, null).length);
        assertEquals(0, fmgr.getDirectories(testWeblog).length);
        
        // create a directory
        fmgr.createDirectory(testWeblog, "bucket1");
        
        // make sure directory was created
        WeblogResource[] dirs = fmgr.getDirectories(testWeblog);
        assertNotNull(dirs);
        assertEquals(1, dirs.length);
        assertEquals("bucket1", dirs[0].getName());
        
        // store a file into a subdirectory
        InputStream is = getClass().getResourceAsStream("/bookmarks.opml");
        fmgr.saveFile(testWeblog, "bucket1/bookmarks.opml", "text/plain", 1545, is);
        
        // make sure file was stored successfully
        assertEquals("bucket1/bookmarks.opml", 
                fmgr.getFile(testWeblog, "bucket1/bookmarks.opml").getPath());
        assertEquals(1, fmgr.getFiles(testWeblog, "bucket1").length);
        
        // cleanup
        fmgr.deleteFile(testWeblog, "bucket1/bookmarks.opml");
        fmgr.deleteFile(testWeblog, "bucket1");
        
        // we should be back to 0 files and 0 directories
        assertEquals(0, fmgr.getFiles(testWeblog, null).length);
        assertEquals(0, fmgr.getDirectories(testWeblog).length);
    }


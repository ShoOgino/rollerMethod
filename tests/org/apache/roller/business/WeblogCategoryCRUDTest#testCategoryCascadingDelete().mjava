    /**
     * Make sure that deleting a category deletes all child categories.
     */
    public void testCategoryCascadingDelete() throws Exception {
        
        log.info("BEGIN");
        
        WeblogManager mgr = RollerFactory.getRoller().getWeblogManager();
        
        // root category is always available
        testWeblog = TestUtils.getManagedWebsite(testWeblog);
        WeblogCategoryData root = mgr.getRootWeblogCategory(testWeblog);
        
        // add a small category tree /subcat/subcat2
        WeblogCategoryData subcat = new WeblogCategoryData(testWeblog, root, "subcatTest1", null, null);
        root.addCategory(subcat);
        mgr.saveWeblogCategory(subcat);
        WeblogCategoryData subcat2 = new WeblogCategoryData(testWeblog, subcat, "subcatTest2", null, null);
        subcat.addCategory(subcat2);
        mgr.saveWeblogCategory(subcat2);
        TestUtils.endSession(true);
        
        // check that subcat tree can be navigated
        testWeblog = TestUtils.getManagedWebsite(testWeblog);
        root = mgr.getRootWeblogCategory(testWeblog);
        assertEquals(1, root.getWeblogCategories().size());
        subcat = (WeblogCategoryData) root.getWeblogCategories().iterator().next();
        assertEquals("subcatTest1", subcat.getName());
        assertEquals(1, subcat.getWeblogCategories().size());
        subcat2 = (WeblogCategoryData) subcat.getWeblogCategories().iterator().next();
        assertEquals("subcatTest2", subcat2.getName());
        
        // now delete category and subcats should be deleted by cascade
        mgr.removeWeblogCategory(subcat);
        TestUtils.endSession(true);
        
        // verify cascading delete succeeded
        testWeblog = TestUtils.getManagedWebsite(testWeblog);
        root = mgr.getRootWeblogCategory(testWeblog);
        assertEquals(0, root.getWeblogCategories().size());
        assertNull(mgr.getWeblogCategoryByPath(TestUtils.getManagedWebsite(testWeblog), "/subcatTest1/subcatTest2"));
        
        log.info("END");
    }


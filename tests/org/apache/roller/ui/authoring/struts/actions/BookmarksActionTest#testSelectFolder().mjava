    public void testSelectFolder() {
        MockServletContext ctx = getMockFactory().getMockServletContext();
        ctx.setServletContextName("/roller");
        MockHttpServletRequest request = getMockFactory().getMockRequest();
        request.setContextPath("/roller");
        
        UserManager umgr = null;
        UserData user = null;
        try {
            umgr = RollerFactory.getRoller().getUserManager();
            user = (UserData)umgr.getUsers(testWeblog, null, null, null, 0, Integer.MAX_VALUE).get(0);
            doFilters();
            authenticateUser(user.getUserName(), "editor");
        } catch (RollerException e) {
            e.printStackTrace();
            fail();
        }
        
        // Setup form bean
        BookmarksForm form = (BookmarksForm)
        strutsModule.createActionForm(BookmarksForm.class);
        
        // Setup mapping and request parameters
        MockActionMapping mapping = strutsModule.getMockActionMapping();
        mapping.setupForwards(new String[] {"access-denied","BookmarksForm"});
        mapping.setParameter("method");
        strutsModule.addRequestParameter("weblog",testWeblog.getHandle());
        strutsModule.addRequestParameter("method","selectFolder");
        
        try {
            RollerRequest rreq = new RollerRequest(strutsModule.getMockPageContext());
            rreq.setWebsite(testWeblog);
            strutsModule.setRequestAttribute(RollerRequest.ROLLER_REQUEST, rreq);
            strutsModule.actionPerform(BookmarksAction.class, form);
        } catch (Throwable e) {
            e.printStackTrace();
            fail();
        }
        // Test for success
        strutsModule.verifyNoActionMessages();
        strutsModule.verifyForward("BookmarksForm");
        
        // Verify objects we put in context for JSP page
        verifyPageContext();
    }


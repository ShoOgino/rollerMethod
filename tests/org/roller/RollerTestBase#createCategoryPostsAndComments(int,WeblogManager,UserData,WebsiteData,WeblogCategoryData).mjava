    private void createCategoryPostsAndComments(
            int depth,
            WeblogManager wmgr,
            UserData user,
            WebsiteData website,
            WeblogCategoryData rootCat) throws RollerException {
        Calendar commentCalendar = Calendar.getInstance();
        
        Timestamp day;
        WeblogEntryData wd = null;
        if (depth == 0) {
            // roll calendar forward one day
            mCalendar.roll(Calendar.DATE, true);
            day = new Timestamp(mCalendar.getTime().getTime());
            day.setNanos(0); // kludge
            wd = new WeblogEntryData(
                    null,      // id
                    rootCat,    // category
                    website,    // websiteId
                    user,
                    "Future Blog", // title
                    null,
                    "Blog to the Future", // text
                    null,      // anchor
                    day,        // pubTime
                    day,        // updateTime
                    WeblogEntryData.PUBLISHED ); // publishEntry
            wd.save();
            
            // roll calendar back to today
            mCalendar.roll(Calendar.DATE, false);
        }
        
        // create entries under the category passed in
        for ( int k=0; k<mEntriesPerCatCount; k++ ) {
            day = new Timestamp(mCalendar.getTime().getTime());
            day.setNanos(0); // kludge
            
            boolean published = k%2==0 ? true : false;
            String status = published
                    ? WeblogEntryData.PUBLISHED : WeblogEntryData.DRAFT;
            
            wd = new WeblogEntryData(
                    null,      // id
                    rootCat,    // category
                    website,    // websiteId
                    user,
                    rootCat.getName() + ":entry"+k, // title
                    null,
                    rootCat.getName() + ":entry"+k, // text
                    null,      // anchor
                    day,        // pubTime
                    day,        // updateTime
                    status ); // publishEntry
            wd.save();
            
            // add at beginning of list
            mEntriesCreated.add(0, wd);
            
            Timestamp now = wd.getPubTime();
            for ( int l=0; l<mCommentCount; l++ ) {
                // need to seperate comments in time
                // it took alot of trial & error to get this working!
                commentCalendar.setTime(now);
                commentCalendar.add(Calendar.HOUR, l);
                now = new Timestamp(commentCalendar.getTime().getTime());
                CommentData comment = new CommentData();
                comment.setWeblogEntry(wd);
                comment.setName("name"+l);
                comment.setEmail("test"+l+"@test.com");
                comment.setContent("This is my comment");
                comment.setPostTime(now);
                comment.setApproved(Boolean.TRUE);
                comment.setPending(Boolean.FALSE);
                comment.setSpam(Boolean.FALSE);
                comment.setNotify(Boolean.FALSE);
                comment.save();
                mCommentsCreated.add(comment);
                mLogger.debug("         Created comment ["
                        +comment.getId()+"]"+ comment.getName());
            }
            
            mCalendar.add(Calendar.DATE, -1);
        }
        
        // create categories under the category passed in
        for ( int j=0; j<mCatCount; j++ ) {
            WeblogCategoryData cat = wmgr.createWeblogCategory(
                    website,                       // website
                    rootCat,                       // parent
                    rootCat.getName()+"-cat"+j,    // name
                    "desc",                        // description
                    null );                       // image
            cat.save();
            mCategoriesCreated.add(cat);
            mLogger.debug("   Created cat ["+cat.getId()+"]"+cat.getName());
            
            if (depth < mCatDepth) {
                createCategoryPostsAndComments(depth+1, wmgr, user, website, cat);
            }
        }
    }


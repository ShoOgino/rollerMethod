    /**
     * Test permissions removal and related cascades, specifically:
     * <ul>
     * <li> when user is deleted, permissions are deleted too </li>
     * <li> when website is deleted, permissions are deleted too </li>
     * </ul>
     */
     public void testRemoveWebsiteCascade() throws Exception
     {
         try 
         {
             UserManager umgr = getRoller().getUserManager();
             String userName = "testuser0";
             String permsId = null;
             UserData tuser = (UserData)mUsersCreated.get(0);       
             WebsiteData tsite = (WebsiteData)mWebsitesCreated.get(0);
             
             // first, remove existing permissions for tuser in tsite
             getRoller().begin();
             {
                 tuser = umgr.retrieveUser(tuser.getId());
                 tsite = umgr.retrieveWebsite(tsite.getId());
                 umgr.retireUser(tsite, tuser);
             }
             getRoller().commit();  

             // add user to website
             getRoller().begin();
             {
                 tuser = umgr.retrieveUser(tuser.getId());
                 tsite = umgr.retrieveWebsite(tsite.getId());
                 PermissionsData perms = new PermissionsData();
                 perms.setUser(tuser);
                 perms.setWebsite(tsite);
                 perms.save();
                 permsId = perms.getId();
             }
             getRoller().commit();    
             
             // delete website
             getRoller().begin(UserData.SYSTEM_USER);
             {
                 tsite = umgr.retrieveWebsite(tsite.getId());
                 tsite.remove();                 
             }
             getRoller().commit(); 
             
             // ensure that permission was deleted too
             getRoller().begin();
             {
                 assertNull(getRoller().getPersistenceStrategy().load(
                         permsId, PermissionsData.class));                 
             }
             getRoller().commit();                          
         }
         catch (Throwable e)
         {
             e.printStackTrace();
             fail();
         }               
     }


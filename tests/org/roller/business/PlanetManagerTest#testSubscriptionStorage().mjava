    public void testSubscriptionStorage() throws Exception
    {
        Roller roller = getRoller();
        assertNotNull(roller);       
        PlanetManager planet = roller.getPlanetManager();
        assertNotNull(planet);        
        
        {   // save subscription
            roller.begin();
            PlanetSubscriptionData sub = new PlanetSubscriptionData();
            sub.setFeedUrl("test_url");
            planet.saveSubscription(sub);
            roller.commit();
        }
        {   // retrieve subscription and add to group
            roller.begin();
            
            PlanetGroupData group = new PlanetGroupData();
            group.setDescription("test_group_desc");
            group.setHandle("test_handle");
            group.setTitle("test_title");
            planet.saveGroup(group);
            
            PlanetSubscriptionData sub = planet.getSubscription("test_url");
            assertNotNull(sub);
            group.addSubscription(sub);
            
            PlanetSubscriptionData sub1 = new PlanetSubscriptionData();
            sub1.setFeedUrl("test_url1");
            planet.saveSubscription(sub1);
            
            List subs = new ArrayList();
            subs.add(sub1);
            group.addSubscriptions(subs); 
           
            planet.saveGroup(group);

            roller.commit();
        }
        {   // get group and check it's subscriptions, remove it
            roller.begin();
            PlanetGroupData group = planet.getGroup("test_handle");
            Set subs = group.getSubscriptions();
            assertEquals(2, subs.size());            
            planet.deleteGroup(group);
            roller.commit();
        }
        {   // make sure group gone, subs still there, then remove them too
            roller.begin();
            PlanetGroupData group = planet.getGroup("test_handle");
            assertNull(group);
            PlanetSubscriptionData sub = planet.getSubscription("test_url");
            assertNotNull(sub);
            PlanetSubscriptionData sub1 = planet.getSubscription("test_url1");
            assertNotNull(sub1);
            planet.deleteSubscription(sub);
            planet.deleteSubscription(sub1);
            roller.commit();
        }
        {   // make sure subscriptions are gone
            roller.begin();
            PlanetSubscriptionData sub = planet.getSubscription("test_url");
            assertNull(sub);
            PlanetSubscriptionData sub1 = planet.getSubscription("test_url1");
            assertNull(sub1);
            roller.rollback();
        }
    }


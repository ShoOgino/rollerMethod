    //-----------------------------------------------------------------------
    public void testPutEntry() throws Exception
    {
        String newTitle = "Entry edited with Atom";
        String testAnchor = "test_new_entry";
        String username = authenticateUser();
        
        // create an Entry for to be updated
        WeblogCategoryData category = mWebsite.getBloggerCategory();
        //getRoller().begin();
        WeblogEntryData rEntry = new WeblogEntryData(
            (String)null, category, mWebsite, "Test New Entry", "", 
            "This is a test", testAnchor, 
            new Timestamp(new java.util.Date().getTime()), 
            (Timestamp)null, Boolean.FALSE);
        rEntry.save();
        getRoller().commit();
        //getRoller().begin();
        rEntry = getRoller().getWeblogManager().getWeblogEntryByAnchor(mWebsite, testAnchor);

        // set pathinfo
        mkRequest.setPathInfo("/" + username + "/entry/" + rEntry.getId());

        // set payload of Atom Entry, with changed title
        Entry atomEntry = AtomAssistant.convertToAtomEntry(rEntry, true);
        atomEntry.getTitle().setText(newTitle);
        mkRequest.setBodyContent(atomEntry.toString());

        servletTestModule.doPut();

        MockHttpServletResponse response = mockFactory.getMockResponse();

        // make sure it didn't return an error
        //mLogger.debug("ResponseCode:" + response.getStatusCode());
        assertFalse("Returned SC_BAD_REQUEST (Error)\n" + servletTestModule.getOutput(),
                    HttpServletResponse.SC_BAD_REQUEST == response.getStatusCode());
        assertTrue("Did not return SC_RESET_CONTENT status",
                   HttpServletResponse.SC_RESET_CONTENT == response.getStatusCode());
        
        // refetch Entry from db, confirm title changed
        rEntry = getRoller().getWeblogManager().retrieveWeblogEntry(rEntry.getId());
        assertEquals(newTitle, rEntry.getTitle());
    }


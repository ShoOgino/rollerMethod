    /**
     * Test basic persistence operations ... Create, Update, Delete.
     * @throws Exception if one is raised
     */
    @Test
    public void testTaskLockCRUD() throws Exception {
        
        ThreadManager mgr = WebloggerFactory.getWeblogger().getThreadManager();
        
        // need a test task to play with
        TestTask task = new TestTask();
        task.init();
        
        // try to acquire a lock
        assertTrue(mgr.registerLease(task), "Failed to acquire lease.");
        // We don't flush here because registerLease should flush on its own
        TestUtils.endSession(false);
        
        // make sure task is locked
        assertFalse(mgr.registerLease(task),"Acquired lease a second time when we shouldn't have been able to.");
        TestUtils.endSession(false);
        
        // try to release a lock
        assertTrue(mgr.unregisterLease(task), "Release of lease failed.");
        // We don't flush here because unregisterLease should flush on its own
        TestUtils.endSession(false);

        // Current unregisterLease semantics are idempotent.  Double release should
        // actually succeed.
        assertTrue( mgr.unregisterLease(task), "Second release failed.");
        TestUtils.endSession(false);
    }


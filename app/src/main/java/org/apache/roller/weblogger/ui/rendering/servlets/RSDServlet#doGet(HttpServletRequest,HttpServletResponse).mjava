    /**
     * Handle GET requests for weblog pages.
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        log.debug("Entering");
        Weblog weblog;
        WeblogRequest weblogRequest;

        try {
            weblogRequest = new WeblogRequest(request);

            // now make sure the specified weblog really exists
            weblog = weblogRequest.getWeblog();
            if (weblog == null) {
                throw new WebloggerException("Unable to lookup weblog: "
                        + weblogRequest.getWeblogHandle());
            }

        } catch (Exception e) {
            // invalid rsd request format or weblog doesn't exist
            log.debug("error creating weblog request", e);
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        // Respond with 304 Not Modified if it is not modified.
        long lastModified = System.currentTimeMillis();
        if (weblog.getLastModified() != null) {
            lastModified = weblog.getLastModified().getTime();
        }
        if (ModDateHeaderUtil.respondIfNotModified(request, response,
                lastModified, weblogRequest.getDeviceType())) {
            return;
        }

        // set last-modified date
        ModDateHeaderUtil.setLastModifiedHeader(response, lastModified,
                weblogRequest.getDeviceType());

        // set the content type
        response.setContentType("application/rsd+xml; charset=utf-8");

        // populate the model
        HashMap<String, Object> model = new HashMap<String, Object>();
        model.put("website", weblog);
        model.put("absBaseURL", WebloggerRuntimeConfig.getAbsoluteContextURL());

        // lookup Renderer we are going to use
        Renderer renderer;
        try {
            log.debug("Looking up renderer");
            Template template = new StaticTemplate("weblog/rsd.vm", "velocity");
            renderer = RendererManager.getRenderer(template,
                    DeviceType.standard);
        } catch (Exception e) {
            // nobody wants to render my content :(
            log.error("Couldn't find renderer for rsd template", e);

            if (!response.isCommitted()) {
                response.reset();
            }
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        // render content
        CachedContent rendererOutput = new CachedContent(RollerConstants.FOUR_KB_IN_BYTES);
        try {
            log.debug("Doing rendering");
            renderer.render(model, rendererOutput.getCachedWriter());

            // flush rendered output and close
            rendererOutput.flush();
            rendererOutput.close();
        } catch (Exception e) {
            // bummer, error during rendering
            log.error("Error during rendering for rsd template", e);

            if (!response.isCommitted()) {
                response.reset();
            }
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        // post rendering process

        // flush rendered content to response
        log.debug("Flushing response output");
        response.setContentLength(rendererOutput.getContent().length);
        response.getOutputStream().write(rendererOutput.getContent());

        log.debug("Exiting");
    }


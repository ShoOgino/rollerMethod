    /**
     * Initialize PageModel and allow PageModel to initialized VelocityContext.
     */
    public void init(URLStrategy strat,
            HttpServletRequest request,
            Weblog website,
            WeblogEntry entry,
            WeblogCategory category,
            Date date,
            boolean isDay,
            boolean isMonth,
            String locale) {
        
        urlStrategy = strat;
        mRequest = request;
        
        // data we'll need in the methods
        mWebsite = website;
        mEntry = entry;
        mCategory = category;
        mDate = date;
        mIsDaySpecified = isDay;
        mIsMonthSpecified = isMonth;
        mLocale = locale;
        
        mBookmarkMgr = WebloggerFactory.getWeblogger().getBookmarkManager();
        mRefererMgr  = WebloggerFactory.getWeblogger().getRefererManager();
        mUserMgr     = WebloggerFactory.getWeblogger().getUserManager();
        mWeblogMgr   = WebloggerFactory.getWeblogger().getWeblogManager();
        mWeblogEntryMgr   = WebloggerFactory.getWeblogger().getWeblogEntryManager();
        
        // Preload what we can for encapsulation.  What we cannot preload we
        // will use the Managers later to fetch.
        
        // Get the pages, put into context & load map
        if (mWebsite != null) {
            
            List pages = Collections.EMPTY_LIST;
            try {
                pages = mWebsite.getTheme().getTemplates();
            } catch (WebloggerException ex) {
                mLogger.error("error getting weblog pages", ex);
            }
            
            Iterator pageIter = pages.iterator();
            while (pageIter.hasNext()) {
                ThemeTemplate page = (ThemeTemplate) pageIter.next();
                mPageMap.put(page.getName(),ThemeTemplateWrapper.wrap(page));
            }
        }
    }


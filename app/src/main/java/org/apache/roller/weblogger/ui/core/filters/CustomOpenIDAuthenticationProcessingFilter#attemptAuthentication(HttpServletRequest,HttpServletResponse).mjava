    /**
     * @throws org.springframework.security.core.AuthenticationException
     */
    @Override
    public Authentication attemptAuthentication(HttpServletRequest req, HttpServletResponse rsp) throws IOException {
        OpenIDAuthenticationToken auth;

        // Processing standard OpenId user authentication    
        auth = (OpenIDAuthenticationToken) super.attemptAuthentication(req, rsp);

        // auth will be null on the first pass of super.attemptAuthentication()
        if (auth != null) {
            GrantedAuthority ga = (GrantedAuthority) auth.getAuthorities().toArray()[0];

            if (ga.getAuthority().equals("rollerOpenidLogin")) {

                /* TODO: when Spring Security 2.1 is released, we can uncomment
                 * this code, which will allow us to pre-populate the new user
                 * registration form with information from the OpenID Provider.
                 *
                Collection<OpenIDUserAttribute> sREGAttributesList = auth.getAttributes();
                OpenIDUserAttribute openidName = new OpenIDUserAttribute(
                    OpenIDUserAttribute.Attributes.openidname.toString(), "");
                openidName.setValue(auth.getIdentityUrl());
                sREGAttributesList.add(openidName);

                // TODO: find a better place to stash attributes
                UserManager mgr = WebloggerFactory.getWeblogger().getUserManager();
                mgr.userAttributes.put(
                    UserAttribute.Attributes.openidUrl.toString(),
                    sREGAttributesList);
                */

            }
        }
        return auth;
    }


    /** Download the MT bannedwordslist from the web to our uploads directory. */
    private boolean downloadBannedwordslist() {
        
        boolean bannedwordslistUpdated = false;
        try {
            mLogger.debug("Attempting to download MT bannedwordslist");
            
            URL url = new URL(BANNEDWORDSLIST_URL);
            HttpURLConnection connection = 
                    (HttpURLConnection) url.openConnection();
            
            // after spending way too much time debugging i've discovered
            // that the bannedwordslist server is selective based on the User-Agent
            // header.  without this header set i always get a 403 response :(
            connection.setRequestProperty("User-Agent", "Mozilla/5.0");
            
            if (this.lastModified != null) {
                connection.setRequestProperty("If-Modified-Since",
                        DateUtil.formatRfc822(this.lastModified));
            }
            
            int responseCode = connection.getResponseCode();
            
            mLogger.debug("HttpConnection response = "+responseCode);
            
            // did the connection return NotModified? If so, no need to parse
            if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) {
                mLogger.debug("MT bannedwordslist site says we are current");
                return false;
            }
            
            // did the connection return a LastModified header?
            long lastModifiedLong = 
                    connection.getHeaderFieldDate("Last-Modified", -1);
            
            // if the file is newer than our current then we need do update it
            if (responseCode == HttpURLConnection.HTTP_OK &&
                    (this.lastModified == null ||
                    this.lastModified.getTime() < lastModifiedLong)) {

                mLogger.debug("my last modified = " + (this.lastModified == null ? "(null)" :
                        this.lastModified.getTime()));
                mLogger.debug("MT last modified = " + lastModifiedLong);
                
                // save the new bannedwordslist
                InputStream instream = connection.getInputStream();
                
                String uploadDir = WebloggerConfig.getProperty("uploads.dir");
                String path = uploadDir + File.separator + BANNEDWORDSLIST_FILE;
                FileOutputStream outstream = new FileOutputStream(path);
                
                mLogger.debug("writing updated MT bannedwordslist to "+path);
                
                // read from url and write to file
                byte[] buf = new byte[RollerConstants.FOUR_KB_IN_BYTES];
                int length;
                while((length = instream.read(buf)) > 0) {
                    outstream.write(buf, 0, length);
                }
                
                outstream.close();
                instream.close();
                
                bannedwordslistUpdated = true;
                
                mLogger.debug("MT bannedwordslist download completed.");
                
            } else {
                mLogger.debug("bannedwordslist *NOT* saved, assuming we are current");
            }
            
        } catch (Exception e) {
            mLogger.error("error downloading bannedwordslist", e);
        }
        
        return bannedwordslistUpdated;
    }


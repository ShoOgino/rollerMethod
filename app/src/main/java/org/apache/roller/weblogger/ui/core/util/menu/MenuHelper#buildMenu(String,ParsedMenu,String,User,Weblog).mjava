    /**
     * Builds the menu.
     * 
     * @param menuId
     *            the menu id
     * @param menuConfig
     *            the menu config
     * @param currentAction
     *            the current action
     * @param user
     *            the user
     * @param weblog
     *            the weblog
     * 
     * @return the menu
     * 
     * @throws WebloggerException
     *             the weblogger exception
     */
    private static Menu buildMenu(String menuId, ParsedMenu menuConfig,
            String currentAction, User user, Weblog weblog)
            throws WebloggerException {

        // log.debug("creating menu for action - " + currentAction);

        Menu tabMenu = new Menu();
        UserManager umgr = WebloggerFactory.getWeblogger().getUserManager();

        // iterate over tabs from parsed config
        for (ParsedTab configTab : menuConfig.getTabs()) {

            // log.debug("config tab = " + configTab.getName());

            // does this tab have an enabledProperty?
            boolean includeTab = true;
            if (configTab.getEnabledProperty() != null) {
                includeTab = getBooleanProperty(configTab.getEnabledProperty());
            } else if (configTab.getDisabledProperty() != null) {
                includeTab = !getBooleanProperty(configTab
                        .getDisabledProperty());
            }

            // user roles check
            if (includeTab && configTab.getGlobalPermissionActions() != null
                    && !configTab.getGlobalPermissionActions().isEmpty()) {
                try {
                    GlobalPermission perm = new GlobalPermission(
                            configTab.getGlobalPermissionActions());
                    if (!umgr.checkPermission(perm, user)) {
                        includeTab = false;
                    }
                } catch (WebloggerException ex) {
                    log.error("ERROR: fetching user roles", ex);
                    includeTab = false;
                }
            }

            // weblog permissions check
            if (includeTab && configTab.getWeblogPermissionActions() != null
                    && !configTab.getWeblogPermissionActions().isEmpty()) {
                WeblogPermission perm = new WeblogPermission(weblog,
                        configTab.getWeblogPermissionActions());
                includeTab = umgr.checkPermission(perm, user);
            }

            if (includeTab) {

                // log.debug("tab allowed - " + configTab.getName());

                // all checks passed, tab should be included
                MenuTab tab = new MenuTab();
                tab.setKey(configTab.getName());

                // setup tab items
                boolean firstItem = true;
                boolean selectable = true;

                // See if we need to include tab item for current tab
                HashMap<String, HashSet<String>> menu = itemMenu.get(menuId);
                HashSet<String> item = null;
                if (menu != null) {
                    // Should always have an item
                    item = menu.get(configTab.getName());
                }

                for (ParsedTabItem configTabItem : configTab.getTabItems()) {

                    // log.debug("config tab item = " +
                    // configTabItem.getName());

                    boolean includeItem = true;

                    if (currentAction != null && !item.contains(currentAction)) {
                        // includeItem = false;
                        // Set first action on menu
                        // if (firstItem) {
                        tab.setAction(configTabItem.getAction());
                        // firstItem = false;
                        // }
                        // System.out.println("skipped : "
                        // + configTabItem.getAction());
                        // Skip the rest of this menu
                        break;
                    }

                    if (configTabItem.getEnabledProperty() != null) {
                        includeItem = getBooleanProperty(configTabItem
                                .getEnabledProperty());
                    } else if (configTabItem.getDisabledProperty() != null) {
                        includeItem = !getBooleanProperty(configTabItem
                                .getDisabledProperty());
                    }

                    // user roles check
                    if (includeItem
                            && configTabItem.getGlobalPermissionActions() != null
                            && !configTabItem.getGlobalPermissionActions()
                                    .isEmpty()) {
                        GlobalPermission perm = new GlobalPermission(
                                configTabItem.getGlobalPermissionActions());
                        if (!umgr.checkPermission(perm, user)) {
                            includeItem = false;
                        }
                    }

                    // weblog permissions check
                    if (includeItem
                            && configTabItem.getWeblogPermissionActions() != null
                            && !configTabItem.getWeblogPermissionActions()
                                    .isEmpty()) {
                        WeblogPermission perm = new WeblogPermission(weblog,
                                configTabItem.getWeblogPermissionActions());
                        includeItem = umgr.checkPermission(perm, user);
                    }

                    if (includeItem) {

                        // log.debug("tab item allowed - "
                        // + configTabItem.getName());

                        // all checks passed, item should be included
                        MenuTabItem tabItem = new MenuTabItem();
                        tabItem.setKey(configTabItem.getName());
                        tabItem.setAction(configTabItem.getAction());

                        // is this the selected item? Only one can be selected
                        // so skip the rest
                        if (currentAction != null && selectable
                                && isSelected(currentAction, configTabItem)) {
                            tabItem.setSelected(true);
                            tab.setSelected(true);
                            selectable = false;
                        }

                        // the url for the tab is the url of the first item of
                        // the tab
                        if (firstItem) {
                            tab.setAction(tabItem.getAction());
                            firstItem = false;
                        }

                        // add the item
                        tab.addItem(tabItem);
                    }
                }

                // add the tab
                tabMenu.addTab(tab);
            }
        }

        return tabMenu;
    }


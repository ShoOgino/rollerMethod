    /**
	 * @see org.roller.presentation.velocity.PagePlugin#render(org.roller.pojos.WeblogEntryData, boolean)
	 */
	public String render(WeblogEntryData entry, String str)
	{
        String text = str;
        
		if (mLogger.isDebugEnabled()) {
			mLogger.debug("render(entry = "+entry.getId()+")");
		}

        /*
         * Get acronyms Properties.
         */
        Properties acronyms = loadAcronyms(entry.getWebsite());
        mLogger.debug("acronyms.size()=" + acronyms.size());
        if (acronyms.size() == 0)
        {
            return text;
        }

        /*
         * Compile the user's acronyms into RegEx patterns.
         */
        Pattern[] acronymPatterns = new Pattern[acronyms.size()];
        String[] acronymTags = new String[acronyms.size()];
        int count = 0;
        for (Iterator iter = acronyms.keySet().iterator(); iter.hasNext();)
        {
            String acronym = (String) iter.next();
            acronymPatterns[count] = Pattern.compile("\\b" + acronym + "\\b");
            mLogger.debug("match '" + acronym + "'");
            acronymTags[count] =
                "<acronym title=\""
                + acronyms.getProperty(acronym)
                + "\">"
                + acronym
                + "</acronym>";
            count++;
        }
        
        // if there are none, no work to do
        if (acronymPatterns == null || acronymPatterns.length == 0) {
            return text;
        }

        return matchAcronyms(text, acronymPatterns, acronymTags);
	}


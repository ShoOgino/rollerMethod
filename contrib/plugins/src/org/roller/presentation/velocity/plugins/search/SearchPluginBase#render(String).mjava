    /**
     * Apply plugin to content of specified String.
     *
     * @param str String to which plugin should be applied.
     * @return Results of applying plugin to string.
     * @see org.roller.model.PagePlugin#render(String)
     */
    public String render(String str) {
        Pattern pattern = getPattern();
        Matcher m = pattern.matcher(str);
        StringBuffer result = new StringBuffer(str.length() + 128);   // rough guess at a reasonable length
        Object[] args = new Object[]{"", "", null, null};
        while (m.find()) {
            // parse out the parts of the match
            String type = m.group(1);
            boolean feelinLucky = type.equals("!");   // are ya feelin lucky? are ya punk?
            String linkText = m.group(2);
            String searchText = m.group(3);
            if (searchText == null || searchText.length() == 0) {
                searchText = linkText;
            }

            // URL-encode the search text
            String encodedSearchText = encodeSearchText(searchText);

            // form the replacement string
            MessageFormat linkFormat = feelinLucky ? getLuckyLinkFormat() : getLinkFormat();
            StringBuffer replacement = new StringBuffer(128);
            args[2] = linkText;
            args[3] = encodedSearchText;
            linkFormat.format(args, replacement, new FieldPosition(0));

            // append replacement
            m.appendReplacement(result, replacement.toString());
        }
        m.appendTail(result);

        return result.toString();
    }


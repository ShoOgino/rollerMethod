    /**
     * Handle GET requests for weblog feeds.
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        log.debug("Entering");

        // set content type
        response.setContentType("text/html; charset=utf-8");
        
        
        // initialize model
        HashMap model = new HashMap();
        try {
            // populate the rendering model
            Map initData = new HashMap();
            
            // Load models for pages
            String models = PlanetConfig.getProperty("rendering.homepageModels");
            ModelLoader.loadModels(models, model, initData, true);

        } catch (RollerException ex) {
            log.error("ERROR loading model", ex);

            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            return;
        }


        // lookup Renderer we are going to use
        Renderer renderer = null;
        try {
            log.debug("Looking up renderer");
            
            // what template are we going to render?
            Template template = new StaticTemplate("home.vm", null, "velocity");
            
            // get the Renderer
            renderer = RendererManager.getRenderer(template);
            
        } catch(Exception e) {
            // nobody wants to render my content :(

            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        
        
        // render content
        try {
            log.debug("Doing rendering");
            renderer.render(model, response.getWriter());
        } catch(Exception e) {
            // bummer, error during rendering
            log.error("Error during rendering", e);

            if(!response.isCommitted()) response.reset();
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }


        // post rendering process

        // flush rendered content to response
        log.debug("Flushing response output");
        //response.setContentLength(rendererOutput.getContent().length);
        //response.getOutputStream().write(rendererOutput.getContent());

        log.debug("Exiting");
    }


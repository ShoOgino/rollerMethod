    /** Creates a new instance of MailProvider */
    public MailProvider() throws WebloggerException {
        String connectionTypeString = RollerConfig.getProperty("mail.configurationType"); 
        if ("properties".equals(connectionTypeString)) {
            type = ConfigurationType.MAIL_PROPERTIES;
        }
        jndiName =     RollerConfig.getProperty("mail.jndi.name");
        mailHostname = RollerConfig.getProperty("mail.hostname");
        mailUsername = RollerConfig.getProperty("mail.username");
        mailPassword = RollerConfig.getProperty("mail.password");
        try {
            mailPort = Integer.parseInt(RollerConfig.getProperty("mail.port"));
        } catch (Throwable t) {
            log.warn("mail server port not a valid integer, ignoring");
        }
        
        // init and connect now so we fail early
        if (type == ConfigurationType.JNDI_NAME) {            
            String name = "java:comp/env/" + jndiName;
            try {
                Context ctx = (Context) new InitialContext().lookup(name);
                session = (Session)ctx.lookup(name);        
            } catch (NamingException ex) {
                throw new WebloggerException("ERROR looking up mail-session with JNDI name: " + name);
            }
        } else {
            Properties props = new Properties();
            props.put("mail.smtp.host", mailHostname);
            props.put("mail.smtp.auth", "true");
            if (mailPort != -1) props.put("mail.smtp.port", ""+mailPort);
            session = Session.getDefaultInstance(props, null);
        }
        try {
            Transport transport = getTransport();
            transport.close();
        } catch (Throwable t) {
            throw new WebloggerException("ERROR connecting to mail server", t);
        }
        
    }


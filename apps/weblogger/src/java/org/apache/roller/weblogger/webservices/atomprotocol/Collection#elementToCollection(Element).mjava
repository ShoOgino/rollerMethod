    /** Deserialize an Atom service collection XML element into an object */
    public static Collection elementToCollection(Element element) {
        String newHref = element.getAttribute("href").getValue();
        Element titleElem = element.getChild("title", AtomService.ATOM_FORMAT);
        String newTitle = titleElem.getText();
        String newType = null;
        if (titleElem.getAttribute("type", AtomService.ATOM_FORMAT) != null) {
            newType = titleElem.getAttribute("type", AtomService.ATOM_FORMAT).getValue();
        }
        Collection collection = new Collection(newTitle, newType, newHref);
                
        Element memberType = element.getChild("accept",  AtomService.ATOM_PROTOCOL);
        if (memberType != null) {
            collection.setAccept(memberType.getText());
        }
        
        // Loop to parse <app:categories> element to Categories objects
        List catsElems = element.getChildren("categories", AtomService.ATOM_PROTOCOL);
        for (Iterator catsIter = catsElems.iterator(); catsIter.hasNext();) {
            Element catsElem = (Element) catsIter.next();  
            Categories cats = new Categories();
            if ("yes".equals(catsElem.getAttribute("fixed", AtomService.ATOM_PROTOCOL))) {
                cats.setFixed(true);
            }
            // Loop to parse <atom:category> elemenents to Category objects
            List catElems = catsElem.getChildren("category", AtomService.ATOM_FORMAT);
            for (Iterator catIter = catElems.iterator(); catIter.hasNext();) {                
                Element catElem = (Element) catIter.next();
                Category cat = new Category();
                cat.setTerm(catElem.getAttributeValue("term"));                
                cat.setLabel(catElem.getAttributeValue("label")); 
                cat.setScheme(catElem.getAttributeValue("scheme"));
                cats.addCategory(cat);
            }
            collection.addCategories(cats);
        }
        return collection;
    }


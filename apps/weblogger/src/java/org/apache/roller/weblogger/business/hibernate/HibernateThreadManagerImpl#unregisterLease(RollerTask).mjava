    /**
     * Try to release the lock for a given RollerTask.
     */
    public boolean unregisterLease(RollerTask task) {
        
        // query for existing lease record first
        TaskLock taskLock = null;
        try {
            taskLock = this.getTaskLockByName(task.getName());
            
            if(taskLock == null) {
                return false;
            }
            
        } catch (WebloggerException ex) {
            log.warn("Error getting TaskLock", ex);
            return false;
        }
        
        // try to release lease, just set lease time to 0
        try {
            Session session = ((HibernatePersistenceStrategy)this.strategy).getSession();
            String queryHQL = "update TaskLock set timeLeased=:interval "+
                    "where name=:name and client=:client";
            Query query = session.createQuery(queryHQL);
            query.setInteger("interval", task.getInterval());
            query.setString("name", task.getName());
            query.setString("client", task.getClientId());
            int result = query.executeUpdate();
            
            // this may not be needed
            RollerFactory.getRoller().flush();
            
            if(result == 1) {
                return true;
            }
            
        } catch (Exception e) {
            log.warn("Error releasing lease.", e);
            return false;
        }
        
        return false;
    }


    /**
     * Is this menu selected?
     * @throws RollerException
     */
    public boolean isSelected( HttpServletRequest req ) throws RollerException {
        boolean selected = false;
        HttpSession ses = req.getSession(false);
        
        // try to get state from request param then attribute
        String menuKey = req.getParameter(RollerMenuModel.MENU_KEY );
        if (null == menuKey) {
            menuKey = (String)req.getAttribute(RollerMenuModel.MENU_KEY);
        }
        if (menuKey != null && menuKey.equals(mName)) {
            selected = true;
        }
        // next, if submenu is selected, then we're selected
        else if (getSelectedMenuItem(req, false) != null) {
            selected = true;
        }
        // next, try to use Struts forward to determine state
        else if (mForward != null) {
            ServletContext ctx = RollerContext.getServletContext();
            ModuleConfig mConfig = RequestUtils.getModuleConfig(req, ctx);
            ActionMapping amapping = (ActionMapping)req.getAttribute(Globals.MAPPING_KEY);
            List fconfigs = new ArrayList();
            fconfigs.add(mConfig.findForwardConfig(mForward));
            if (mSubforwards != null) {
                String[] subforwards = mSubforwards.split(",");
                for (int i=0; i<subforwards.length; i++) {
                    fconfigs.add(mConfig.findForwardConfig(subforwards[i]));
                }
            }
            for (Iterator iter = fconfigs.iterator(); iter.hasNext();) {
                ForwardConfig fconfig = (ForwardConfig)iter.next();
                String fwdPath = fconfig.getPath();
                int end = fwdPath.indexOf(".do");
                fwdPath = (end == -1) ? fwdPath : fwdPath.substring(0, end);
                if  (fwdPath.equals(amapping.getPath())) {
                    selected = true;
                    break;
                }
            }
        }
        return selected;
    }


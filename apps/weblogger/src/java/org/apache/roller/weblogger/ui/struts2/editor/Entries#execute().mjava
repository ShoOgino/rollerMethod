    public String execute() {
        
        if (log.isDebugEnabled()) {
            log.debug("entries bean is ...\n"+getBean().toString());
        }
        
        List<WeblogEntry> entries = null;
        boolean hasMore = false;
        try {
            String status = getBean().getStatus();
            
            WeblogManager wmgr = RollerFactory.getRoller().getWeblogManager();
            List<WeblogEntry> rawEntries = wmgr.getWeblogEntries(
                    getActionWeblog(),
                    null,
                    getBean().getStartDate(),
                    getBean().getEndDate(),
                    getBean().getCategoryPath(),
                    getBean().getTags(),
                    ("ALL".equals(status)) ? null : status,
                    getBean().getText(),
                    getBean().getSortBy(),
                    null,
                    null,
                    getBean().getPage() * COUNT,
                    COUNT + 1);
            entries = new ArrayList<WeblogEntry>();
            entries.addAll(rawEntries);
            if (entries != null && entries.size() > 0) {
                log.debug("query found "+rawEntries.size()+" results");
                
                if(rawEntries.size() > COUNT) {
                    entries.remove(entries.size()-1);
                    hasMore = true;
                }
                
                setFirstEntry((WeblogEntry)entries.get(0));
                setLastEntry((WeblogEntry)entries.get(entries.size()-1));
            }
        } catch (WebloggerException ex) {
            log.error("Error looking up entries", ex);
            // TODO: i18n
            addError("Error looking up entries");
        }
        
        // build entries pager
        String baseUrl = buildBaseUrl();
        setPager(new EntriesPager(baseUrl, getBean().getPage(), entries, hasMore));
                
        return LIST;
    }


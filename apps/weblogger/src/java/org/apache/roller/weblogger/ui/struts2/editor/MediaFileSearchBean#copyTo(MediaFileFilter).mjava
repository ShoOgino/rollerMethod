	public void copyTo(MediaFileFilter dataHolder) {
    	dataHolder.setName(this.name);
    	
    	if (!StringUtils.isEmpty(this.type)) {
        	MediaFileType filterType = null;
    		if ("Audio".equals(this.type)) {
    			filterType = MediaFileType.AUDIO;
    		}
    		else if ("Video".equals(this.type)) {
    			filterType = MediaFileType.VIDEO;
    		}
    		else if ("Image".equals(this.type)) {
    			filterType = MediaFileType.IMAGE;
    		}
    		else if ("Others".equals(this.type)) {
    			filterType = MediaFileType.OTHERS;
    		}
    		
    		dataHolder.setType(filterType);
    	}
    	
    	if (this.size > 0) {
        	SizeFilterType type;
        	switch(this.sizeFilterType) {
        	case 0: type = SizeFilterType.GT;break;
        	case 1: type = SizeFilterType.GTE;break;
        	case 2: type = SizeFilterType.EQ;break;
        	case 3: type = SizeFilterType.LTE;break;
        	case 4: type = SizeFilterType.LT;break;
        	default: type = null;
        	}
        	dataHolder.setSizeFilterType(type);
        	
        	long filterSize;
        	switch (this.sizeUnit) {
        	case 1: filterSize = this.size * 1024;break;
        	case 2: filterSize = this.size * 1024 * 1024;break;
        	default: filterSize = this.size;
        	}
        	dataHolder.setSize(filterSize);
    	}
    	
    	if (!StringUtils.isEmpty(this.tags)) {
        	List<String> tagsSet = new ArrayList<String>();  
        	for (String tag: this.tags.split(" ")) {
        		tagsSet.add(tag);
        	}
        	dataHolder.setTags(tagsSet);
    	}
    	
    	dataHolder.setStartIndex(pageNum * PAGE_SIZE);
    	/**
    	 * Set length to fetch to one more than what is required.
    	 * This would help us determine whether there are more pages
    	 */
    	dataHolder.setLength(PAGE_SIZE + 1);
    	
    	MediaFileOrder order; 
    	switch(this.sortOption) {
    	case 0: order = MediaFileOrder.NAME;break;
    	case 1: order = MediaFileOrder.DATE_UPLOADED;break;
    	case 2: order = MediaFileOrder.TYPE;break;
    	default: order = null;
    	}
    	dataHolder.setOrder(order);
    }


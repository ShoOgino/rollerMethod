    /**
     * Present the bookmarks and subfolders available in the folder specified
     * by the request.
     */
    public String execute() {
        
        // build list of folders for display
        TreeSet allFolders = new TreeSet(new FolderPathComparator());
        
        try {
            // Build list of all folders, except for current one, sorted by path.
            BookmarkManager bmgr = RollerFactory.getRoller().getBookmarkManager();
            List<WeblogBookmarkFolder> folders = bmgr.getAllFolders(getActionWeblog());
            for(WeblogBookmarkFolder fd : folders) {
                if (!fd.getId().equals(getFolderId())) {
                    allFolders.add(fd);
                }
            }
            
            // build folder path
            WeblogBookmarkFolder parent = getFolder().getParent();
            if(parent != null) {
                List folderPath = new LinkedList();
                folderPath.add(0, getFolder());
                while (parent != null) {
                    folderPath.add(0, parent);
                    parent = parent.getParent();
                }
                setFolderPath(folderPath);
            }
        } catch (WebloggerException ex) {
            log.error("Error building folders list", ex);
            // TODO: i18n
            addError("Error building folders list");
        }
        
        if (allFolders.size() > 0) {
            setAllFolders(allFolders);
        }

        return LIST;
    }


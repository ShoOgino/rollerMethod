    @Override
    public Authentication attemptAuthentication(HttpServletRequest req) throws AuthenticationException {
        OpenIDAuthenticationToken auth = null;

        // Processing standard OpenId user authentication    
        auth = (OpenIDAuthenticationToken) super.attemptAuthentication(req);

        if (auth.getAuthorities()[0].getAuthority().equals("openidLogin")) {

            /* TODO: when Spring Security 2.1 is released, we can uncomment 
             * this code, which will allow us to pre-populate the new user 
             * registration form with information from the OpenID Provider.
             * 
            Collection<OpenIDUserAttribute> sREGAttributesList = auth.getAttributes();
            OpenIDUserAttribute openidName = new OpenIDUserAttribute(
                OpenIDUserAttribute.Attributes.openidname.toString(), "");
            openidName.setValue(auth.getIdentityUrl());
            sREGAttributesList.add(openidName);
            
            // TODO: find a better place to stash attributes
            UserManager mgr = WebloggerFactory.getWeblogger().getUserManager();            
            mgr.userAttributes.put(
                UserAttribute.Attributes.openidUrl.toString(),
                sREGAttributesList);
            */
            
            // Username not found in Roller for this user, so throw exception
            // which will route user to the new user registration page.
            throw new UsernameNotFoundException("ERROR no user: new openid user");
        }
        return auth;
    }


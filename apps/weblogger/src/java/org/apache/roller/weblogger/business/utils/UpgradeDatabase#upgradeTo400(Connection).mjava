    /**
     * Upgrade database for Roller 4.0.0
     */
    private static void upgradeTo400(Connection con) throws WebloggerException {
        
        mLogger.info("Doing upgrade to 400 ...");
        
        try {
            mLogger.info("Setting all weblog default templates with action 'weblog'");
            
            // we are taking all of the weblog defaulte templates defined by the
            // website.defaultpageid column and setting their action value to 'weblog'
            
            // select default page ids
            PreparedStatement selectDefaultTemplateIds = con.prepareStatement(
                    "select defaultpageid from website");
            
            // update template with action value 'weblog'
            PreparedStatement updateTemplateAction = con.prepareStatement(
                    "update webpage set action = ? where id = ?");
            
            // lets get to it
            ResultSet rs = selectDefaultTemplateIds.executeQuery();
            while (rs.next()) {
                updateTemplateAction.clearParameters();
                updateTemplateAction.setString(1, "weblog");
                updateTemplateAction.setString(2, rs.getString(1));
                updateTemplateAction.executeUpdate();
            }
            
            if (!con.getAutoCommit()) con.commit();
            
        } catch (SQLException e) {
            mLogger.error("Problem upgrading database to version 400", e);
            throw new WebloggerException("Problem upgrading database to version 400", e);
        }
        
        
        try {
            mLogger.info("Merging planet groups 'all' and 'external'");
            
            // Move all subscriptions in the planet group 'external' to group 'all'
            
            String allGroupId = null;
            PreparedStatement selectAllGroupId = con.prepareStatement(
                "select id from rag_group where handle = 'all'");
            ResultSet rs = selectAllGroupId.executeQuery();
            if (rs.next()) {
                allGroupId = rs.getString(1);
            }
            
            String externalGroupId = null;
            PreparedStatement selectExternalGroupId = con.prepareStatement(
                "select id from rag_group where handle = 'external'");            
            rs = selectExternalGroupId.executeQuery();
            if (rs.next()) {
                externalGroupId = rs.getString(1);
            }
            
            // we only need to merge if both of those groups already existed
            if(allGroupId != null && externalGroupId != null) {
                PreparedStatement updateGroupSubs = con.prepareStatement(
                        "update rag_group_subscription set group_id = ? where group_id = ?");
                updateGroupSubs.clearParameters();
                updateGroupSubs.setString( 1, allGroupId);
                updateGroupSubs.setString( 2, externalGroupId);
                updateGroupSubs.executeUpdate();
                
                // we no longer need the group 'external'
                PreparedStatement deleteExternalGroup = con.prepareStatement(
                        "delete from rag_group where handle = 'external'");
                deleteExternalGroup.executeUpdate();
                
            // if we only have group 'external' then just rename it to 'all'
            } else if(allGroupId == null && externalGroupId != null) {
                
                // rename 'external' to 'all'
                PreparedStatement renameExternalGroup = con.prepareStatement(
                        "update rag_group set handle = 'all' where handle = 'external'");
                renameExternalGroup.executeUpdate();
            }
            
            if (!con.getAutoCommit()) con.commit();
           
            mLogger.info("Planet group 'external' merged into group 'all'.");
            
        } catch (SQLException e) {
            mLogger.error("Problem upgrading database to version 400", e);
            throw new WebloggerException("Problem upgrading database to version 400", e);
        }
        
        // finally, upgrade db version string to 400
        UpgradeDatabase.updateDatabaseVersion(con, 400);
    }


    // convenience method which handles updating any arbitrary collection of subs
    private void updateSubscriptions(Collection<Subscription> subscriptions) {
        
        PlanetManager pmgr = PlanetFactory.getPlanet().getPlanetManager();
        
        Iterator subs = subscriptions.iterator();
        while (subs.hasNext()) {
            Subscription sub = (Subscription)subs.next();
            
            try {
                // reattach sub.  sub gets detached as we iterate
                sub = pmgr.getSubscriptionById(sub.getId());
            } catch (PlanetException ex) {
                log.warn("Subscription went missing while doing update: "+ex.getMessage());
            }
            
            // this updates and saves
            try {
                updateSubscription(sub);
            } catch(UpdaterException ex) {
                // do a little work to get at the source of the problem
                Throwable cause = ex;
                if(ex.getRootCause() != null) {
                    cause = ex.getRootCause();
                }
                if(cause.getCause() != null) {
                    cause = cause.getCause();
                }
                
                log.warn("Error updating subscription - "+sub.getFeedURL(), cause);
                
            } catch(Exception ex) {
                log.warn("Error updating subscription - "+sub.getFeedURL(), ex);
            }
        }
    }

